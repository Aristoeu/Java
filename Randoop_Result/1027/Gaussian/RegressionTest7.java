package Gaussian;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest7 {

    public static boolean debug = false;

    @Test
    public void test3501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3501");
        java.lang.Double[] doubleArray12 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList13 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList13, doubleArray12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList21 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList13);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList22 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 10, doubleList13);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 4 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(doubleList21);
    }

    @Test
    public void test3502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3502");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList8);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
    }

    @Test
    public void test3503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3503");
        double[][] doubleArray4 = null;
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray47 = new double[][] { doubleArray25, doubleArray32, doubleArray39, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray47);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray49);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray53);
        java.util.ArrayList<java.lang.Double> doubleList55 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray4, doubleArray54);
        java.util.ArrayList<java.lang.Double> doubleList56 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList55);
        java.util.ArrayList<java.lang.Double> doubleList57 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList55);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList58 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList57);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleList55);
        org.junit.Assert.assertNotNull(doubleList56);
        org.junit.Assert.assertNotNull(doubleList57);
    }

    @Test
    public void test3504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3504");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) 'a', doubleArray44);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) '4', doubleArray47);
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray88 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray89 = new double[][] { doubleArray67, doubleArray74, doubleArray81, doubleArray88 };
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray89);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray91);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray91);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) 'a', doubleArray91);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) '4', doubleArray94);
        java.util.ArrayList<java.lang.Double> doubleList96 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray47, doubleArray94);
        java.util.ArrayList<java.lang.Double> doubleList97 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList96);
        java.lang.Class<?> wildcardClass98 = doubleList96.getClass();
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleList96);
        org.junit.Assert.assertNotNull(doubleList97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test3505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3505");
        java.util.ArrayList<java.lang.Double> doubleList3 = null;
        java.util.ArrayList<java.lang.Double> doubleList4 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList3);
        java.util.ArrayList<java.lang.Double> doubleList5 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList4);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList6 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 100, doubleList5);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleList4);
        org.junit.Assert.assertNotNull(doubleList5);
    }

    @Test
    public void test3506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3506");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray70 = new double[][] { doubleArray48, doubleArray55, doubleArray62, doubleArray69 };
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray70);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray38, doubleArray71);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 1, doubleArray38);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 1, doubleArray38);
        java.lang.Class<?> wildcardClass75 = doubleArray74.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleList72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test3507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3507");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray40);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray40);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) '#', doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 100, doubleArray45);
        java.lang.Class<?> wildcardClass47 = doubleArray45.getClass();
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test3508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3508");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray42);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray42, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList82);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList82);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList84);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList85);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList85);
        java.lang.Class<?> wildcardClass88 = doubleList85.getClass();
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test3509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3509");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 10, doubleList9);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertNotNull(doubleList10);
    }

    @Test
    public void test3510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3510");
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray49 = new double[][] { doubleArray27, doubleArray34, doubleArray41, doubleArray48 };
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray49);
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray85 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray86 = new double[][] { doubleArray64, doubleArray71, doubleArray78, doubleArray85 };
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray88);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray49, doubleArray88);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray88);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '4', doubleArray88);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray88);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (short) 0, doubleArray88);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) ' ', doubleArray94);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray94);
        double[][] doubleArray97 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 0, doubleArray96);
        double[][] doubleArray98 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 1, doubleArray96);
        java.lang.Class<?> wildcardClass99 = doubleArray98.getClass();
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertNotNull(doubleArray98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test3511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3511");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList12);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList13);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
    }

    @Test
    public void test3512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3512");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(100, doubleList13);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
    }

    @Test
    public void test3513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3513");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) ' ', doubleList14);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
    }

    @Test
    public void test3514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3514");
        double[] doubleArray14 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray20 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray26 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray32 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray38 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray44 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray45 = new double[][] { doubleArray14, doubleArray20, doubleArray26, doubleArray32, doubleArray38, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray45);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray81);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray46, doubleArray81);
        double[][] doubleArray88 = new double[][] {};
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray88);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray81, doubleArray89);
        double[][] doubleArray93 = new double[][] {};
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray93);
        java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray81, doubleArray94);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray81);
        double[][] doubleArray97 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray81);
        java.lang.Class<?> wildcardClass98 = doubleArray97.getClass();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleList95);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test3515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3515");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray43);
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray83 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray84 = new double[][] { doubleArray62, doubleArray69, doubleArray76, doubleArray83 };
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray84);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray86);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) -1, doubleArray88);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray43, doubleArray88);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList90);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList91);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList91);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) -1, doubleList93);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleList92);
        org.junit.Assert.assertNotNull(doubleList93);
    }

    @Test
    public void test3516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3516");
        java.lang.Double[] doubleArray14 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList15 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList15, doubleArray14);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList21 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList20);
        java.util.ArrayList<java.lang.Double> doubleList22 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList20);
        java.util.ArrayList<java.lang.Double> doubleList23 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList22);
        java.util.ArrayList<java.lang.Double> doubleList24 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList23);
        java.util.ArrayList<java.lang.Double> doubleList25 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList23);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList26 = com.thealgorithms.maths.Gaussian.gaussian((int) '4', doubleList23);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(doubleList21);
        org.junit.Assert.assertNotNull(doubleList22);
        org.junit.Assert.assertNotNull(doubleList23);
        org.junit.Assert.assertNotNull(doubleList24);
        org.junit.Assert.assertNotNull(doubleList25);
    }

    @Test
    public void test3517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3517");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray46);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray46, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 100, doubleArray46);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray82);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 10, doubleArray82);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) 'a', (int) (short) 0, doubleArray85);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
    }

    @Test
    public void test3518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3518");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray40);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray77);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray40, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList80);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList80);
        java.lang.Class<?> wildcardClass84 = doubleList83.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test3519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3519");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray42, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 1, doubleArray42);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 1, doubleArray42);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) 'a', doubleArray78);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(10, (int) (byte) -1, doubleArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
    }

    @Test
    public void test3520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3520");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray40);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray77);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray40, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList81);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList82);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
    }

    @Test
    public void test3521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3521");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray39);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 10, doubleArray41);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 100, doubleArray82);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 0, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) -1, doubleArray85);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray42, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList87);
        java.lang.Class<?> wildcardClass89 = doubleList88.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test3522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3522");
        java.lang.Double[] doubleArray10 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList11 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList11, doubleArray10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList16);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList16);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList16);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
    }

    @Test
    public void test3523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3523");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray68 = new double[][] { doubleArray46, doubleArray53, doubleArray60, doubleArray67 };
        double[][] doubleArray69 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray68);
        java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray37, doubleArray68);
        java.util.ArrayList<java.lang.Double> doubleList71 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList70);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList71);
        java.util.ArrayList<java.lang.Double> doubleList73 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList71);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList73);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList73);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleList70);
        org.junit.Assert.assertNotNull(doubleList71);
        org.junit.Assert.assertNotNull(doubleList72);
        org.junit.Assert.assertNotNull(doubleList73);
        org.junit.Assert.assertNotNull(doubleList74);
    }

    @Test
    public void test3524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3524");
        double[][] doubleArray2 = null;
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray37);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray37);
        java.util.ArrayList<java.lang.Double> doubleList41 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray2, doubleArray37);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList42 = com.thealgorithms.maths.Gaussian.gaussian((int) ' ', doubleList41);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleList41);
    }

    @Test
    public void test3525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3525");
        java.lang.Double[] doubleArray11 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList12 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList12, doubleArray11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList18);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList18);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList21 = com.thealgorithms.maths.Gaussian.gaussian((int) 'a', doubleList18);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
    }

    @Test
    public void test3526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3526");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray42);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray42);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray46, doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList85);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 10, doubleList85);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleList86);
    }

    @Test
    public void test3527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3527");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray43);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray43, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList83);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList83);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList83);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList83);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList83);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList83);
        java.lang.Class<?> wildcardClass90 = doubleList89.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test3528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3528");
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray48 = new double[][] { doubleArray26, doubleArray33, doubleArray40, doubleArray47 };
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray49);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray49);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray49);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 10, doubleArray49);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 10, doubleArray49);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (short) -1, doubleArray49);
        double[][] doubleArray57 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (short) 10, doubleArray49);
        double[][] doubleArray58 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 100, doubleArray57);
        java.lang.Class<?> wildcardClass59 = doubleArray57.getClass();
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test3529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3529");
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray49 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray50 = new double[][] { doubleArray28, doubleArray35, doubleArray42, doubleArray49 };
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray51);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray51);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray51);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 10, doubleArray51);
        double[][] doubleArray57 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 10, doubleArray51);
        double[][] doubleArray58 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (short) -1, doubleArray51);
        double[][] doubleArray59 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (short) 10, doubleArray51);
        double[][] doubleArray60 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (-1), doubleArray59);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray61 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '4', 10, doubleArray59);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertNotNull(doubleArray60);
    }

    @Test
    public void test3530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3530");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList13);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(100, doubleList14);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
    }

    @Test
    public void test3531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3531");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 100, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray43);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 10, doubleArray43);
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray87 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray88 = new double[][] { doubleArray66, doubleArray73, doubleArray80, doubleArray87 };
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 100, doubleArray90);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (-1), doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray93);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) '#', doubleArray43, doubleArray94);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
    }

    @Test
    public void test3532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3532");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 0, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 100, doubleArray46);
        double[][] doubleArray52 = null;
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray88 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray89 = new double[][] { doubleArray67, doubleArray74, doubleArray81, doubleArray88 };
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray90);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray90);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray52, doubleArray93);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) '#', doubleArray93);
        java.util.ArrayList<java.lang.Double> doubleList96 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray46, doubleArray95);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList97 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 100, doubleList96);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleList94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleList96);
    }

    @Test
    public void test3533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3533");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 100, doubleArray37);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 10, (int) (short) 100, doubleArray39);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
    }

    @Test
    public void test3534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3534");
        java.lang.Double[] doubleArray12 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList13 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList13, doubleArray12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList18);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList18);
        java.util.ArrayList<java.lang.Double> doubleList21 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList20);
        java.util.ArrayList<java.lang.Double> doubleList22 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList21);
        java.lang.Class<?> wildcardClass23 = doubleList21.getClass();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(doubleList21);
        org.junit.Assert.assertNotNull(doubleList22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test3535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3535");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray45);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray45);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray49);
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray85 = new double[][] { doubleArray63, doubleArray70, doubleArray77, doubleArray84 };
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 100, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 1, doubleArray50, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList89);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList90);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.gaussian((int) 'a', doubleList91);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleList91);
    }

    @Test
    public void test3536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3536");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray43);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray43, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 0, doubleArray43);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) '#', doubleArray43);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 10, (int) (short) 1, doubleArray85);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, -9999.0, 0.0, 9999.0, -969903.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
    }

    @Test
    public void test3537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3537");
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray46 = new double[][] { doubleArray24, doubleArray31, doubleArray38, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray47);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray47);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray47);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 10, doubleArray47);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 10, doubleArray47);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (short) -1, doubleArray47);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) ' ', 1, doubleArray47);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
    }

    @Test
    public void test3538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3538");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 100, doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (-1), doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray47);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) ' ', (int) (short) -1, doubleArray48);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
    }

    @Test
    public void test3539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3539");
        double[][] doubleArray1 = null;
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray39);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 0, doubleArray41);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList43 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 1, doubleArray1, doubleArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"x\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
    }

    @Test
    public void test3540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3540");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray45);
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray83 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray84 = new double[][] { doubleArray62, doubleArray69, doubleArray76, doubleArray83 };
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray85);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray85);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray47, doubleArray85);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 0, doubleArray85);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray91);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 0, doubleArray91);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray91);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) ' ', (int) (byte) 1, doubleArray94);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
    }

    @Test
    public void test3541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3541");
        java.lang.Double[] doubleArray12 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList13 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList13, doubleArray12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList21 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList20);
        java.util.ArrayList<java.lang.Double> doubleList22 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList20);
        java.lang.Class<?> wildcardClass23 = doubleList22.getClass();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(doubleList21);
        org.junit.Assert.assertNotNull(doubleList22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test3542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3542");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 0, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 100, doubleArray47);
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray89 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray90 = new double[][] { doubleArray68, doubleArray75, doubleArray82, doubleArray89 };
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray90);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray92);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) 'a', doubleArray92);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) '4', doubleArray95);
        java.util.ArrayList<java.lang.Double> doubleList97 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 1, doubleArray47, doubleArray95);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray98 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '4', 10, doubleArray47);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, -9999.0, 0.0, 9999.0, -969903.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertNotNull(doubleList97);
    }

    @Test
    public void test3543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3543");
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray49 = new double[][] { doubleArray27, doubleArray34, doubleArray41, doubleArray48 };
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray49);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray51);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray53);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray54);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray54);
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray83 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray90 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray91 = new double[][] { doubleArray69, doubleArray76, doubleArray83, doubleArray90 };
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray91);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray92);
        java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray54, doubleArray94);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 0, doubleArray94);
        double[][] doubleArray97 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 0, doubleArray96);
        double[][] doubleArray98 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '#', doubleArray97);
        java.lang.Class<?> wildcardClass99 = doubleArray97.getClass();
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleList95);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertNotNull(doubleArray98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test3544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3544");
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray49 = new double[][] { doubleArray27, doubleArray34, doubleArray41, doubleArray48 };
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray50);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray50, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) 'a', doubleArray83);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray83);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 10, doubleArray83);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (short) 1, doubleArray83);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray83);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 1, doubleArray83);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 10, doubleArray83);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 100, (int) (byte) -1, doubleArray83);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
    }

    @Test
    public void test3545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3545");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray42);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray42, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray42);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) '#', doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 100, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) 100, doubleArray79);
        java.lang.Class<?> wildcardClass81 = doubleArray80.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test3546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3546");
        double[][] doubleArray3 = null;
        double[] doubleArray5 = new double[] {};
        double[] doubleArray6 = new double[] {};
        double[] doubleArray7 = new double[] {};
        double[][] doubleArray8 = new double[][] { doubleArray5, doubleArray6, doubleArray7 };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray47 = new double[][] { doubleArray25, doubleArray32, doubleArray39, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray49);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (-1), doubleArray51);
        java.util.ArrayList<java.lang.Double> doubleList53 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray8, doubleArray51);
        java.util.ArrayList<java.lang.Double> doubleList54 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray3, doubleArray8);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '4', (int) (byte) 10, doubleArray3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleList53);
        org.junit.Assert.assertNotNull(doubleList54);
    }

    @Test
    public void test3547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3547");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray40);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray44);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '4', (int) (short) 0, doubleArray45);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
    }

    @Test
    public void test3548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3548");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) '4', doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 10, doubleArray45);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 100, (int) (short) 10, doubleArray45);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
    }

    @Test
    public void test3549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3549");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray45);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray45, doubleArray84);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray45);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray87);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 0, doubleArray87);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 100, doubleArray87);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', (int) (short) 1, doubleArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
    }

    @Test
    public void test3550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3550");
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList13);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian(10, doubleList13);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
    }

    @Test
    public void test3551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3551");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 10, doubleArray37);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 100, (int) '4', doubleArray37);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
    }

    @Test
    public void test3552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3552");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray70 = new double[][] { doubleArray48, doubleArray55, doubleArray62, doubleArray69 };
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray70);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray38, doubleArray71);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 1, doubleArray38);
        double[][] doubleArray74 = null;
        java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray38, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList75);
        java.lang.Class<?> wildcardClass77 = doubleList76.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleList72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleList75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test3553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3553");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray44);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray44, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray44);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 0, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 0, doubleArray81);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 10, (int) (short) 1, doubleArray81);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleList78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
    }

    @Test
    public void test3554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3554");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray39);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray39, doubleArray78);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray78);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 0, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (short) 10, doubleArray81);
        java.lang.Class<?> wildcardClass84 = doubleArray83.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test3555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3555");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray44);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray44, doubleArray83);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList84);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList84);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList86);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList86);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList86);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList86);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian((int) ' ', doubleList90);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleList90);
    }

    @Test
    public void test3556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3556");
        double[][] doubleArray1 = null;
        double[] doubleArray11 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray33 = new double[][] { doubleArray11, doubleArray18, doubleArray25, doubleArray32 };
        double[][] doubleArray34 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray33);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray75 = new double[][] { doubleArray53, doubleArray60, doubleArray67, doubleArray74 };
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray76);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 10, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) ' ', doubleArray78);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 1, doubleArray33, doubleArray81);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) ' ', doubleArray1, doubleArray33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"x\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
    }

    @Test
    public void test3557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3557");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 100, doubleList8);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 3 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
    }

    @Test
    public void test3558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3558");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray38);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray38);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 100, doubleArray41);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 10, (int) '4', doubleArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
    }

    @Test
    public void test3559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3559");
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList13);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 100, doubleList13);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
    }

    @Test
    public void test3560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3560");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray46, doubleArray77);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray77);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray77);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 1, doubleArray77);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) ' ', doubleArray82);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) 'a', doubleArray84);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(100, (int) (byte) 0, doubleArray84);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
    }

    @Test
    public void test3561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3561");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList9);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(10, doubleList14);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
    }

    @Test
    public void test3562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3562");
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList10);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 3 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
    }

    @Test
    public void test3563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3563");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray43);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray43);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray47);
        double[][] doubleArray52 = null;
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray88 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray89 = new double[][] { doubleArray67, doubleArray74, doubleArray81, doubleArray88 };
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray90);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray90);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray52, doubleArray93);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) '#', doubleArray93);
        java.util.ArrayList<java.lang.Double> doubleList96 = com.thealgorithms.maths.Gaussian.valueOfGaussian((-1), doubleArray47, doubleArray93);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList97 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 100, doubleList96);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleList94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleList96);
    }

    @Test
    public void test3564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3564");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray39);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray39);
        double[][] doubleArray43 = null;
        java.util.ArrayList<java.lang.Double> doubleList44 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray39, doubleArray43);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList45 = com.thealgorithms.maths.Gaussian.gaussian((int) ' ', doubleList44);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleList44);
    }

    @Test
    public void test3565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3565");
        double[][] doubleArray2 = null;
        double[][] doubleArray3 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, 0, doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
    }

    @Test
    public void test3566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3566");
        java.lang.Double[] doubleArray10 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList11 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList11, doubleArray10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList11);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) '#', doubleList17);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
    }

    @Test
    public void test3567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3567");
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray47 = new double[][] { doubleArray25, doubleArray32, doubleArray39, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray47);
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray83 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray84 = new double[][] { doubleArray62, doubleArray69, doubleArray76, doubleArray83 };
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray47, doubleArray86);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray47);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray89);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 0, doubleArray89);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 100, doubleArray89);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray89);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '4', 10, doubleArray89);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
    }

    @Test
    public void test3568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3568");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList7);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList10);
        java.lang.Class<?> wildcardClass12 = doubleList10.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test3569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3569");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList11);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
    }

    @Test
    public void test3570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3570");
        double[] doubleArray18 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray24 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray30 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray36 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray42 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray48 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray49 = new double[][] { doubleArray18, doubleArray24, doubleArray30, doubleArray36, doubleArray42, doubleArray48 };
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray49);
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray85 = new double[][] { doubleArray63, doubleArray70, doubleArray77, doubleArray84 };
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray50, doubleArray86);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray50);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) ' ', doubleArray50);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '4', doubleArray50);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) -1, doubleArray50);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 0, doubleArray93);
        java.lang.Class<?> wildcardClass95 = doubleArray93.getClass();
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test3571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3571");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 10, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 1, doubleArray47);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray47);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 0, doubleArray50);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(100, 1, doubleArray51);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
    }

    @Test
    public void test3572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3572");
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList14);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList14);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
    }

    @Test
    public void test3573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3573");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray70 = new double[][] { doubleArray48, doubleArray55, doubleArray62, doubleArray69 };
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray70);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray38, doubleArray71);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 1, doubleArray38);
        double[][] doubleArray74 = null;
        java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray73, doubleArray74);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.gaussian(10, doubleList75);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleList72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleList75);
    }

    @Test
    public void test3574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3574");
        java.lang.Double[] doubleArray14 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList15 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList15, doubleArray14);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList21 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList20);
        java.util.ArrayList<java.lang.Double> doubleList22 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList20);
        java.util.ArrayList<java.lang.Double> doubleList23 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList22);
        java.util.ArrayList<java.lang.Double> doubleList24 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList22);
        java.util.ArrayList<java.lang.Double> doubleList25 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList24);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList26 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 10, doubleList25);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(doubleList21);
        org.junit.Assert.assertNotNull(doubleList22);
        org.junit.Assert.assertNotNull(doubleList23);
        org.junit.Assert.assertNotNull(doubleList24);
        org.junit.Assert.assertNotNull(doubleList25);
    }

    @Test
    public void test3575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3575");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray43);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray43, doubleArray82);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray82);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '4', doubleArray82);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray82);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (short) 0, doubleArray82);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(10, (int) ' ', doubleArray88);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
    }

    @Test
    public void test3576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3576");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList13);
        java.lang.Class<?> wildcardClass15 = doubleList14.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test3577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3577");
        double[] doubleArray18 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray24 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray30 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray36 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray42 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray48 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray49 = new double[][] { doubleArray18, doubleArray24, doubleArray30, doubleArray36, doubleArray42, doubleArray48 };
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray49);
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray85 = new double[][] { doubleArray63, doubleArray70, doubleArray77, doubleArray84 };
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray50, doubleArray86);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray50);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) ' ', doubleArray50);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '4', doubleArray50);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) -1, doubleArray50);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) ' ', (int) (byte) 100, doubleArray50);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[NaN, NaN, NaN, NaN, NaN]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
    }

    @Test
    public void test3578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3578");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray40);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 10, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 1, doubleArray42);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray83);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 10, doubleArray83);
        double[][] doubleArray87 = null;
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray83, doubleArray87);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 100, doubleArray44, doubleArray83);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList88);
    }

    @Test
    public void test3579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3579");
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray47 = new double[][] { doubleArray25, doubleArray32, doubleArray39, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray47);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray49);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray52);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray52);
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray91 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray92 = new double[][] { doubleArray70, doubleArray77, doubleArray84, doubleArray91 };
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray93);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 100, doubleArray93);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 0, doubleArray95);
        java.util.ArrayList<java.lang.Double> doubleList97 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 1, doubleArray55, doubleArray96);
        double[][] doubleArray98 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray96);
        java.lang.Class<?> wildcardClass99 = doubleArray98.getClass();
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertNotNull(doubleList97);
        org.junit.Assert.assertNotNull(doubleArray98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test3580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3580");
        double[] doubleArray15 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray21 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray27 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray33 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray39 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray45 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray46 = new double[][] { doubleArray15, doubleArray21, doubleArray27, doubleArray33, doubleArray39, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray46);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray83);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray47, doubleArray83);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray83);
        double[][] doubleArray88 = null;
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray87, doubleArray88);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList89);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList90);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList91);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 100, doubleList92);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleList92);
    }

    @Test
    public void test3581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3581");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray37);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) '4', doubleArray37);
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray85 = new double[][] { doubleArray63, doubleArray70, doubleArray77, doubleArray84 };
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray85);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray87);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) 'a', doubleArray87);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) '4', doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 1, doubleArray91);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray92);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray92);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '4', (int) (byte) 0, doubleArray92);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleList94);
    }

    @Test
    public void test3582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3582");
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray48 = new double[][] { doubleArray26, doubleArray33, doubleArray40, doubleArray47 };
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray49);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, 0, doubleArray51);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) '#', doubleArray53);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) -1, doubleArray54);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) '#', doubleArray54);
        double[][] doubleArray57 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 100, doubleArray54);
        double[][] doubleArray58 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 100, doubleArray57);
        java.lang.Class<?> wildcardClass59 = doubleArray57.getClass();
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test3583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3583");
        double[] doubleArray14 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray20 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray26 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray32 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray38 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray44 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray45 = new double[][] { doubleArray14, doubleArray20, doubleArray26, doubleArray32, doubleArray38, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray45);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray81);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray46, doubleArray81);
        double[][] doubleArray88 = new double[][] {};
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray88);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray81, doubleArray89);
        double[][] doubleArray93 = new double[][] {};
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray93);
        java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray81, doubleArray94);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray81);
        double[][] doubleArray97 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 100, doubleArray96);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleList95);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertNotNull(doubleArray97);
    }

    @Test
    public void test3584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3584");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray34);
        double[] doubleArray51 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray73 = new double[][] { doubleArray51, doubleArray58, doubleArray65, doubleArray72 };
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray74);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray36, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList78);
        java.lang.Class<?> wildcardClass80 = doubleList79.getClass();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleList78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test3585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3585");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray40);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) 'a', doubleArray42);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(100, (int) (short) 0, doubleArray45);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
    }

    @Test
    public void test3586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3586");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray39);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 10, doubleArray39);
        double[][] doubleArray43 = null;
        java.util.ArrayList<java.lang.Double> doubleList44 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray39, doubleArray43);
        double[][] doubleArray45 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList46 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) ' ', doubleArray43, doubleArray45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"x\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleList44);
    }

    @Test
    public void test3587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3587");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 100, doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (-1), doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) ' ', doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (-1), doubleArray48);
        java.lang.Class<?> wildcardClass50 = doubleArray49.getClass();
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test3588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3588");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray41);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray41, doubleArray80);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray41);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 0, doubleArray41);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray41);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray41);
        java.lang.Class<?> wildcardClass87 = doubleArray86.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test3589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3589");
        double[] doubleArray10 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray16 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray22 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray28 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray34 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray40 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray41 = new double[][] { doubleArray10, doubleArray16, doubleArray22, doubleArray28, doubleArray34, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 1, doubleArray42, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 10, doubleArray80);
        java.lang.Class<?> wildcardClass83 = doubleArray82.getClass();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.01, 1.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test3590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3590");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray45);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray45, doubleArray84);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray84);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '4', doubleArray84);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray84);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (short) 0, doubleArray84);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 0, doubleArray90);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 100, (int) (short) 0, doubleArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
    }

    @Test
    public void test3591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3591");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray41);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray41, doubleArray80);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray41);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray83);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) -1, doubleArray85);
        java.lang.Class<?> wildcardClass87 = doubleArray85.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test3592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3592");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 100, doubleArray40);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) -1, doubleArray40);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) 'a', (int) '4', doubleArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
    }

    @Test
    public void test3593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3593");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray41, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList81);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList81);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList83);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList83);
        java.lang.Class<?> wildcardClass86 = doubleList85.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test3594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3594");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 100, doubleArray41);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray82);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray82);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 10, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) '4', doubleArray85);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray43, doubleArray85);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList88);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.gaussian((int) '#', doubleList88);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleList89);
    }

    @Test
    public void test3595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3595");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray43);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray43);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 10, doubleArray47);
        java.lang.Class<?> wildcardClass50 = doubleArray47.getClass();
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test3596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3596");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray41);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray43, doubleArray76);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray43);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 0, doubleArray43);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 10, doubleArray81);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 100, 100, doubleArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
    }

    @Test
    public void test3597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3597");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray39);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) 'a', doubleArray41);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) 'a', (int) '4', doubleArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
    }

    @Test
    public void test3598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3598");
        double[][] doubleArray7 = null;
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray45);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray47, doubleArray80);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray47);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 0, doubleArray47);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray7, doubleArray47);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (short) 100, doubleArray47);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 100, doubleArray47);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(10, (int) (byte) 100, doubleArray47);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
    }

    @Test
    public void test3599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3599");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray41);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray81);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray43, doubleArray81);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 0, doubleArray81);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (short) 10, doubleArray87);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 100, (int) (short) 100, doubleArray88);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
    }

    @Test
    public void test3600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3600");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) '4', doubleList12);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
    }

    @Test
    public void test3601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3601");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 100, doubleArray36);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 100, doubleArray81);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray81);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (byte) 100, doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian((-1), doubleArray36, doubleArray85);
        java.lang.Class<?> wildcardClass87 = doubleArray36.getClass();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test3602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3602");
        double[] doubleArray16 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray22 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray28 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray34 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray40 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray46 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray47 = new double[][] { doubleArray16, doubleArray22, doubleArray28, doubleArray34, doubleArray40, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray47);
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray83 = new double[][] { doubleArray61, doubleArray68, doubleArray75, doubleArray82 };
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray48, doubleArray84);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray48);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) 100, doubleArray89);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 100, 10, doubleArray89);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[NaN, NaN, NaN, NaN, NaN]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
    }

    @Test
    public void test3603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3603");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray36);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray75 = new double[][] { doubleArray53, doubleArray60, doubleArray67, doubleArray74 };
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray76);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray38, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList81);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian((-1), doubleList81);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
    }

    @Test
    public void test3604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3604");
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray47 = new double[][] { doubleArray25, doubleArray32, doubleArray39, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray49);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (-1), doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) -1, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray52);
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray88 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray89 = new double[][] { doubleArray67, doubleArray74, doubleArray81, doubleArray88 };
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray90);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray54, doubleArray90);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 10, doubleArray90);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 1, doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleList93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
    }

    @Test
    public void test3605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3605");
        double[][] doubleArray2 = null;
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray38);
        java.util.ArrayList<java.lang.Double> doubleList41 = com.thealgorithms.maths.Gaussian.valueOfGaussian((-1), doubleArray2, doubleArray40);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList42 = com.thealgorithms.maths.Gaussian.gaussian(100, doubleList41);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleList41);
    }

    @Test
    public void test3606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3606");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray45);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray45);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray50);
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray85 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray86 = new double[][] { doubleArray64, doubleArray71, doubleArray78, doubleArray85 };
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray50, doubleArray87);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList90);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleList90);
    }

    @Test
    public void test3607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3607");
        double[] doubleArray10 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray16 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray22 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray28 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray34 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray40 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray41 = new double[][] { doubleArray10, doubleArray16, doubleArray22, doubleArray28, doubleArray34, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray42, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList81);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian((int) '4', doubleList82);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
    }

    @Test
    public void test3608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3608");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray46);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray46);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray51);
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray86 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray87 = new double[][] { doubleArray65, doubleArray72, doubleArray79, doubleArray86 };
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray88);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray51, doubleArray88);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination(100, 100, doubleArray51);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleList91);
    }

    @Test
    public void test3609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3609");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray41);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (-1), doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray46);
        double[][] doubleArray48 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList49 = com.thealgorithms.maths.Gaussian.valueOfGaussian(100, doubleArray47, doubleArray48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"mat\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
    }

    @Test
    public void test3610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3610");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray41);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray43, doubleArray76);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, 0, doubleArray76);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (-1), doubleArray80);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) '#', doubleArray80);
        java.lang.Class<?> wildcardClass84 = doubleArray80.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test3611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3611");
        double[][] doubleArray1 = null;
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray50);
        java.util.ArrayList<java.lang.Double> doubleList52 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray1, doubleArray51);
        java.lang.Class<?> wildcardClass53 = doubleArray51.getClass();
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleList52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test3612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3612");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 10, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) ' ', doubleArray46);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) ' ', (-1), doubleArray46);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
    }

    @Test
    public void test3613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3613");
        java.lang.Double[] doubleArray10 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList11 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList11, doubleArray10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList15);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 100, doubleList15);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
    }

    @Test
    public void test3614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3614");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray41, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList81);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList82);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList82);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian((int) '4', doubleList82);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleList84);
    }

    @Test
    public void test3615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3615");
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray47 = new double[][] { doubleArray25, doubleArray32, doubleArray39, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray48);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray48, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) 'a', doubleArray81);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray81);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 10, doubleArray81);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (short) 1, doubleArray81);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray81);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 1, doubleArray81);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 10, doubleArray81);
        java.lang.Class<?> wildcardClass90 = doubleArray89.getClass();
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test3616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3616");
        double[][] doubleArray2 = null;
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray43);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray75 = new double[][] { doubleArray53, doubleArray60, doubleArray67, doubleArray74 };
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray75);
        java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray43, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray43);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) '#', doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 100, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian((-1), doubleArray2, doubleArray80);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList81);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleList77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
    }

    @Test
    public void test3617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3617");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray41, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList81);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList82);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList82);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian(100, doubleList84);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleList84);
    }

    @Test
    public void test3618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3618");
        double[] doubleArray15 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray21 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray27 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray33 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray39 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray45 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray46 = new double[][] { doubleArray15, doubleArray21, doubleArray27, doubleArray33, doubleArray39, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray46);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray83);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray47, doubleArray83);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray83);
        double[][] doubleArray88 = null;
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray87, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) '4', doubleArray87);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) -1, doubleArray87);
        java.lang.Class<?> wildcardClass92 = doubleArray91.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test3619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3619");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) 'a', doubleArray73);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 0, doubleArray73);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) ' ', (int) (byte) 100, doubleArray73);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
    }

    @Test
    public void test3620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3620");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray37);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray37, doubleArray76);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray76);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 10, 10, doubleArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleList78);
        org.junit.Assert.assertNotNull(doubleArray79);
    }

    @Test
    public void test3621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3621");
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray48 = new double[][] { doubleArray26, doubleArray33, doubleArray40, doubleArray47 };
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray50);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray53);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray53);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 0, doubleArray55);
        double[][] doubleArray57 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 10, doubleArray56);
        double[][] doubleArray58 = null;
        java.util.ArrayList<java.lang.Double> doubleList59 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) -1, doubleArray56, doubleArray58);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList60 = com.thealgorithms.maths.Gaussian.gaussian((int) '4', doubleList59);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(doubleList59);
    }

    @Test
    public void test3622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3622");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray40);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray40);
        double[][] doubleArray44 = null;
        java.util.ArrayList<java.lang.Double> doubleList45 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray44);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) ' ', 10, doubleArray44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleList45);
    }

    @Test
    public void test3623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3623");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray41);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray41, doubleArray80);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray41);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 0, doubleArray41);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (-1), doubleArray41);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 1, doubleArray85);
        java.lang.Class<?> wildcardClass87 = doubleArray85.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test3624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3624");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray45);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray45);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 1, doubleArray49);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) '#', doubleArray51);
        java.lang.Class<?> wildcardClass53 = doubleArray52.getClass();
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test3625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3625");
        double[][] doubleArray5 = new double[][] {};
        double[][] doubleArray6 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray5);
        double[][] doubleArray7 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) '#', doubleArray5);
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray49 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray50 = new double[][] { doubleArray28, doubleArray35, doubleArray42, doubleArray49 };
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray50);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray52);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray54);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray55);
        double[][] doubleArray57 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray55);
        java.util.ArrayList<java.lang.Double> doubleList58 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray5, doubleArray55);
        java.lang.Class<?> wildcardClass59 = doubleArray55.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(doubleList58);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test3626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3626");
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList15);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList15);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
    }

    @Test
    public void test3627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3627");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray41, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList81);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList81);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList83);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian((int) '4', doubleList83);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleList84);
    }

    @Test
    public void test3628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3628");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray37);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray39, doubleArray72);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray39);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) -1, doubleArray76);
        java.lang.Class<?> wildcardClass78 = doubleArray76.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleList75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test3629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3629");
        double[] doubleArray13 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray19 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray25 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray31 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray37 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray43 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray44 = new double[][] { doubleArray13, doubleArray19, doubleArray25, doubleArray31, doubleArray37, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray44);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray80);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray45, doubleArray80);
        double[][] doubleArray87 = new double[][] {};
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray80, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 100, doubleArray80);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) ' ', doubleArray80);
        java.lang.Class<?> wildcardClass92 = doubleArray91.getClass();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test3630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3630");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray44);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray46, doubleArray79);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray46);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 100, doubleArray46);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 1, doubleArray46);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) -1, doubleArray46);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (byte) 10, doubleArray86);
        double[][] doubleArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) ' ', doubleArray86, doubleArray88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"mat\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
    }

    @Test
    public void test3631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3631");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray40);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray45);
        java.lang.Class<?> wildcardClass47 = doubleArray45.getClass();
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test3632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3632");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray39);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray41);
        double[][] doubleArray44 = null;
        java.util.ArrayList<java.lang.Double> doubleList45 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray43, doubleArray44);
        java.util.ArrayList<java.lang.Double> doubleList46 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList45);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList47 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList45);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleList45);
        org.junit.Assert.assertNotNull(doubleList46);
    }

    @Test
    public void test3633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3633");
        java.util.ArrayList<java.lang.Double> doubleList4 = null;
        java.util.ArrayList<java.lang.Double> doubleList5 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList4);
        java.util.ArrayList<java.lang.Double> doubleList6 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList4);
        java.util.ArrayList<java.lang.Double> doubleList7 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList6);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList8 = com.thealgorithms.maths.Gaussian.gaussian(10, doubleList7);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleList5);
        org.junit.Assert.assertNotNull(doubleList6);
        org.junit.Assert.assertNotNull(doubleList7);
    }

    @Test
    public void test3634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3634");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray40);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) 'a', doubleArray42);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(100, (int) '#', doubleArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
    }

    @Test
    public void test3635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3635");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray40);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray77);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray40, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList81);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian((int) ' ', doubleList81);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
    }

    @Test
    public void test3636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3636");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray34);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 100, 10, doubleArray36);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
    }

    @Test
    public void test3637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3637");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray35);
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray83 = new double[][] { doubleArray61, doubleArray68, doubleArray75, doubleArray82 };
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray83);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray85);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 1, doubleArray91);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray35, doubleArray92);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 10, doubleList93);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleList93);
    }

    @Test
    public void test3638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3638");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray38);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray75 = new double[][] { doubleArray53, doubleArray60, doubleArray67, doubleArray74 };
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray77);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray38, doubleArray77);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray77);
        double[][] doubleArray81 = null;
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) -1, doubleArray77, doubleArray81);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) 'a', (int) (byte) 0, doubleArray77);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList82);
    }

    @Test
    public void test3639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3639");
        java.lang.Double[] doubleArray14 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList15 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList15, doubleArray14);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList21 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList22 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList23 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList22);
        java.util.ArrayList<java.lang.Double> doubleList24 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList22);
        java.util.ArrayList<java.lang.Double> doubleList25 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList24);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList26 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList24);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(doubleList21);
        org.junit.Assert.assertNotNull(doubleList22);
        org.junit.Assert.assertNotNull(doubleList23);
        org.junit.Assert.assertNotNull(doubleList24);
        org.junit.Assert.assertNotNull(doubleList25);
    }

    @Test
    public void test3640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3640");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray35);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray35, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList76);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList76);
        java.lang.Class<?> wildcardClass79 = doubleList76.getClass();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleList77);
        org.junit.Assert.assertNotNull(doubleList78);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test3641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3641");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList11);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 10, doubleList12);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
    }

    @Test
    public void test3642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3642");
        double[][] doubleArray2 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray3 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 10, (int) (short) 0, doubleArray2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3643");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray37);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (short) 1, doubleArray39);
        java.lang.Class<?> wildcardClass41 = doubleArray40.getClass();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test3644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3644");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray40);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 10, doubleArray40);
        double[][] doubleArray44 = null;
        java.util.ArrayList<java.lang.Double> doubleList45 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray44);
        java.util.ArrayList<java.lang.Double> doubleList46 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList45);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList47 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList45);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleList45);
        org.junit.Assert.assertNotNull(doubleList46);
    }

    @Test
    public void test3645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3645");
        double[][] doubleArray2 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray3 = com.thealgorithms.maths.Gaussian.gaussianElimination(100, (int) (byte) 1, doubleArray2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3646");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList13);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList13);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
    }

    @Test
    public void test3647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3647");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray39);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray39, doubleArray78);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray39);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 10, doubleArray82);
        java.lang.Class<?> wildcardClass84 = doubleArray83.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test3648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3648");
        double[] doubleArray9 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray15 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray21 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray27 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray33 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray39 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray40 = new double[][] { doubleArray9, doubleArray15, doubleArray21, doubleArray27, doubleArray33, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray77);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 1, doubleArray41, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList80);
        java.lang.Class<?> wildcardClass82 = doubleList81.getClass();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.01, 1.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test3649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3649");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray35);
        double[] doubleArray49 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray71 = new double[][] { doubleArray49, doubleArray56, doubleArray63, doubleArray70 };
        double[][] doubleArray72 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray71);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray71);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray71);
        java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray35, doubleArray71);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.gaussian((-1), doubleList75);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleList75);
    }

    @Test
    public void test3650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3650");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { (-1.0d), 0.0d, (-1.0d), 10.0d, 100.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian((int) ' ', doubleList7);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 5 out of bounds for length 5");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
    }

    @Test
    public void test3651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3651");
        double[][] doubleArray2 = null;
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 100, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray43);
        java.util.ArrayList<java.lang.Double> doubleList47 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray2, doubleArray46);
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray83 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray84 = new double[][] { doubleArray62, doubleArray69, doubleArray76, doubleArray83 };
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 100, doubleArray85);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) ' ', doubleArray85);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray46, doubleArray88);
        java.lang.Class<?> wildcardClass90 = doubleArray46.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleList47);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test3652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3652");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray68 = new double[][] { doubleArray46, doubleArray53, doubleArray60, doubleArray67 };
        double[][] doubleArray69 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray68);
        java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray37, doubleArray68);
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray68);
        double[][] doubleArray72 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray68);
        double[][] doubleArray73 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 1, doubleArray72, doubleArray73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"mat\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleList70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleArray72);
    }

    @Test
    public void test3653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3653");
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray47 = new double[][] { doubleArray25, doubleArray32, doubleArray39, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray48);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray48);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray52);
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray87 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray88 = new double[][] { doubleArray66, doubleArray73, doubleArray80, doubleArray87 };
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 100, doubleArray89);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 1, doubleArray53, doubleArray89);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 0, doubleArray53);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, 1, doubleArray93);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 0, doubleArray94);
        java.lang.Class<?> wildcardClass96 = doubleArray94.getClass();
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleList92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test3654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3654");
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray49 = new double[][] { doubleArray27, doubleArray34, doubleArray41, doubleArray48 };
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray51);
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray86 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray87 = new double[][] { doubleArray65, doubleArray72, doubleArray79, doubleArray86 };
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray88);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray51, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 1, doubleArray90);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 10, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) '4', doubleArray93);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (short) 1, doubleArray93);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 100, doubleArray93);
        double[][] doubleArray97 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 100, doubleArray96);
        double[][] doubleArray98 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray96);
        java.lang.Class<?> wildcardClass99 = doubleArray98.getClass();
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertNotNull(doubleArray98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test3655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3655");
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray49 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray50 = new double[][] { doubleArray28, doubleArray35, doubleArray42, doubleArray49 };
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray50);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray52);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray54);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray54);
        double[][] doubleArray57 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 100, doubleArray56);
        double[][] doubleArray58 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray56);
        double[][] doubleArray59 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (-1), doubleArray56);
        double[][] doubleArray60 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '4', doubleArray56);
        double[][] doubleArray61 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) '4', doubleArray56);
        java.lang.Class<?> wildcardClass62 = doubleArray56.getClass();
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test3656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3656");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray42, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 100, doubleArray42);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (byte) 1, doubleArray77);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', (int) ' ', doubleArray77);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
    }

    @Test
    public void test3657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3657");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray45);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray45, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 1, doubleArray84);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 10, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) '4', doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 100, doubleArray87);
        java.lang.Class<?> wildcardClass90 = doubleArray89.getClass();
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test3658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3658");
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray46 = new double[][] { doubleArray24, doubleArray31, doubleArray38, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray50);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 100, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray52);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) 'a', (int) (byte) 10, doubleArray54);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
    }

    @Test
    public void test3659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3659");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 10, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 1, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) '4', doubleArray45);
        double[][] doubleArray49 = null;
        java.util.ArrayList<java.lang.Double> doubleList50 = com.thealgorithms.maths.Gaussian.valueOfGaussian((-1), doubleArray45, doubleArray49);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList51 = com.thealgorithms.maths.Gaussian.gaussian((-1), doubleList50);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleList50);
    }

    @Test
    public void test3660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3660");
        double[][] doubleArray2 = null;
        double[][] doubleArray3 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
    }

    @Test
    public void test3661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3661");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray41, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList81);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList81);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList81);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList81);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleList84);
    }

    @Test
    public void test3662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3662");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray39);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray41, doubleArray74);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray41);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) -1, doubleArray78);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) 'a', (int) (short) 1, doubleArray78);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleList77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
    }

    @Test
    public void test3663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3663");
        double[][] doubleArray2 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray3 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', (int) ' ', doubleArray2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3664");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray37);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) '4', doubleArray37);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray78);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (byte) 10, doubleArray40);
        java.lang.Class<?> wildcardClass84 = doubleArray40.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test3665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3665");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray45);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray45, doubleArray84);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray84);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '4', doubleArray84);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray84);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (short) 0, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (byte) -1, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray91);
        java.lang.Class<?> wildcardClass93 = doubleArray91.getClass();
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test3666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3666");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray45);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray45);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray49);
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray85 = new double[][] { doubleArray63, doubleArray70, doubleArray77, doubleArray84 };
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 100, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 1, doubleArray50, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList89);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList89);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList89);
        java.lang.Class<?> wildcardClass93 = doubleList89.getClass();
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleList92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test3667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3667");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray38);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray40);
        double[][] doubleArray43 = null;
        java.util.ArrayList<java.lang.Double> doubleList44 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray42, doubleArray43);
        java.util.ArrayList<java.lang.Double> doubleList45 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList44);
        java.lang.Class<?> wildcardClass46 = doubleList45.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleList44);
        org.junit.Assert.assertNotNull(doubleList45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test3668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3668");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray39);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray41, doubleArray74);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray41);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 100, doubleArray41);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '4', doubleArray41);
        java.lang.Class<?> wildcardClass81 = doubleArray80.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleList77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test3669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3669");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray42);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray42, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray42);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) '#', doubleArray42);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 10, doubleArray42);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 100, (int) (byte) -1, doubleArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
    }

    @Test
    public void test3670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3670");
        java.lang.Double[] doubleArray10 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList11 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList11, doubleArray10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList11);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) ' ', doubleList17);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
    }

    @Test
    public void test3671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3671");
        double[][] doubleArray1 = null;
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray45);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray45);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) '4', doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 10, doubleArray50);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList52 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) 'a', doubleArray1, doubleArray50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"x\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
    }

    @Test
    public void test3672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3672");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray41);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray41, doubleArray80);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray41);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) -1, doubleArray83);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 0, doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
    }

    @Test
    public void test3673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3673");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray42, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 100, doubleArray42);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) -1, doubleArray42);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 100, doubleArray78);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(10, (int) (byte) 0, doubleArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
    }

    @Test
    public void test3674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3674");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList13);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList13);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
    }

    @Test
    public void test3675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3675");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray46, doubleArray77);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray77);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray77);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 1, doubleArray77);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) ' ', doubleArray82);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) 'a', doubleArray84);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 100, (int) (byte) 1, doubleArray84);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
    }

    @Test
    public void test3676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3676");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList12);
        java.lang.Class<?> wildcardClass15 = doubleList12.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test3677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3677");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray46);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray46);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 1, doubleArray50);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray52);
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray87 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray88 = new double[][] { doubleArray66, doubleArray73, doubleArray80, doubleArray87 };
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 10, doubleArray89);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) ' ', doubleArray53, doubleArray89);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
    }

    @Test
    public void test3678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3678");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray41);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) '4', doubleArray41);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', 10, doubleArray41);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
    }

    @Test
    public void test3679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3679");
        double[] doubleArray14 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray20 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray26 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray32 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray38 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray44 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray45 = new double[][] { doubleArray14, doubleArray20, doubleArray26, doubleArray32, doubleArray38, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray45);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray81);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray46, doubleArray81);
        double[][] doubleArray88 = new double[][] {};
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray88);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray81, doubleArray89);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList90);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList91);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList92);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList92);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.gaussian((-1), doubleList92);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleList92);
        org.junit.Assert.assertNotNull(doubleList93);
        org.junit.Assert.assertNotNull(doubleList94);
    }

    @Test
    public void test3680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3680");
        double[][] doubleArray2 = null;
        double[][] doubleArray3 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 0, doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
    }

    @Test
    public void test3681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3681");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray40);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray75 = new double[][] { doubleArray53, doubleArray60, doubleArray67, doubleArray74 };
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray75);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray42, doubleArray75);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList78);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList81);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList82);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList83);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList84);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleList78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleList84);
    }

    @Test
    public void test3682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3682");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray35);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray70 = new double[][] { doubleArray48, doubleArray55, doubleArray62, doubleArray69 };
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray70);
        double[][] doubleArray72 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray70);
        java.util.ArrayList<java.lang.Double> doubleList73 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray37, doubleArray70);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, 0, doubleArray70);
        java.lang.Class<?> wildcardClass75 = doubleArray74.getClass();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleList73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test3683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3683");
        double[] doubleArray11 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray33 = new double[][] { doubleArray11, doubleArray18, doubleArray25, doubleArray32 };
        double[][] doubleArray34 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray33);
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray65 = new double[][] { doubleArray43, doubleArray50, doubleArray57, doubleArray64 };
        double[][] doubleArray66 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray65);
        java.util.ArrayList<java.lang.Double> doubleList67 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray34, doubleArray65);
        java.util.ArrayList<java.lang.Double> doubleList68 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList67);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList69 = com.thealgorithms.maths.Gaussian.gaussian(100, doubleList67);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertNotNull(doubleList67);
        org.junit.Assert.assertNotNull(doubleList68);
    }

    @Test
    public void test3684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3684");
        java.lang.Double[] doubleArray11 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList12 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList12, doubleArray11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList16);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList17);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList17);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList17);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList21 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList20);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
    }

    @Test
    public void test3685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3685");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 10, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) 10, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) '4', doubleArray44);
        java.lang.Class<?> wildcardClass47 = doubleArray46.getClass();
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test3686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3686");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray40);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray77);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray40, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList80);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 100, doubleList82);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
    }

    @Test
    public void test3687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3687");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray47);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) -1, doubleArray47);
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray88 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray89 = new double[][] { doubleArray67, doubleArray74, doubleArray81, doubleArray88 };
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray90);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray90);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray93);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.valueOfGaussian(100, doubleArray47, doubleArray93);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
    }

    @Test
    public void test3688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3688");
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray47 = new double[][] { doubleArray25, doubleArray32, doubleArray39, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray48);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray48, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) 'a', doubleArray81);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray81);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 10, doubleArray81);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (short) 1, doubleArray81);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray81);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 1, doubleArray81);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 10, (int) (byte) 1, doubleArray88);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
    }

    @Test
    public void test3689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3689");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList7);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.lang.Class<?> wildcardClass12 = doubleList11.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test3690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3690");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray67 = new double[][] { doubleArray45, doubleArray52, doubleArray59, doubleArray66 };
        double[][] doubleArray68 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray67);
        java.util.ArrayList<java.lang.Double> doubleList69 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray36, doubleArray67);
        double[][] doubleArray70 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray67);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination(100, (int) (byte) 1, doubleArray70);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleList69);
        org.junit.Assert.assertNotNull(doubleArray70);
    }

    @Test
    public void test3691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3691");
        java.util.ArrayList<java.lang.Double> doubleList4 = null;
        java.util.ArrayList<java.lang.Double> doubleList5 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList4);
        java.util.ArrayList<java.lang.Double> doubleList6 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList5);
        java.util.ArrayList<java.lang.Double> doubleList7 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList6);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList8 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList7);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleList5);
        org.junit.Assert.assertNotNull(doubleList6);
        org.junit.Assert.assertNotNull(doubleList7);
    }

    @Test
    public void test3692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3692");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray42);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray42);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray46);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 100, doubleArray83);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 1, doubleArray47, doubleArray83);
        java.lang.Class<?> wildcardClass87 = doubleArray47.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test3693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3693");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray37);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray77);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray77);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray39, doubleArray77);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 0, doubleArray77);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray82);
        java.lang.Class<?> wildcardClass84 = doubleArray83.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test3694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3694");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray44);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray44, doubleArray83);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList84);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList84);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList84);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList84);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList84);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList84);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 10, doubleList84);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleList90);
    }

    @Test
    public void test3695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3695");
        double[][] doubleArray5 = null;
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray43);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray45, doubleArray78);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray45);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 0, doubleArray45);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray5, doubleArray45);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (short) 100, doubleArray45);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 100, doubleArray45);
        java.lang.Class<?> wildcardClass87 = doubleArray45.getClass();
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test3696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3696");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray45);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray47, doubleArray80);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (short) 100, doubleArray47);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 0, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) 'a', doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 0, doubleArray87);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '4', (int) (short) 100, doubleArray88);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
    }

    @Test
    public void test3697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3697");
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray49 = new double[][] { doubleArray27, doubleArray34, doubleArray41, doubleArray48 };
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray50);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray50);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray50);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray54);
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray89 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray90 = new double[][] { doubleArray68, doubleArray75, doubleArray82, doubleArray89 };
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray91);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 100, doubleArray91);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 1, doubleArray55, doubleArray91);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 0, doubleArray55);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, 1, doubleArray95);
        double[][] doubleArray97 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 0, doubleArray96);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray98 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) 'a', (int) (byte) -1, doubleArray96);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, -9999.0, 0.0, 9999.0, -969903.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleList94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertNotNull(doubleArray97);
    }

    @Test
    public void test3698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3698");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 100, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 0, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray50 = null;
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray86 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray87 = new double[][] { doubleArray65, doubleArray72, doubleArray79, doubleArray86 };
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray88);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray88);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray50, doubleArray91);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) '#', doubleArray91);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) -1, doubleArray45, doubleArray93);
        java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList94);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList96 = com.thealgorithms.maths.Gaussian.gaussian((int) '4', doubleList94);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleList92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleList94);
        org.junit.Assert.assertNotNull(doubleList95);
    }

    @Test
    public void test3699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3699");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 1, doubleArray45);
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray83 = new double[][] { doubleArray61, doubleArray68, doubleArray75, doubleArray82 };
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray83);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray85);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray45, doubleArray85);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) -1, doubleArray45);
        java.lang.Class<?> wildcardClass90 = doubleArray89.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test3700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3700");
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray49 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray50 = new double[][] { doubleArray28, doubleArray35, doubleArray42, doubleArray49 };
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray51);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray51);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray51);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray55);
        double[][] doubleArray57 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 100, doubleArray56);
        double[][] doubleArray58 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray56);
        double[][] doubleArray59 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 1, doubleArray58);
        double[][] doubleArray60 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) -1, doubleArray58);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray61 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) 'a', 0, doubleArray58);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertNotNull(doubleArray60);
    }

    @Test
    public void test3701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3701");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) -1, doubleArray42);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray78);
        double[][] doubleArray80 = null;
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray79, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray42, doubleArray80);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '#', doubleArray42);
        java.lang.Class<?> wildcardClass84 = doubleArray83.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test3702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3702");
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray49 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray50 = new double[][] { doubleArray28, doubleArray35, doubleArray42, doubleArray49 };
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray51);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray53);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, 0, doubleArray53);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) '#', doubleArray55);
        double[][] doubleArray57 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) -1, doubleArray56);
        double[][] doubleArray58 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) '#', doubleArray56);
        double[][] doubleArray59 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 100, doubleArray56);
        double[][] doubleArray60 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 100, doubleArray59);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray61 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) ' ', (int) (short) -1, doubleArray60);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertNotNull(doubleArray60);
    }

    @Test
    public void test3703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3703");
        double[] doubleArray14 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray20 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray26 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray32 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray38 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray44 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray45 = new double[][] { doubleArray14, doubleArray20, doubleArray26, doubleArray32, doubleArray38, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray45);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray81);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray46, doubleArray81);
        double[][] doubleArray88 = new double[][] {};
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray88);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray81, doubleArray89);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList90);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList91);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList92);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList92);
        java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList92);
        java.lang.Class<?> wildcardClass96 = doubleList92.getClass();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleList92);
        org.junit.Assert.assertNotNull(doubleList93);
        org.junit.Assert.assertNotNull(doubleList94);
        org.junit.Assert.assertNotNull(doubleList95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test3704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3704");
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray54 = new double[][] { doubleArray32, doubleArray39, doubleArray46, doubleArray53 };
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray54);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray54);
        double[][] doubleArray57 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray56);
        double[][] doubleArray58 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray56);
        double[][] doubleArray59 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray58);
        double[][] doubleArray60 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray59);
        double[][] doubleArray61 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray59);
        double[][] doubleArray62 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 0, doubleArray61);
        double[][] doubleArray63 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 1, doubleArray62);
        double[][] doubleArray64 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 1, doubleArray63);
        double[][] doubleArray65 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 10, doubleArray63);
        double[][] doubleArray66 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '4', doubleArray65);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray67 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 100, (int) (short) 100, doubleArray65);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertNotNull(doubleArray66);
    }

    @Test
    public void test3705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3705");
        double[][] doubleArray1 = null;
        double[][] doubleArray2 = null;
        java.util.ArrayList<java.lang.Double> doubleList3 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray1, doubleArray2);
        org.junit.Assert.assertNotNull(doubleList3);
    }

    @Test
    public void test3706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3706");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray43);
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray83 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray84 = new double[][] { doubleArray62, doubleArray69, doubleArray76, doubleArray83 };
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray84);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray86);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) -1, doubleArray88);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray43, doubleArray88);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList90);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList90);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList92);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 10, doubleList93);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleList92);
        org.junit.Assert.assertNotNull(doubleList93);
    }

    @Test
    public void test3707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3707");
        double[] doubleArray10 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray16 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray22 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray28 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray34 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray40 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray41 = new double[][] { doubleArray10, doubleArray16, doubleArray22, doubleArray28, doubleArray34, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[][] doubleArray43 = null;
        java.util.ArrayList<java.lang.Double> doubleList44 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray42, doubleArray43);
        java.util.ArrayList<java.lang.Double> doubleList45 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList44);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList46 = com.thealgorithms.maths.Gaussian.gaussian((int) '4', doubleList44);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleList44);
        org.junit.Assert.assertNotNull(doubleList45);
    }

    @Test
    public void test3708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3708");
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList14);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) '4', doubleList15);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
    }

    @Test
    public void test3709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3709");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray43);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray45, doubleArray78);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray45);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 100, doubleArray45);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 1, doubleArray45);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) -1, doubleArray45);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) 'a', doubleArray85);
        java.lang.Class<?> wildcardClass87 = doubleArray85.getClass();
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test3710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3710");
        java.lang.Double[] doubleArray11 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList12 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList12, doubleArray11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList18);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList18);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
    }

    @Test
    public void test3711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3711");
        double[] doubleArray8 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray14 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray20 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray26 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray32 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray38 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray39 = new double[][] { doubleArray8, doubleArray14, doubleArray20, doubleArray26, doubleArray32, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray75 = new double[][] { doubleArray53, doubleArray60, doubleArray67, doubleArray74 };
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 1, doubleArray40, doubleArray78);
        java.lang.Class<?> wildcardClass80 = doubleList79.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.01, 1.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test3712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3712");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 0, doubleArray41);
        double[][] doubleArray43 = null;
        java.util.ArrayList<java.lang.Double> doubleList44 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray42, doubleArray43);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList45 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList44);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleList44);
    }

    @Test
    public void test3713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3713");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray42, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray42);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (short) 100, doubleArray42);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 0, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray78);
        java.lang.Class<?> wildcardClass81 = doubleArray80.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test3714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3714");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray43);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray43, doubleArray82);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray82);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) 'a', doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, 10, doubleArray85);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 0, doubleArray85);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 10, 10, doubleArray88);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
    }

    @Test
    public void test3715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3715");
        double[] doubleArray9 = new double[] {};
        double[][] doubleArray10 = new double[][] { doubleArray9 };
        double[][] doubleArray11 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray10);
        double[][] doubleArray12 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray11);
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray49 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray50 = new double[][] { doubleArray28, doubleArray35, doubleArray42, doubleArray49 };
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray50);
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray86 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray87 = new double[][] { doubleArray65, doubleArray72, doubleArray79, doubleArray86 };
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray89);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray50, doubleArray89);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray50);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray50);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray11, doubleArray93);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) 10, doubleArray11);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 10, 0, doubleArray11);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[]");
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleList94);
        org.junit.Assert.assertNotNull(doubleArray95);
    }

    @Test
    public void test3716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3716");
        java.lang.Double[] doubleArray14 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList15 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList15, doubleArray14);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList21 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList20);
        java.util.ArrayList<java.lang.Double> doubleList22 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList20);
        java.util.ArrayList<java.lang.Double> doubleList23 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList22);
        java.util.ArrayList<java.lang.Double> doubleList24 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList22);
        java.util.ArrayList<java.lang.Double> doubleList25 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList24);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList26 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList24);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(doubleList21);
        org.junit.Assert.assertNotNull(doubleList22);
        org.junit.Assert.assertNotNull(doubleList23);
        org.junit.Assert.assertNotNull(doubleList24);
        org.junit.Assert.assertNotNull(doubleList25);
    }

    @Test
    public void test3717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3717");
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray47 = new double[][] { doubleArray25, doubleArray32, doubleArray39, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray47);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray49);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray52);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 0, doubleArray54);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 10, doubleArray55);
        double[][] doubleArray57 = null;
        java.util.ArrayList<java.lang.Double> doubleList58 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) -1, doubleArray55, doubleArray57);
        java.lang.Class<?> wildcardClass59 = doubleList58.getClass();
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleList58);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test3718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3718");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray35);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray35, doubleArray74);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '4', (int) (short) 10, doubleArray35);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
    }

    @Test
    public void test3719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3719");
        java.lang.Double[] doubleArray10 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList11 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList11, doubleArray10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList16);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList17);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian(100, doubleList17);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
    }

    @Test
    public void test3720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3720");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray69 = new double[][] { doubleArray47, doubleArray54, doubleArray61, doubleArray68 };
        double[][] doubleArray70 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray69);
        java.util.ArrayList<java.lang.Double> doubleList71 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray38, doubleArray69);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList71);
        java.util.ArrayList<java.lang.Double> doubleList73 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList72);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList73);
        java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList75);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 100, doubleList75);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleList71);
        org.junit.Assert.assertNotNull(doubleList72);
        org.junit.Assert.assertNotNull(doubleList73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(doubleList75);
        org.junit.Assert.assertNotNull(doubleList76);
    }

    @Test
    public void test3721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3721");
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray48 = new double[][] { doubleArray26, doubleArray33, doubleArray40, doubleArray47 };
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray49);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray49);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray49);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray53);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray54);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 1, doubleArray55);
        double[][] doubleArray57 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray56);
        double[][] doubleArray58 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 100, doubleArray56);
        java.lang.Class<?> wildcardClass59 = doubleArray56.getClass();
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test3722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3722");
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray47 = new double[][] { doubleArray25, doubleArray32, doubleArray39, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray47);
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray83 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray84 = new double[][] { doubleArray62, doubleArray69, doubleArray76, doubleArray83 };
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray47, doubleArray86);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray47);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 0, doubleArray47);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (-1), doubleArray47);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 1, doubleArray91);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 0, doubleArray92);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray92);
        java.lang.Class<?> wildcardClass96 = doubleArray95.getClass();
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test3723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3723");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (-1), doubleArray73);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray73);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 100, (int) (byte) 10, doubleArray73);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
    }

    @Test
    public void test3724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3724");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList9);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
    }

    @Test
    public void test3725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3725");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = null;
        java.util.ArrayList<java.lang.Double> doubleList48 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray46, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 100, doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleList48);
        org.junit.Assert.assertNull(doubleArray49);
    }

    @Test
    public void test3726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3726");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (-1), doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, 10, doubleArray45);
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray85 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray86 = new double[][] { doubleArray64, doubleArray71, doubleArray78, doubleArray85 };
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray86);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray88);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) -1, doubleArray90);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 1, doubleArray47, doubleArray91);
        java.lang.Class<?> wildcardClass93 = doubleList92.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleList92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test3727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3727");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList13);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 100, doubleList13);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
    }

    @Test
    public void test3728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3728");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 0.0d, 100.0d, 10.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList8);
        java.lang.Class<?> wildcardClass12 = doubleList11.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test3729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3729");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray39);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray39);
        double[][] doubleArray43 = null;
        java.util.ArrayList<java.lang.Double> doubleList44 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray39, doubleArray43);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList45 = com.thealgorithms.maths.Gaussian.gaussian((int) '#', doubleList44);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleList44);
    }

    @Test
    public void test3730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3730");
        double[][] doubleArray6 = null;
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray44);
        java.util.ArrayList<java.lang.Double> doubleList48 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray6, doubleArray47);
        java.util.ArrayList<java.lang.Double> doubleList49 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList48);
        java.util.ArrayList<java.lang.Double> doubleList50 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList49);
        java.util.ArrayList<java.lang.Double> doubleList51 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList49);
        java.util.ArrayList<java.lang.Double> doubleList52 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList51);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList53 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList52);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleList48);
        org.junit.Assert.assertNotNull(doubleList49);
        org.junit.Assert.assertNotNull(doubleList50);
        org.junit.Assert.assertNotNull(doubleList51);
        org.junit.Assert.assertNotNull(doubleList52);
    }

    @Test
    public void test3731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3731");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 100, doubleArray40);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (byte) 1, doubleArray75);
        java.lang.Class<?> wildcardClass78 = doubleArray75.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test3732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3732");
        double[][] doubleArray2 = null;
        double[] doubleArray4 = new double[] {};
        double[] doubleArray5 = new double[] {};
        double[] doubleArray6 = new double[] {};
        double[][] doubleArray7 = new double[][] { doubleArray4, doubleArray5, doubleArray6 };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray46 = new double[][] { doubleArray24, doubleArray31, doubleArray38, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (-1), doubleArray50);
        java.util.ArrayList<java.lang.Double> doubleList52 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray7, doubleArray50);
        java.util.ArrayList<java.lang.Double> doubleList53 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray2, doubleArray7);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList54 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 100, doubleList53);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleList52);
        org.junit.Assert.assertNotNull(doubleList53);
    }

    @Test
    public void test3733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3733");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray43);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray43, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList83);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList83);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList85);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList85);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList85);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.gaussian((int) 'a', doubleList85);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleList88);
    }

    @Test
    public void test3734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3734");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) 'a', doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) -1, doubleArray45);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (-1), doubleArray45);
        java.lang.Class<?> wildcardClass50 = doubleArray45.getClass();
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test3735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3735");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray40);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 10, doubleArray42);
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray85 = new double[][] { doubleArray63, doubleArray70, doubleArray77, doubleArray84 };
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray86);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 10, doubleArray86);
        double[][] doubleArray90 = null;
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray86, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray86);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray92);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray42, doubleArray92);
        java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList94);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList96 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 100, doubleList94);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleList94);
        org.junit.Assert.assertNotNull(doubleList95);
    }

    @Test
    public void test3736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3736");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) 'a', doubleArray47);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) ' ', doubleArray47);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray47);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 100, (int) (byte) 10, doubleArray51);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
    }

    @Test
    public void test3737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3737");
        double[] doubleArray14 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray20 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray26 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray32 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray38 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray44 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray45 = new double[][] { doubleArray14, doubleArray20, doubleArray26, doubleArray32, doubleArray38, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray45);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray46, doubleArray82);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray82);
        double[][] doubleArray87 = null;
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray86, doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList88);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList88);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList90);
        java.lang.Class<?> wildcardClass92 = doubleList90.getClass();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test3738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3738");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray45);
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray85 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray86 = new double[][] { doubleArray64, doubleArray71, doubleArray78, doubleArray85 };
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray86);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray88);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) -1, doubleArray90);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray45, doubleArray90);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList92);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList92);
        java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList94);
        java.util.ArrayList<java.lang.Double> doubleList96 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList94);
        java.util.ArrayList<java.lang.Double> doubleList97 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList96);
        java.util.ArrayList<java.lang.Double> doubleList98 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList96);
        java.lang.Class<?> wildcardClass99 = doubleList98.getClass();
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleList92);
        org.junit.Assert.assertNotNull(doubleList93);
        org.junit.Assert.assertNotNull(doubleList94);
        org.junit.Assert.assertNotNull(doubleList95);
        org.junit.Assert.assertNotNull(doubleList96);
        org.junit.Assert.assertNotNull(doubleList97);
        org.junit.Assert.assertNotNull(doubleList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test3739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3739");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray41);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray41, doubleArray80);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray41);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray83);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (short) -1, doubleArray83);
        java.lang.Class<?> wildcardClass87 = doubleArray86.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test3740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3740");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray45);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray45);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 1, doubleArray49);
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray89 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray90 = new double[][] { doubleArray68, doubleArray75, doubleArray82, doubleArray89 };
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray90);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray90);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray93);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) '#', doubleArray94);
        java.util.ArrayList<java.lang.Double> doubleList96 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray51, doubleArray95);
        java.util.ArrayList<java.lang.Double> doubleList97 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList96);
        java.lang.Class<?> wildcardClass98 = doubleList96.getClass();
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleList96);
        org.junit.Assert.assertNotNull(doubleList97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test3741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3741");
        double[][] doubleArray1 = null;
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray46 = new double[][] { doubleArray24, doubleArray31, doubleArray38, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray47);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) 'a', doubleArray49);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) ' ', doubleArray49);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray49);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 10, doubleArray53);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList55 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) '#', doubleArray1, doubleArray54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"x\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
    }

    @Test
    public void test3742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3742");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray39);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray41, doubleArray74);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (short) 100, doubleArray41);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 0, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) 'a', doubleArray79);
        java.lang.Class<?> wildcardClass81 = doubleArray80.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleList77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test3743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3743");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray40);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 10, doubleArray42);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 100, doubleArray83);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 0, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) -1, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray43, doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList88);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.gaussian((int) '4', doubleList88);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleList89);
    }

    @Test
    public void test3744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3744");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray47);
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray83 = new double[][] { doubleArray61, doubleArray68, doubleArray75, doubleArray82 };
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray47, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 1, doubleArray86);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 10, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (byte) 10, doubleArray88);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 0, doubleArray88);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination(100, (int) (byte) -1, doubleArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
    }

    @Test
    public void test3745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3745");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray38);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) 'a', doubleArray40);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 100, doubleArray82);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 0, doubleArray82);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) 'a', doubleArray41, doubleArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
    }

    @Test
    public void test3746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3746");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray69 = new double[][] { doubleArray47, doubleArray54, doubleArray61, doubleArray68 };
        double[][] doubleArray70 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray69);
        java.util.ArrayList<java.lang.Double> doubleList71 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray38, doubleArray69);
        double[][] doubleArray72 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray69);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray69);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (-1), doubleArray69);
        java.lang.Class<?> wildcardClass75 = doubleArray69.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleList71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test3747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3747");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray41, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 0, doubleArray41);
        double[][] doubleArray83 = null;
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) -1, doubleArray41, doubleArray83);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian((-1), doubleList84);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList84);
    }

    @Test
    public void test3748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3748");
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray46 = new double[][] { doubleArray24, doubleArray31, doubleArray38, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray50);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 100, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray52);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray52);
        java.lang.Class<?> wildcardClass56 = doubleArray52.getClass();
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test3749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3749");
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList15);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian(10, doubleList16);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
    }

    @Test
    public void test3750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3750");
        double[][] doubleArray3 = null;
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray39);
        java.util.ArrayList<java.lang.Double> doubleList42 = com.thealgorithms.maths.Gaussian.valueOfGaussian((-1), doubleArray3, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 0, doubleArray41);
        java.lang.Class<?> wildcardClass44 = doubleArray43.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleList42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test3751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3751");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray40);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray40);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray40);
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray85 = new double[][] { doubleArray63, doubleArray70, doubleArray77, doubleArray84 };
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray86);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 10, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (short) 1, doubleArray89);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.valueOfGaussian((-1), doubleArray44, doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleList92);
    }

    @Test
    public void test3752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3752");
        double[] doubleArray17 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray23 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray29 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray35 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray41 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray47 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray48 = new double[][] { doubleArray17, doubleArray23, doubleArray29, doubleArray35, doubleArray41, doubleArray47 };
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray48);
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray83 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray84 = new double[][] { doubleArray62, doubleArray69, doubleArray76, doubleArray83 };
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray85);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray49, doubleArray85);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray85);
        double[][] doubleArray90 = null;
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray89, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) '4', doubleArray89);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 1, doubleArray89);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (short) 10, doubleArray93);
        java.lang.Class<?> wildcardClass95 = doubleArray94.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test3753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3753");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) 'a', doubleArray47);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) -1, doubleArray47);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 1, doubleArray47);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) 'a', (int) (byte) 0, doubleArray51);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
    }

    @Test
    public void test3754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3754");
        java.lang.Double[] doubleArray10 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList11 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList11, doubleArray10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList11);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) '#', doubleList11);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 4 out of bounds for length 4");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
    }

    @Test
    public void test3755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3755");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (-1), doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) -1, doubleArray49);
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray88 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray89 = new double[][] { doubleArray67, doubleArray74, doubleArray81, doubleArray88 };
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray90);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray90);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray90);
        java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray50, doubleArray94);
        java.util.ArrayList<java.lang.Double> doubleList96 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList95);
        java.util.ArrayList<java.lang.Double> doubleList97 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList96);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList98 = com.thealgorithms.maths.Gaussian.gaussian((int) '4', doubleList97);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleList95);
        org.junit.Assert.assertNotNull(doubleList96);
        org.junit.Assert.assertNotNull(doubleList97);
    }

    @Test
    public void test3756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3756");
        double[] doubleArray16 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray22 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray28 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray34 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray40 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray46 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray47 = new double[][] { doubleArray16, doubleArray22, doubleArray28, doubleArray34, doubleArray40, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray47);
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray83 = new double[][] { doubleArray61, doubleArray68, doubleArray75, doubleArray82 };
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray48, doubleArray84);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray84);
        double[][] doubleArray89 = null;
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray88, doubleArray89);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList90);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList91);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList91);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList91);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList91);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleList92);
        org.junit.Assert.assertNotNull(doubleList93);
        org.junit.Assert.assertNotNull(doubleList94);
    }

    @Test
    public void test3757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3757");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 0, doubleArray42);
        double[][] doubleArray44 = null;
        java.util.ArrayList<java.lang.Double> doubleList45 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray43, doubleArray44);
        java.util.ArrayList<java.lang.Double> doubleList46 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList45);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList47 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) -1, doubleList46);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleList45);
        org.junit.Assert.assertNotNull(doubleList46);
    }

    @Test
    public void test3758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3758");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray40);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray75 = new double[][] { doubleArray53, doubleArray60, doubleArray67, doubleArray74 };
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray75);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray42, doubleArray75);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList78);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList81);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList81);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList81);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian((int) '4', doubleList84);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleList78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleList84);
    }

    @Test
    public void test3759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3759");
        double[][] doubleArray5 = null;
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray43);
        java.util.ArrayList<java.lang.Double> doubleList47 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray5, doubleArray46);
        java.util.ArrayList<java.lang.Double> doubleList48 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList47);
        java.util.ArrayList<java.lang.Double> doubleList49 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList47);
        java.util.ArrayList<java.lang.Double> doubleList50 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList47);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList51 = com.thealgorithms.maths.Gaussian.gaussian((int) 'a', doubleList47);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleList47);
        org.junit.Assert.assertNotNull(doubleList48);
        org.junit.Assert.assertNotNull(doubleList49);
        org.junit.Assert.assertNotNull(doubleList50);
    }

    @Test
    public void test3760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3760");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[] doubleArray49 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray71 = new double[][] { doubleArray49, doubleArray56, doubleArray63, doubleArray70 };
        double[][] doubleArray72 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray71);
        java.util.ArrayList<java.lang.Double> doubleList73 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray39, doubleArray72);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 1, doubleArray39);
        double[][] doubleArray75 = null;
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray39, doubleArray75);
        java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList76);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList76);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleList73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleList77);
    }

    @Test
    public void test3761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3761");
        java.lang.Double[] doubleArray11 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList12 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList12, doubleArray11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList17);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList17);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList19);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
    }

    @Test
    public void test3762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3762");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray44);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray44, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray44);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 0, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (-1), doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 0, doubleArray82);
        java.lang.Class<?> wildcardClass84 = doubleArray82.getClass();
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleList78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test3763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3763");
        java.lang.Double[] doubleArray10 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList11 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList11, doubleArray10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList16);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList16);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList18);
        java.lang.Class<?> wildcardClass20 = doubleList18.getClass();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test3764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3764");
        double[] doubleArray6 = new double[] {};
        double[][] doubleArray7 = new double[][] { doubleArray6 };
        double[][] doubleArray8 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray7);
        double[][] doubleArray9 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray8);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray10 = com.thealgorithms.maths.Gaussian.gaussianElimination(100, (int) '#', doubleArray9);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(doubleArray9);
    }

    @Test
    public void test3765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3765");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray45);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray45);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 10, doubleArray45);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 10, doubleArray45);
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray89 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray90 = new double[][] { doubleArray68, doubleArray75, doubleArray82, doubleArray89 };
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray91);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) -1, doubleArray93);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 10, doubleArray93);
        java.util.ArrayList<java.lang.Double> doubleList96 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) -1, doubleArray45, doubleArray95);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList97 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList96);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleList96);
    }

    @Test
    public void test3766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3766");
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 0.0d, 100.0d, 10.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) -1, doubleList14);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
    }

    @Test
    public void test3767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3767");
        double[] doubleArray11 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray33 = new double[][] { doubleArray11, doubleArray18, doubleArray25, doubleArray32 };
        double[][] doubleArray34 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray33);
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray65 = new double[][] { doubleArray43, doubleArray50, doubleArray57, doubleArray64 };
        double[][] doubleArray66 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray65);
        java.util.ArrayList<java.lang.Double> doubleList67 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray34, doubleArray65);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray68 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) 'a', 1, doubleArray34);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertNotNull(doubleList67);
    }

    @Test
    public void test3768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3768");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray44);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray44, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray44);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 0, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 10, doubleArray80);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '4', (-1), doubleArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleList78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
    }

    @Test
    public void test3769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3769");
        double[] doubleArray15 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray21 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray27 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray33 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray39 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray45 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray46 = new double[][] { doubleArray15, doubleArray21, doubleArray27, doubleArray33, doubleArray39, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray46);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray83);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray47, doubleArray83);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray83);
        double[][] doubleArray88 = null;
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray87, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 10, doubleArray87);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 1, doubleArray87);
        java.lang.Class<?> wildcardClass92 = doubleArray91.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test3770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3770");
        double[] doubleArray20 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray26 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray32 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray38 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray44 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray50 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray51 = new double[][] { doubleArray20, doubleArray26, doubleArray32, doubleArray38, doubleArray44, doubleArray50 };
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray51);
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray86 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray87 = new double[][] { doubleArray65, doubleArray72, doubleArray79, doubleArray86 };
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray88);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray52, doubleArray88);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray52);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) -1, doubleArray52);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 10, doubleArray52);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 1, doubleArray52);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 0, doubleArray52);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray97 = com.thealgorithms.maths.Gaussian.gaussianElimination(100, 100, doubleArray96);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[NaN, NaN, NaN, NaN, NaN]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleArray96);
    }

    @Test
    public void test3771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3771");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray35);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray35);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray75 = new double[][] { doubleArray53, doubleArray60, doubleArray67, doubleArray74 };
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray75);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray75);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 1, doubleArray35, doubleArray79);
        java.lang.Class<?> wildcardClass81 = doubleList80.getClass();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test3772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3772");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) 'a', doubleList14);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
    }

    @Test
    public void test3773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3773");
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList16);
        java.lang.Class<?> wildcardClass18 = doubleList17.getClass();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test3774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3774");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray45);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray47, doubleArray80);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray47);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 100, doubleArray47);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 1, doubleArray47);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) ' ', doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 0, doubleArray86);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', (int) 'a', doubleArray88);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
    }

    @Test
    public void test3775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3775");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray43);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray45, doubleArray78);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray45);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 100, doubleArray45);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 1, doubleArray45);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) -1, doubleArray45);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) 'a', doubleArray85);
        java.lang.Class<?> wildcardClass87 = doubleArray86.getClass();
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test3776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3776");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, 0, doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) '#', doubleArray46);
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray89 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray90 = new double[][] { doubleArray68, doubleArray75, doubleArray82, doubleArray89 };
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray90);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray92);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray94);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray95);
        double[][] doubleArray97 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray96);
        java.util.ArrayList<java.lang.Double> doubleList98 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray46, doubleArray96);
        java.lang.Class<?> wildcardClass99 = doubleList98.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertNotNull(doubleList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test3777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3777");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray40);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray77);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray40, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList80);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList80);
        java.lang.Class<?> wildcardClass84 = doubleList80.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test3778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3778");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray38);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray40);
        double[] doubleArray46 = new double[] {};
        double[][] doubleArray47 = new double[][] { doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) '4', doubleArray48);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList50 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 10, doubleArray40, doubleArray49);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
    }

    @Test
    public void test3779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3779");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray44);
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray85 = new double[][] { doubleArray63, doubleArray70, doubleArray77, doubleArray84 };
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray85);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray87);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) -1, doubleArray89);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray44, doubleArray89);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList91);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList91);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList93);
        java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList93);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList96 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList95);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleList92);
        org.junit.Assert.assertNotNull(doubleList93);
        org.junit.Assert.assertNotNull(doubleList94);
        org.junit.Assert.assertNotNull(doubleList95);
    }

    @Test
    public void test3780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3780");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray35);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray75);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray75);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray37, doubleArray75);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) 'a', (int) (short) -1, doubleArray75);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleList79);
    }

    @Test
    public void test3781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3781");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray43);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray43, doubleArray82);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray82);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '4', doubleArray82);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 0, doubleArray82);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 100, doubleArray82);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 0, doubleArray82);
        java.lang.Class<?> wildcardClass90 = doubleArray82.getClass();
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test3782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3782");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray39);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray75 = new double[][] { doubleArray53, doubleArray60, doubleArray67, doubleArray74 };
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray39, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList79);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian((int) '#', doubleList80);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleList80);
    }

    @Test
    public void test3783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3783");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList9);
        java.lang.Class<?> wildcardClass16 = doubleList9.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test3784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3784");
        java.lang.Double[] doubleArray13 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList14 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList14, doubleArray13);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList21 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList22 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList21);
        java.util.ArrayList<java.lang.Double> doubleList23 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList21);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList24 = com.thealgorithms.maths.Gaussian.gaussian(100, doubleList21);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(doubleList21);
        org.junit.Assert.assertNotNull(doubleList22);
        org.junit.Assert.assertNotNull(doubleList23);
    }

    @Test
    public void test3785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3785");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray43);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray45, doubleArray78);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, 0, doubleArray78);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (-1), doubleArray82);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) '#', doubleArray82);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', (int) (short) 10, doubleArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
    }

    @Test
    public void test3786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3786");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray42);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray42, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray42);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) '#', doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '4', doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 10, doubleArray78);
        java.lang.Class<?> wildcardClass81 = doubleArray78.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test3787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3787");
        double[] doubleArray16 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray22 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray28 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray34 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray40 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray46 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray47 = new double[][] { doubleArray16, doubleArray22, doubleArray28, doubleArray34, doubleArray40, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray47);
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray83 = new double[][] { doubleArray61, doubleArray68, doubleArray75, doubleArray82 };
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray48, doubleArray84);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray84);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 0, doubleArray88);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(10, (-1), doubleArray88);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
    }

    @Test
    public void test3788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3788");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray39);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray41, doubleArray74);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, 0, doubleArray74);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray78);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 10, 0, doubleArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleList77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
    }

    @Test
    public void test3789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3789");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[] doubleArray51 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray73 = new double[][] { doubleArray51, doubleArray58, doubleArray65, doubleArray72 };
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray73);
        java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray41, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 100, doubleArray41);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray77);
        double[][] doubleArray79 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 10, doubleArray77, doubleArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"mat\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleList75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
    }

    @Test
    public void test3790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3790");
        java.lang.Double[] doubleArray10 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList11 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList11, doubleArray10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList17);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList18);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
    }

    @Test
    public void test3791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3791");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray41);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray41, doubleArray80);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray80);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '4', doubleArray80);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 0, doubleArray80);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray80);
        java.lang.Class<?> wildcardClass87 = doubleArray86.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test3792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3792");
        double[] doubleArray6 = new double[] {};
        double[][] doubleArray7 = new double[][] { doubleArray6 };
        double[][] doubleArray8 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray7);
        double[][] doubleArray9 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray8);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray10 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', (int) (short) -1, doubleArray9);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(doubleArray9);
    }

    @Test
    public void test3793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3793");
        double[][] doubleArray2 = null;
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray40);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray40);
        java.util.ArrayList<java.lang.Double> doubleList44 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray2, doubleArray43);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList45 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList44);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleList44);
    }

    @Test
    public void test3794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3794");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray43);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray45, doubleArray78);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray45);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 100, doubleArray45);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '4', doubleArray45);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 100, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '#', doubleArray84);
        java.lang.Class<?> wildcardClass87 = doubleArray86.getClass();
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test3795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3795");
        java.lang.Double[] doubleArray11 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList12 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList12, doubleArray11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList17);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList17);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList19);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
    }

    @Test
    public void test3796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3796");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 10, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) ' ', doubleArray46);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', (int) (short) 0, doubleArray48);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
    }

    @Test
    public void test3797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3797");
        java.lang.Double[] doubleArray12 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList13 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList13, doubleArray12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList21 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList20);
        java.util.ArrayList<java.lang.Double> doubleList22 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList20);
        java.lang.Class<?> wildcardClass23 = doubleList20.getClass();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(doubleList21);
        org.junit.Assert.assertNotNull(doubleList22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test3798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3798");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) 'a', doubleArray73);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray73);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) '#', doubleArray73);
        java.lang.Class<?> wildcardClass78 = doubleArray77.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test3799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3799");
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray48 = new double[][] { doubleArray26, doubleArray33, doubleArray40, doubleArray47 };
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray49);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray49);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray49);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 10, doubleArray49);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 10, doubleArray49);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (short) -1, doubleArray49);
        double[][] doubleArray57 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (short) 10, doubleArray49);
        double[][] doubleArray58 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 0, doubleArray57);
        java.lang.Class<?> wildcardClass59 = doubleArray57.getClass();
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test3800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3800");
        double[] doubleArray11 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray17 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray23 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray29 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray35 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray41 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray42 = new double[][] { doubleArray11, doubleArray17, doubleArray23, doubleArray29, doubleArray35, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray78);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray43, doubleArray78);
        double[][] doubleArray85 = new double[][] {};
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray85);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray78, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) '#', doubleArray78);
        java.lang.Class<?> wildcardClass89 = doubleArray78.getClass();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test3801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3801");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray41);
        double[] doubleArray51 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray73 = new double[][] { doubleArray51, doubleArray58, doubleArray65, doubleArray72 };
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray73);
        java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray41, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray41);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) '#', doubleArray41);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 10, doubleArray41);
        double[] doubleArray82 = new double[] { (byte) 1 };
        double[] doubleArray84 = new double[] { (byte) 1 };
        double[] doubleArray86 = new double[] { (byte) 1 };
        double[] doubleArray88 = new double[] { (byte) 1 };
        double[][] doubleArray89 = new double[][] { doubleArray82, doubleArray84, doubleArray86, doubleArray88 };
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray89);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) '#', doubleArray41, doubleArray90);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[1.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleList75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
    }

    @Test
    public void test3802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3802");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray41);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray41);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(10, (int) (short) 10, doubleArray41);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
    }

    @Test
    public void test3803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3803");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray39);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray41, doubleArray74);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray41);
        double[][] doubleArray79 = null;
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) -1, doubleArray78, doubleArray79);
        double[][] doubleArray81 = null;
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray79, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList82);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 10, doubleList83);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleList77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
    }

    @Test
    public void test3804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3804");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray35);
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray83 = new double[][] { doubleArray61, doubleArray68, doubleArray75, doubleArray82 };
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray83);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray85);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 1, doubleArray91);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray35, doubleArray92);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.gaussian(10, doubleList93);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleList93);
    }

    @Test
    public void test3805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3805");
        double[] doubleArray16 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray22 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray28 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray34 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray40 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray46 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray47 = new double[][] { doubleArray16, doubleArray22, doubleArray28, doubleArray34, doubleArray40, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray47);
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray83 = new double[][] { doubleArray61, doubleArray68, doubleArray75, doubleArray82 };
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray48, doubleArray84);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray84);
        double[][] doubleArray89 = null;
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray88, doubleArray89);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList90);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList90);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList90);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList93);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList94);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleList92);
        org.junit.Assert.assertNotNull(doubleList93);
        org.junit.Assert.assertNotNull(doubleList94);
    }

    @Test
    public void test3806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3806");
        double[] doubleArray13 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray19 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray25 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray31 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray37 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray43 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray44 = new double[][] { doubleArray13, doubleArray19, doubleArray25, doubleArray31, doubleArray37, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray44);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray45, doubleArray81);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray81);
        double[][] doubleArray86 = null;
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray85, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList87);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList87);
        java.lang.Class<?> wildcardClass90 = doubleList89.getClass();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test3807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3807");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray44);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray44);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, 0, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 100, doubleArray48);
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray88 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray89 = new double[][] { doubleArray67, doubleArray74, doubleArray81, doubleArray88 };
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 100, doubleArray90);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 0, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) -1, doubleArray93);
        java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 1, doubleArray50, doubleArray93);
        java.lang.Class<?> wildcardClass96 = doubleArray50.getClass();
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleList95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test3808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3808");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray43);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray43, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 1, doubleArray82);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (-1), doubleArray82);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 0, doubleArray82);
        java.lang.Class<?> wildcardClass87 = doubleArray86.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test3809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3809");
        double[][] doubleArray2 = null;
        double[][] doubleArray3 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
    }

    @Test
    public void test3810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3810");
        double[] doubleArray14 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray20 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray26 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray32 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray38 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray44 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray45 = new double[][] { doubleArray14, doubleArray20, doubleArray26, doubleArray32, doubleArray38, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray45);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 1, doubleArray46, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 10, doubleArray84);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) '4', doubleArray84);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 10, (int) (byte) -1, doubleArray87);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.01, 1.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
    }

    @Test
    public void test3811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3811");
        double[] doubleArray10 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray16 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray22 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray28 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray34 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray40 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray41 = new double[][] { doubleArray10, doubleArray16, doubleArray22, doubleArray28, doubleArray34, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray42, doubleArray78);
        double[] doubleArray84 = new double[] {};
        double[][] doubleArray85 = new double[][] { doubleArray84 };
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray85);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray78, doubleArray85);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList87);
        java.lang.Class<?> wildcardClass89 = doubleList88.getClass();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test3812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3812");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 0, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray41);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 100, (int) (byte) 10, doubleArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
    }

    @Test
    public void test3813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3813");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray42);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray42, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList82);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList82);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList84);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList84);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList84);
        java.lang.Class<?> wildcardClass88 = doubleList87.getClass();
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test3814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3814");
        double[][] doubleArray4 = new double[][] {};
        double[][] doubleArray5 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray4);
        double[][] doubleArray6 = null;
        java.util.ArrayList<java.lang.Double> doubleList7 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray4, doubleArray6);
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray47 = new double[][] { doubleArray25, doubleArray32, doubleArray39, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 100, doubleArray49);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray49);
        double[][] doubleArray53 = null;
        java.util.ArrayList<java.lang.Double> doubleList54 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray49, doubleArray53);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList55 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) '4', doubleArray4, doubleArray49);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertNotNull(doubleList7);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleList54);
    }

    @Test
    public void test3815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3815");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray41, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList81);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList81);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList81);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList84);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleList84);
    }

    @Test
    public void test3816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3816");
        double[][] doubleArray2 = null;
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray38);
        java.util.ArrayList<java.lang.Double> doubleList41 = com.thealgorithms.maths.Gaussian.valueOfGaussian((-1), doubleArray2, doubleArray40);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList42 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 10, doubleList41);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleList41);
    }

    @Test
    public void test3817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3817");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 100, doubleArray40);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray82);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray82);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray85);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray40, doubleArray85);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) -1, doubleArray85);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
    }

    @Test
    public void test3818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3818");
        double[] doubleArray15 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray21 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray27 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray33 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray39 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray45 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray46 = new double[][] { doubleArray15, doubleArray21, doubleArray27, doubleArray33, doubleArray39, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray46);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray82);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray47, doubleArray82);
        double[][] doubleArray89 = new double[][] {};
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray89);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray82, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (short) 1, doubleArray90);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 100, doubleArray90);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 10, (int) (short) 1, doubleArray90);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
    }

    @Test
    public void test3819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3819");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) 'a', doubleArray43);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) '4', doubleArray46);
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray87 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray88 = new double[][] { doubleArray66, doubleArray73, doubleArray80, doubleArray87 };
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray88);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray90);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) 'a', doubleArray90);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) '4', doubleArray93);
        java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray46, doubleArray93);
        java.lang.Class<?> wildcardClass96 = doubleList95.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleList95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test3820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3820");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray45);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray45);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 1, doubleArray49);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) 'a', (-1), doubleArray49);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
    }

    @Test
    public void test3821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3821");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray44);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray44, doubleArray83);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList84);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList84);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList84);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList84);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList84);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList84);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) -1, doubleList90);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleList90);
    }

    @Test
    public void test3822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3822");
        double[] doubleArray16 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray22 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray28 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray34 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray40 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray46 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray47 = new double[][] { doubleArray16, doubleArray22, doubleArray28, doubleArray34, doubleArray40, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray47);
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray83 = new double[][] { doubleArray61, doubleArray68, doubleArray75, doubleArray82 };
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray48, doubleArray84);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray84);
        double[][] doubleArray89 = null;
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray88, doubleArray89);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList90);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList90);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList90);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList93);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) -1, doubleList94);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleList92);
        org.junit.Assert.assertNotNull(doubleList93);
        org.junit.Assert.assertNotNull(doubleList94);
    }

    @Test
    public void test3823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3823");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray38);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (short) 1, doubleArray40);
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray87 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray88 = new double[][] { doubleArray66, doubleArray73, doubleArray80, doubleArray87 };
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray88);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray90);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray93);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray93);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 0, doubleArray95);
        double[][] doubleArray97 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) '4', doubleArray95);
        java.util.ArrayList<java.lang.Double> doubleList98 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray95);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertNotNull(doubleList98);
    }

    @Test
    public void test3824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3824");
        java.lang.Double[] doubleArray12 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList13 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList13, doubleArray12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList21 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList20);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList22 = com.thealgorithms.maths.Gaussian.gaussian(100, doubleList21);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(doubleList21);
    }

    @Test
    public void test3825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3825");
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray49 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray50 = new double[][] { doubleArray28, doubleArray35, doubleArray42, doubleArray49 };
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray51);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray51);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray51);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 10, doubleArray51);
        double[][] doubleArray57 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 10, doubleArray51);
        double[][] doubleArray58 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (short) -1, doubleArray51);
        double[][] doubleArray59 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (short) 10, doubleArray51);
        double[][] doubleArray60 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 1, doubleArray51);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray61 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 100, (int) (byte) 100, doubleArray60);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertNotNull(doubleArray60);
    }

    @Test
    public void test3826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3826");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray67 = new double[][] { doubleArray45, doubleArray52, doubleArray59, doubleArray66 };
        double[][] doubleArray68 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray67);
        java.util.ArrayList<java.lang.Double> doubleList69 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray36, doubleArray67);
        java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList69);
        java.util.ArrayList<java.lang.Double> doubleList71 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList69);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList69);
        java.util.ArrayList<java.lang.Double> doubleList73 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList72);
        java.lang.Class<?> wildcardClass74 = doubleList72.getClass();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleList69);
        org.junit.Assert.assertNotNull(doubleList70);
        org.junit.Assert.assertNotNull(doubleList71);
        org.junit.Assert.assertNotNull(doubleList72);
        org.junit.Assert.assertNotNull(doubleList73);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test3827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3827");
        double[] doubleArray3 = new double[] {};
        double[] doubleArray4 = new double[] {};
        double[] doubleArray5 = new double[] {};
        double[][] doubleArray6 = new double[][] { doubleArray3, doubleArray4, doubleArray5 };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray47);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (-1), doubleArray49);
        java.util.ArrayList<java.lang.Double> doubleList51 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray6, doubleArray49);
        java.util.ArrayList<java.lang.Double> doubleList52 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList51);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList53 = com.thealgorithms.maths.Gaussian.gaussian(100, doubleList52);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleList51);
        org.junit.Assert.assertNotNull(doubleList52);
    }

    @Test
    public void test3828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3828");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray43);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray83);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray83);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray45, doubleArray83);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 0, doubleArray83);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray88);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 0, doubleArray88);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) ' ', (int) (short) 10, doubleArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
    }

    @Test
    public void test3829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3829");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray42, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) 'a', doubleArray75);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 100, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) '4', doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 10, doubleArray78);
        java.lang.Class<?> wildcardClass81 = doubleArray80.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test3830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3830");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray41);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray41, doubleArray80);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray80);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 100, doubleArray80);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) -1, doubleArray80);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(10, (int) (short) 100, doubleArray85);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
    }

    @Test
    public void test3831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3831");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray46);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray46, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 100, doubleArray46);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray82);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 10, doubleArray82);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 10, (int) '4', doubleArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
    }

    @Test
    public void test3832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3832");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[] doubleArray49 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray71 = new double[][] { doubleArray49, doubleArray56, doubleArray63, doubleArray70 };
        double[][] doubleArray72 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray71);
        java.util.ArrayList<java.lang.Double> doubleList73 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray39, doubleArray72);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 1, doubleArray39);
        double[][] doubleArray75 = null;
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray39, doubleArray75);
        java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList76);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList76);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleList73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleList77);
    }

    @Test
    public void test3833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3833");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray39);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray39, doubleArray78);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray39);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray81);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '4', (int) (short) 100, doubleArray81);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
    }

    @Test
    public void test3834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3834");
        double[][] doubleArray2 = null;
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray46 = new double[][] { doubleArray24, doubleArray31, doubleArray38, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray46);
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray83 = new double[][] { doubleArray61, doubleArray68, doubleArray75, doubleArray82 };
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray85);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray46, doubleArray85);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray85);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '4', doubleArray85);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray85);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (short) 0, doubleArray85);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 10, doubleArray85);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray2, doubleArray85);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList93);
        java.lang.Class<?> wildcardClass95 = doubleList94.getClass();
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleList93);
        org.junit.Assert.assertNotNull(doubleList94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test3835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3835");
        double[][] doubleArray1 = null;
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 0, doubleArray43);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) '4', doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 1, doubleArray46);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList49 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) ' ', doubleArray1, doubleArray46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"x\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
    }

    @Test
    public void test3836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3836");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray39);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray39);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 100, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (-1), doubleArray42);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray83);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray44, doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList86);
    }

    @Test
    public void test3837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3837");
        java.lang.Double[] doubleArray13 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList14 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList14, doubleArray13);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList21 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList20);
        java.util.ArrayList<java.lang.Double> doubleList22 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList21);
        java.util.ArrayList<java.lang.Double> doubleList23 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList21);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList24 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList21);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(doubleList21);
        org.junit.Assert.assertNotNull(doubleList22);
        org.junit.Assert.assertNotNull(doubleList23);
    }

    @Test
    public void test3838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3838");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray70 = new double[][] { doubleArray48, doubleArray55, doubleArray62, doubleArray69 };
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray70);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray38, doubleArray71);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) '#', doubleArray71);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', 10, doubleArray73);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleList72);
        org.junit.Assert.assertNotNull(doubleArray73);
    }

    @Test
    public void test3839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3839");
        double[] doubleArray10 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray16 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray22 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray28 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray34 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray40 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray41 = new double[][] { doubleArray10, doubleArray16, doubleArray22, doubleArray28, doubleArray34, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[][] doubleArray43 = null;
        java.util.ArrayList<java.lang.Double> doubleList44 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray42, doubleArray43);
        java.util.ArrayList<java.lang.Double> doubleList45 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList44);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList46 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList45);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleList44);
        org.junit.Assert.assertNotNull(doubleList45);
    }

    @Test
    public void test3840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3840");
        double[][] doubleArray1 = null;
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray70 = new double[][] { doubleArray48, doubleArray55, doubleArray62, doubleArray69 };
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray70);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray38, doubleArray71);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 100, doubleArray38);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 10, doubleArray1, doubleArray73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"x\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleList72);
        org.junit.Assert.assertNotNull(doubleArray73);
    }

    @Test
    public void test3841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3841");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList12);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) ' ', doubleList12);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
    }

    @Test
    public void test3842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3842");
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray48 = new double[][] { doubleArray26, doubleArray33, doubleArray40, doubleArray47 };
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray50);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray53);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray53);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 100, doubleArray55);
        double[][] doubleArray57 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (short) -1, doubleArray55);
        double[][] doubleArray58 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 1, doubleArray57);
        java.lang.Class<?> wildcardClass59 = doubleArray58.getClass();
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test3843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3843");
        double[] doubleArray8 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray14 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray20 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray26 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray32 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray38 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray39 = new double[][] { doubleArray8, doubleArray14, doubleArray20, doubleArray26, doubleArray32, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray83 = new double[][] { doubleArray61, doubleArray68, doubleArray75, doubleArray82 };
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray84);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray84);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray84);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray89);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray39, doubleArray90);
        java.lang.Class<?> wildcardClass92 = doubleList91.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test3844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3844");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 10, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 1, doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray44);
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray87 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray88 = new double[][] { doubleArray66, doubleArray73, doubleArray80, doubleArray87 };
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray89);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray91);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, 0, doubleArray91);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) '#', doubleArray93);
        java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.valueOfGaussian((-1), doubleArray47, doubleArray93);
        java.lang.Class<?> wildcardClass96 = doubleList95.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleList95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test3845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3845");
        double[][] doubleArray2 = null;
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray42);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray42, doubleArray81);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray42);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 0, doubleArray85);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray2, doubleArray86);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.gaussian((int) '#', doubleList87);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
    }

    @Test
    public void test3846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3846");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray67 = new double[][] { doubleArray45, doubleArray52, doubleArray59, doubleArray66 };
        double[][] doubleArray68 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray67);
        java.util.ArrayList<java.lang.Double> doubleList69 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray36, doubleArray67);
        java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList69);
        java.util.ArrayList<java.lang.Double> doubleList71 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList70);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList71);
        java.util.ArrayList<java.lang.Double> doubleList73 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList71);
        java.lang.Class<?> wildcardClass74 = doubleList71.getClass();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleList69);
        org.junit.Assert.assertNotNull(doubleList70);
        org.junit.Assert.assertNotNull(doubleList71);
        org.junit.Assert.assertNotNull(doubleList72);
        org.junit.Assert.assertNotNull(doubleList73);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test3847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3847");
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray46 = new double[][] { doubleArray24, doubleArray31, doubleArray38, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray50);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 100, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray52);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray52);
        java.lang.Class<?> wildcardClass56 = doubleArray55.getClass();
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test3848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3848");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray40);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) 'a', doubleArray42);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 0, doubleArray42);
        java.lang.Class<?> wildcardClass47 = doubleArray46.getClass();
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test3849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3849");
        double[][] doubleArray1 = null;
        double[] doubleArray15 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray21 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray27 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray33 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray39 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray45 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray46 = new double[][] { doubleArray15, doubleArray21, doubleArray27, doubleArray33, doubleArray39, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray46);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray82);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray47, doubleArray82);
        double[][] doubleArray89 = new double[][] {};
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray89);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray82, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 0, doubleArray90);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 0, doubleArray92);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 100, doubleArray1, doubleArray92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"x\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
    }

    @Test
    public void test3850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3850");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray39);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray79);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray41, doubleArray79);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) '#', doubleArray41);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 1, doubleArray41);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 10, (int) (short) 0, doubleArray85);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
    }

    @Test
    public void test3851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3851");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray39);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray41, doubleArray74);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 100, doubleArray41);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 10, doubleArray78);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) 'a', (int) (byte) 100, doubleArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleList77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
    }

    @Test
    public void test3852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3852");
        double[][] doubleArray1 = null;
        double[][] doubleArray3 = null;
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray47 = new double[][] { doubleArray25, doubleArray32, doubleArray39, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray47);
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray83 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray84 = new double[][] { doubleArray62, doubleArray69, doubleArray76, doubleArray83 };
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray47, doubleArray86);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray86);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '4', doubleArray86);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray86);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (short) 0, doubleArray86);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 10, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray3, doubleArray86);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray1, doubleArray3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"x\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleList94);
    }

    @Test
    public void test3853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3853");
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray46 = new double[][] { doubleArray24, doubleArray31, doubleArray38, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray47);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray47);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray47);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 100, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (byte) 100, doubleArray53);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) 'a', (int) (byte) 1, doubleArray53);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
    }

    @Test
    public void test3854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3854");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray44);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray44, doubleArray83);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList84);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList84);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList84);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList84);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList84);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList84);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian((int) ' ', doubleList84);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleList90);
    }

    @Test
    public void test3855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3855");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray45);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray45, doubleArray84);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray45);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray87);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 0, doubleArray87);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 100, doubleArray87);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination(100, 10, doubleArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
    }

    @Test
    public void test3856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3856");
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray46 = new double[][] { doubleArray24, doubleArray31, doubleArray38, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) 'a', doubleArray48);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) '4', doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 1, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray53);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (short) 0, doubleArray54);
        java.lang.Class<?> wildcardClass56 = doubleArray54.getClass();
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test3857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3857");
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray48 = new double[][] { doubleArray26, doubleArray33, doubleArray40, doubleArray47 };
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray49);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray49);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray49);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 10, doubleArray49);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 10, doubleArray49);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (short) -1, doubleArray49);
        double[][] doubleArray57 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (short) 10, doubleArray49);
        double[][] doubleArray58 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray49);
        java.lang.Class<?> wildcardClass59 = doubleArray58.getClass();
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test3858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3858");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray43);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray43, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 1, doubleArray82);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray82);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) ' ', (int) (byte) 0, doubleArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
    }

    @Test
    public void test3859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3859");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 10, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 1, doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray44);
        double[][] doubleArray48 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList49 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) ' ', doubleArray47, doubleArray48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"mat\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
    }

    @Test
    public void test3860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3860");
        double[] doubleArray14 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray20 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray26 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray32 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray38 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray44 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray45 = new double[][] { doubleArray14, doubleArray20, doubleArray26, doubleArray32, doubleArray38, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray45);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray46, doubleArray82);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray82);
        double[][] doubleArray87 = null;
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray86, doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList88);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList88);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList90);
        java.lang.Class<?> wildcardClass92 = doubleList91.getClass();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test3861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3861");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray43);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray43, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 0, doubleArray43);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) 'a', doubleArray84);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 10, 0, doubleArray85);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, -9999.0, 0.0, 9999.0, -969903.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
    }

    @Test
    public void test3862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3862");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) 'a', doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) ' ', doubleArray48);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray48);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) '4', doubleArray48);
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray91 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray92 = new double[][] { doubleArray70, doubleArray77, doubleArray84, doubleArray91 };
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray92);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray94);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray94);
        double[][] doubleArray97 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray96);
        java.util.ArrayList<java.lang.Double> doubleList98 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray53, doubleArray97);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertNotNull(doubleList98);
    }

    @Test
    public void test3863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3863");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (-1), doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) -1, doubleArray48);
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray87 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray88 = new double[][] { doubleArray66, doubleArray73, doubleArray80, doubleArray87 };
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray89);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray89);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray89);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray49, doubleArray93);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (byte) 0, doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleList94);
        org.junit.Assert.assertNotNull(doubleArray95);
    }

    @Test
    public void test3864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3864");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray44);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray44);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray48);
        double[][] doubleArray53 = null;
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray89 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray90 = new double[][] { doubleArray68, doubleArray75, doubleArray82, doubleArray89 };
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray91);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray91);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray91);
        java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray53, doubleArray94);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) '#', doubleArray94);
        java.util.ArrayList<java.lang.Double> doubleList97 = com.thealgorithms.maths.Gaussian.valueOfGaussian((-1), doubleArray48, doubleArray94);
        double[][] doubleArray98 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleList95);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertNotNull(doubleList97);
        org.junit.Assert.assertNotNull(doubleArray98);
    }

    @Test
    public void test3865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3865");
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray47 = new double[][] { doubleArray25, doubleArray32, doubleArray39, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray47);
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray83 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray84 = new double[][] { doubleArray62, doubleArray69, doubleArray76, doubleArray83 };
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray47, doubleArray86);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray86);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '4', doubleArray86);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray86);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (short) 0, doubleArray91);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 1, doubleArray91);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 10, doubleArray91);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 10, (int) ' ', doubleArray94);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
    }

    @Test
    public void test3866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3866");
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray48 = new double[][] { doubleArray26, doubleArray33, doubleArray40, doubleArray47 };
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 100, doubleArray50);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray50);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (byte) 100, doubleArray53);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 1, doubleArray53);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '#', doubleArray55);
        double[][] doubleArray57 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) ' ', doubleArray56);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray58 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '4', (int) (short) 10, doubleArray57);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
    }

    @Test
    public void test3867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3867");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray46);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray46, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) 'a', doubleArray79);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray79);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 10, doubleArray79);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (short) 10, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (-1), doubleArray84);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 100, 1, doubleArray84);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
    }

    @Test
    public void test3868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3868");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) 'a', doubleArray47);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) ' ', doubleArray47);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray47);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 100, doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
    }

    @Test
    public void test3869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3869");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray42);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (-1), doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) 'a', doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 1, doubleArray47);
        java.lang.Class<?> wildcardClass50 = doubleArray49.getClass();
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test3870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3870");
        double[] doubleArray18 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray24 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray30 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray36 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray42 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray48 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray49 = new double[][] { doubleArray18, doubleArray24, doubleArray30, doubleArray36, doubleArray42, doubleArray48 };
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray49);
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray85 = new double[][] { doubleArray63, doubleArray70, doubleArray77, doubleArray84 };
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray50, doubleArray86);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray50);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) '#', doubleArray50);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray50);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) 'a', doubleArray50);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) ' ', (int) (byte) 1, doubleArray93);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[NaN, NaN, NaN, NaN, NaN]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
    }

    @Test
    public void test3871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3871");
        double[] doubleArray11 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray33 = new double[][] { doubleArray11, doubleArray18, doubleArray25, doubleArray32 };
        double[][] doubleArray34 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray33);
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray65 = new double[][] { doubleArray43, doubleArray50, doubleArray57, doubleArray64 };
        double[][] doubleArray66 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray65);
        java.util.ArrayList<java.lang.Double> doubleList67 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray34, doubleArray65);
        java.util.ArrayList<java.lang.Double> doubleList68 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList67);
        java.util.ArrayList<java.lang.Double> doubleList69 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList67);
        java.lang.Class<?> wildcardClass70 = doubleList67.getClass();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertNotNull(doubleList67);
        org.junit.Assert.assertNotNull(doubleList68);
        org.junit.Assert.assertNotNull(doubleList69);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test3872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3872");
        java.lang.Double[] doubleArray13 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList14 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList14, doubleArray13);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList21 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList20);
        java.util.ArrayList<java.lang.Double> doubleList22 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList21);
        java.util.ArrayList<java.lang.Double> doubleList23 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList21);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList24 = com.thealgorithms.maths.Gaussian.gaussian((int) '4', doubleList21);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(doubleList21);
        org.junit.Assert.assertNotNull(doubleList22);
        org.junit.Assert.assertNotNull(doubleList23);
    }

    @Test
    public void test3873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3873");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray37);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (short) 1, doubleArray39);
        java.lang.Class<?> wildcardClass41 = doubleArray39.getClass();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test3874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3874");
        double[] doubleArray16 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray22 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray28 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray34 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray40 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray46 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray47 = new double[][] { doubleArray16, doubleArray22, doubleArray28, doubleArray34, doubleArray40, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray47);
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray83 = new double[][] { doubleArray61, doubleArray68, doubleArray75, doubleArray82 };
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray48, doubleArray84);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray48);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) '#', doubleArray48);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray48);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(10, 100, doubleArray48);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[NaN, NaN, NaN, NaN, NaN]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
    }

    @Test
    public void test3875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3875");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((int) 'a', doubleList10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertNotNull(doubleList10);
    }

    @Test
    public void test3876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3876");
        java.util.ArrayList<java.lang.Double> doubleList5 = null;
        java.util.ArrayList<java.lang.Double> doubleList6 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList5);
        java.util.ArrayList<java.lang.Double> doubleList7 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList5);
        java.util.ArrayList<java.lang.Double> doubleList8 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList7);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList7);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleList6);
        org.junit.Assert.assertNotNull(doubleList7);
        org.junit.Assert.assertNotNull(doubleList8);
        org.junit.Assert.assertNotNull(doubleList9);
    }

    @Test
    public void test3877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3877");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray44);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray83);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray44, doubleArray83);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray83);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '4', doubleArray83);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray83);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 100, doubleArray83);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) '#', doubleArray83);
        double[][] doubleArray91 = null;
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray90, doubleArray91);
        java.lang.Class<?> wildcardClass93 = doubleList92.getClass();
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleList92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test3878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3878");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray45);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray45);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 100, doubleArray50);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 100, (int) (short) 1, doubleArray51);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
    }

    @Test
    public void test3879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3879");
        double[] doubleArray9 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray31 = new double[][] { doubleArray9, doubleArray16, doubleArray23, doubleArray30 };
        double[][] doubleArray32 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray31);
        double[] doubleArray51 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray73 = new double[][] { doubleArray51, doubleArray58, doubleArray65, doubleArray72 };
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray74);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 10, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) ' ', doubleArray76);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 1, doubleArray31, doubleArray79);
        java.lang.Class<?> wildcardClass81 = doubleArray31.getClass();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray9), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test3880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3880");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray70 = new double[][] { doubleArray48, doubleArray55, doubleArray62, doubleArray69 };
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray70);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray38, doubleArray71);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray38);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '4', (int) '#', doubleArray73);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleList72);
        org.junit.Assert.assertNotNull(doubleArray73);
    }

    @Test
    public void test3881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3881");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray46);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray46, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) 'a', doubleArray79);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray79);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 10, doubleArray79);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (short) 1, doubleArray79);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray79);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 1, doubleArray79);
        java.lang.Class<?> wildcardClass87 = doubleArray86.getClass();
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test3882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3882");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray46);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray46, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 100, doubleArray46);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray82);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 10, doubleArray82);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) ' ', doubleArray85);
        java.lang.Class<?> wildcardClass87 = doubleArray85.getClass();
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test3883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3883");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.lang.Class<?> wildcardClass12 = doubleList10.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test3884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3884");
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray49 = new double[][] { doubleArray27, doubleArray34, doubleArray41, doubleArray48 };
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray49);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray51);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray53);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray54);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray54);
        double[][] doubleArray57 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray54);
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray91 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray92 = new double[][] { doubleArray70, doubleArray77, doubleArray84, doubleArray91 };
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray92);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray94);
        java.util.ArrayList<java.lang.Double> doubleList96 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray57, doubleArray94);
        double[][] doubleArray97 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (-1), doubleArray57);
        double[][] doubleArray98 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 100, doubleArray97);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleList96);
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertNotNull(doubleArray98);
    }

    @Test
    public void test3885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3885");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 10, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) ' ', doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray45);
        java.lang.Class<?> wildcardClass47 = doubleArray46.getClass();
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test3886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3886");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, 0, doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) '#', doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) -1, doubleArray49);
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray83 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray90 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray91 = new double[][] { doubleArray69, doubleArray76, doubleArray83, doubleArray90 };
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray91);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray92);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray94);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) 'a', doubleArray95);
        double[][] doubleArray97 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 0, doubleArray96);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList98 = com.thealgorithms.maths.Gaussian.valueOfGaussian(10, doubleArray49, doubleArray96);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertNotNull(doubleArray97);
    }

    @Test
    public void test3887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3887");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((-1), doubleList14);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
    }

    @Test
    public void test3888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3888");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[] doubleArray51 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray73 = new double[][] { doubleArray51, doubleArray58, doubleArray65, doubleArray72 };
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray73);
        java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray41, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 100, doubleArray41);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) -1, doubleArray41);
        double[][] doubleArray78 = null;
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray41, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList79);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList80);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleList75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleList80);
    }

    @Test
    public void test3889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3889");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray40);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) 'a', doubleArray42);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray84);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 100, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray43, doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList88);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.gaussian(10, doubleList89);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleList89);
    }

    @Test
    public void test3890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3890");
        java.lang.Double[] doubleArray11 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList12 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList12, doubleArray11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList18);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList19);
        java.lang.Class<?> wildcardClass21 = doubleList19.getClass();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test3891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3891");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList8);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList11);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
    }

    @Test
    public void test3892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3892");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (-1), doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) -1, doubleArray49);
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray88 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray89 = new double[][] { doubleArray67, doubleArray74, doubleArray81, doubleArray88 };
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray90);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray90);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray90);
        java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray50, doubleArray94);
        java.util.ArrayList<java.lang.Double> doubleList96 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList95);
        java.util.ArrayList<java.lang.Double> doubleList97 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList96);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList98 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) -1, doubleList96);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleList95);
        org.junit.Assert.assertNotNull(doubleList96);
        org.junit.Assert.assertNotNull(doubleList97);
    }

    @Test
    public void test3893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3893");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray40);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray77);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray40, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList80);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian((-1), doubleList82);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
    }

    @Test
    public void test3894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3894");
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray46 = new double[][] { doubleArray24, doubleArray31, doubleArray38, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray50);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 100, doubleArray52);
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray88 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray89 = new double[][] { doubleArray67, doubleArray74, doubleArray81, doubleArray88 };
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray90);
        double[][] doubleArray93 = null;
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.valueOfGaussian((-1), doubleArray90, doubleArray93);
        java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 1, doubleArray52, doubleArray90);
        java.util.ArrayList<java.lang.Double> doubleList96 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList95);
        java.util.ArrayList<java.lang.Double> doubleList97 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList95);
        java.util.ArrayList<java.lang.Double> doubleList98 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList97);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleList94);
        org.junit.Assert.assertNotNull(doubleList95);
        org.junit.Assert.assertNotNull(doubleList96);
        org.junit.Assert.assertNotNull(doubleList97);
        org.junit.Assert.assertNotNull(doubleList98);
    }

    @Test
    public void test3895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3895");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray43);
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray83 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray84 = new double[][] { doubleArray62, doubleArray69, doubleArray76, doubleArray83 };
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray84);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray86);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) -1, doubleArray88);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray43, doubleArray88);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList90);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList90);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList92);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList92);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleList92);
        org.junit.Assert.assertNotNull(doubleList93);
    }

    @Test
    public void test3896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3896");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray38);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray70 = new double[][] { doubleArray48, doubleArray55, doubleArray62, doubleArray69 };
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray70);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray38, doubleArray71);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray38);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) 'a', (int) ' ', doubleArray38);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleList72);
        org.junit.Assert.assertNotNull(doubleArray73);
    }

    @Test
    public void test3897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3897");
        double[] doubleArray12 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray18 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray24 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray30 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray36 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray42 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray43 = new double[][] { doubleArray12, doubleArray18, doubleArray24, doubleArray30, doubleArray36, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 1, doubleArray44, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 10, doubleArray82);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', (int) (byte) 1, doubleArray84);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.01, 1.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleArray84);
    }

    @Test
    public void test3898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3898");
        double[] doubleArray14 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray20 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray26 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray32 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray38 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray44 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray45 = new double[][] { doubleArray14, doubleArray20, doubleArray26, doubleArray32, doubleArray38, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray45);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray81);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray46, doubleArray81);
        double[][] doubleArray88 = new double[][] {};
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray88);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray81, doubleArray89);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList90);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList91);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList92);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList92);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.gaussian((int) 'a', doubleList92);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleList92);
        org.junit.Assert.assertNotNull(doubleList93);
        org.junit.Assert.assertNotNull(doubleList94);
    }

    @Test
    public void test3899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3899");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray37);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 1, doubleArray39);
        java.lang.Class<?> wildcardClass41 = doubleArray40.getClass();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test3900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3900");
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray47 = new double[][] { doubleArray25, doubleArray32, doubleArray39, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) '4', doubleArray50);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, 0, doubleArray50);
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray89 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray90 = new double[][] { doubleArray68, doubleArray75, doubleArray82, doubleArray89 };
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray91);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray91);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray91);
        java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray50, doubleArray91);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray91);
        double[][] doubleArray97 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (byte) 0, doubleArray91);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray98 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) 'a', (int) (byte) 1, doubleArray97);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleList95);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertNotNull(doubleArray97);
    }

    @Test
    public void test3901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3901");
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray48 = new double[][] { doubleArray26, doubleArray33, doubleArray40, doubleArray47 };
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray50);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray52);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 100, doubleArray54);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray54);
        double[][] doubleArray57 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (-1), doubleArray54);
        double[][] doubleArray58 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray57);
        java.lang.Class<?> wildcardClass59 = doubleArray58.getClass();
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test3902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3902");
        double[] doubleArray3 = new double[] { 1L };
        double[] doubleArray5 = new double[] { 1L };
        double[][] doubleArray6 = new double[][] { doubleArray3, doubleArray5 };
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray7 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '4', 0, doubleArray6);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[0.0]");
        org.junit.Assert.assertNotNull(doubleArray6);
    }

    @Test
    public void test3903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3903");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray35);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray35, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList76);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 100, doubleList76);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleList77);
    }

    @Test
    public void test3904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3904");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray39);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 10, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) ' ', doubleArray41);
        java.lang.Class<?> wildcardClass44 = doubleArray43.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test3905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3905");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray42);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray42, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray42);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) '#', doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 1, doubleArray78);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) 'a', (int) (byte) 0, doubleArray78);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
    }

    @Test
    public void test3906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3906");
        double[] doubleArray18 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray24 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray30 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray36 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray42 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray48 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray49 = new double[][] { doubleArray18, doubleArray24, doubleArray30, doubleArray36, doubleArray42, doubleArray48 };
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray49);
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray85 = new double[][] { doubleArray63, doubleArray70, doubleArray77, doubleArray84 };
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray50, doubleArray86);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray50);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) ' ', doubleArray50);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray50);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 1, doubleArray92);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 100, (int) (byte) 0, doubleArray92);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[NaN, NaN, NaN, NaN, NaN]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
    }

    @Test
    public void test3907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3907");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray37);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray37, doubleArray76);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray76);
        double[][] doubleArray80 = null;
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) -1, doubleArray76, doubleArray80);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian((int) ' ', doubleList81);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleList78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList81);
    }

    @Test
    public void test3908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3908");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray39);
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray85 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray86 = new double[][] { doubleArray64, doubleArray71, doubleArray78, doubleArray85 };
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray86);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray88);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray91);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray91);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 100, doubleArray93);
        java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray41, doubleArray94);
        java.lang.Class<?> wildcardClass96 = doubleArray94.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleList95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test3909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3909");
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray49 = new double[][] { doubleArray27, doubleArray34, doubleArray41, doubleArray48 };
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray49);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray51);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray53);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray54);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray54);
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray83 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray90 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray91 = new double[][] { doubleArray69, doubleArray76, doubleArray83, doubleArray90 };
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray91);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray92);
        java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray54, doubleArray94);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (byte) -1, doubleArray94);
        double[][] doubleArray97 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 1, doubleArray96);
        double[][] doubleArray98 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 0, doubleArray96);
        java.lang.Class<?> wildcardClass99 = doubleArray96.getClass();
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleList95);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertNotNull(doubleArray98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test3910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3910");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList7);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((int) '4', doubleList10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertNotNull(doubleList10);
    }

    @Test
    public void test3911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3911");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray67 = new double[][] { doubleArray45, doubleArray52, doubleArray59, doubleArray66 };
        double[][] doubleArray68 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray67);
        java.util.ArrayList<java.lang.Double> doubleList69 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray36, doubleArray67);
        double[][] doubleArray70 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray67);
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 10, doubleArray67);
        java.lang.Class<?> wildcardClass72 = doubleArray71.getClass();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleList69);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test3912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3912");
        double[] doubleArray10 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray16 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray22 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray28 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray34 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray40 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray41 = new double[][] { doubleArray10, doubleArray16, doubleArray22, doubleArray28, doubleArray34, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray85 = new double[][] { doubleArray63, doubleArray70, doubleArray77, doubleArray84 };
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray86);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray86);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray86);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray91);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray41, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleList93);
        org.junit.Assert.assertNotNull(doubleArray94);
    }

    @Test
    public void test3913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3913");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) '4', doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, 0, doubleArray45);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 100, (int) (short) 100, doubleArray48);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
    }

    @Test
    public void test3914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3914");
        double[][] doubleArray6 = null;
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray44);
        java.util.ArrayList<java.lang.Double> doubleList48 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray6, doubleArray47);
        java.util.ArrayList<java.lang.Double> doubleList49 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList48);
        java.util.ArrayList<java.lang.Double> doubleList50 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList49);
        java.util.ArrayList<java.lang.Double> doubleList51 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList49);
        java.util.ArrayList<java.lang.Double> doubleList52 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList49);
        java.util.ArrayList<java.lang.Double> doubleList53 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList52);
        java.lang.Class<?> wildcardClass54 = doubleList52.getClass();
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleList48);
        org.junit.Assert.assertNotNull(doubleList49);
        org.junit.Assert.assertNotNull(doubleList50);
        org.junit.Assert.assertNotNull(doubleList51);
        org.junit.Assert.assertNotNull(doubleList52);
        org.junit.Assert.assertNotNull(doubleList53);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test3915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3915");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray35);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray35, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList76);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.gaussian((int) ' ', doubleList76);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleList77);
    }

    @Test
    public void test3916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3916");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (-1), doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, 10, doubleArray47);
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray87 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray88 = new double[][] { doubleArray66, doubleArray73, doubleArray80, doubleArray87 };
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray88);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray90);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) -1, doubleArray92);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 1, doubleArray49, doubleArray93);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) ' ', (int) (byte) -1, doubleArray93);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleList94);
    }

    @Test
    public void test3917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3917");
        double[] doubleArray7 = new double[] {};
        double[][] doubleArray8 = new double[][] { doubleArray7 };
        double[][] doubleArray9 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray8);
        double[][] doubleArray10 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray9);
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray48 = new double[][] { doubleArray26, doubleArray33, doubleArray40, doubleArray47 };
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray48);
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray85 = new double[][] { doubleArray63, doubleArray70, doubleArray77, doubleArray84 };
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray48, doubleArray87);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray48);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray48);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray9, doubleArray91);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (short) 1, doubleArray9);
        java.lang.Class<?> wildcardClass94 = doubleArray9.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray7), "[]");
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleList92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test3918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3918");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray40);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) 'a', doubleArray42);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) 'a', (int) (byte) 10, doubleArray45);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
    }

    @Test
    public void test3919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3919");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray47);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray49);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 100, doubleArray51);
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray87 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray88 = new double[][] { doubleArray66, doubleArray73, doubleArray80, doubleArray87 };
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray89);
        double[][] doubleArray92 = null;
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.valueOfGaussian((-1), doubleArray89, doubleArray92);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 1, doubleArray51, doubleArray89);
        java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList94);
        java.util.ArrayList<java.lang.Double> doubleList96 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList94);
        java.lang.Class<?> wildcardClass97 = doubleList94.getClass();
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleList93);
        org.junit.Assert.assertNotNull(doubleList94);
        org.junit.Assert.assertNotNull(doubleList95);
        org.junit.Assert.assertNotNull(doubleList96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test3920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3920");
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray49 = new double[][] { doubleArray27, doubleArray34, doubleArray41, doubleArray48 };
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray49);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray51);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray53);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray54);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray54);
        double[][] doubleArray57 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray54);
        double[][] doubleArray58 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 10, doubleArray54);
        double[][] doubleArray61 = new double[][] {};
        double[][] doubleArray62 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray61);
        java.util.ArrayList<java.lang.Double> doubleList63 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray54, doubleArray61);
        java.util.ArrayList<java.lang.Double> doubleList64 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList63);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList65 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList64);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertNotNull(doubleList63);
        org.junit.Assert.assertNotNull(doubleList64);
    }

    @Test
    public void test3921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3921");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray39);
        double[][] doubleArray41 = null;
        java.util.ArrayList<java.lang.Double> doubleList42 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray41);
        java.util.ArrayList<java.lang.Double> doubleList43 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList42);
        java.util.ArrayList<java.lang.Double> doubleList44 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList42);
        java.util.ArrayList<java.lang.Double> doubleList45 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList44);
        java.util.ArrayList<java.lang.Double> doubleList46 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList45);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList47 = com.thealgorithms.maths.Gaussian.gaussian(10, doubleList45);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleList42);
        org.junit.Assert.assertNotNull(doubleList43);
        org.junit.Assert.assertNotNull(doubleList44);
        org.junit.Assert.assertNotNull(doubleList45);
        org.junit.Assert.assertNotNull(doubleList46);
    }

    @Test
    public void test3922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3922");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray43);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray43, doubleArray82);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray82);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '4', doubleArray82);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 0, doubleArray82);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray82);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) 'a', (int) (short) 10, doubleArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
    }

    @Test
    public void test3923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3923");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray42, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray42);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (short) 100, doubleArray42);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 0, doubleArray78);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', (int) (short) 1, doubleArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
    }

    @Test
    public void test3924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3924");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray41, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) ' ', doubleArray41);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
    }

    @Test
    public void test3925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3925");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray35);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray35, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList76);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList77);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleList77);
    }

    @Test
    public void test3926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3926");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray41);
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray87 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray88 = new double[][] { doubleArray66, doubleArray73, doubleArray80, doubleArray87 };
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray88);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray90);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray93);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray93);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 100, doubleArray95);
        java.util.ArrayList<java.lang.Double> doubleList97 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray43, doubleArray96);
        double[][] doubleArray98 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, 0, doubleArray96);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertNotNull(doubleList97);
        org.junit.Assert.assertNotNull(doubleArray98);
    }

    @Test
    public void test3927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3927");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray38);
        double[] doubleArray51 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray73 = new double[][] { doubleArray51, doubleArray58, doubleArray65, doubleArray72 };
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray73);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray40, doubleArray73);
        java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList76);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList76);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList76);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList79);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian(10, doubleList79);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleList77);
        org.junit.Assert.assertNotNull(doubleList78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleList80);
    }

    @Test
    public void test3928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3928");
        double[] doubleArray20 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray26 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray32 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray38 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray44 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray50 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray51 = new double[][] { doubleArray20, doubleArray26, doubleArray32, doubleArray38, doubleArray44, doubleArray50 };
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray51);
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray86 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray87 = new double[][] { doubleArray65, doubleArray72, doubleArray79, doubleArray86 };
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray88);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray52, doubleArray88);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray52);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) -1, doubleArray52);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 10, doubleArray52);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 1, doubleArray52);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 0, doubleArray52);
        double[][] doubleArray97 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) '4', doubleArray52);
        java.lang.Class<?> wildcardClass98 = doubleArray52.getClass();
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test3929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3929");
        java.lang.Double[] doubleArray12 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList13 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList13, doubleArray12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList18);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList18);
        java.util.ArrayList<java.lang.Double> doubleList21 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList20);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList22 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList21);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(doubleList21);
    }

    @Test
    public void test3930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3930");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray49);
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray85 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray86 = new double[][] { doubleArray64, doubleArray71, doubleArray78, doubleArray85 };
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray49, doubleArray89);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList90);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleList90);
    }

    @Test
    public void test3931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3931");
        java.lang.Double[] doubleArray10 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList11 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList11, doubleArray10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList16);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList16);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) ' ', doubleList18);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
    }

    @Test
    public void test3932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3932");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray36);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 100, doubleArray36);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 10, 100, doubleArray36);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
    }

    @Test
    public void test3933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3933");
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray48 = new double[][] { doubleArray26, doubleArray33, doubleArray40, doubleArray47 };
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray50);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray53);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray53);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray53);
        double[][] doubleArray57 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 10, doubleArray53);
        double[][] doubleArray60 = new double[][] {};
        double[][] doubleArray61 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray60);
        java.util.ArrayList<java.lang.Double> doubleList62 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray53, doubleArray60);
        java.util.ArrayList<java.lang.Double> doubleList63 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList62);
        java.lang.Class<?> wildcardClass64 = doubleList62.getClass();
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertNotNull(doubleList62);
        org.junit.Assert.assertNotNull(doubleList63);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test3934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3934");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray45);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray45, doubleArray84);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray45);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray87);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 0, doubleArray87);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 1, doubleArray87);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '4', (int) (short) 0, doubleArray87);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
    }

    @Test
    public void test3935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3935");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 100, doubleArray40);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) ' ', doubleArray40);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray40);
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray86 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray87 = new double[][] { doubleArray65, doubleArray72, doubleArray79, doubleArray86 };
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray88);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) 'a', doubleArray90);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) -1, doubleArray90);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (-1), doubleArray90);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 100, doubleArray44, doubleArray94);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
    }

    @Test
    public void test3936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3936");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList11);
        java.lang.Class<?> wildcardClass13 = doubleList11.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test3937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3937");
        double[][] doubleArray7 = null;
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray45);
        java.util.ArrayList<java.lang.Double> doubleList49 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray7, doubleArray48);
        java.util.ArrayList<java.lang.Double> doubleList50 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList49);
        java.util.ArrayList<java.lang.Double> doubleList51 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList50);
        java.util.ArrayList<java.lang.Double> doubleList52 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList50);
        java.util.ArrayList<java.lang.Double> doubleList53 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList50);
        java.util.ArrayList<java.lang.Double> doubleList54 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList50);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList55 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 10, doubleList50);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleList49);
        org.junit.Assert.assertNotNull(doubleList50);
        org.junit.Assert.assertNotNull(doubleList51);
        org.junit.Assert.assertNotNull(doubleList52);
        org.junit.Assert.assertNotNull(doubleList53);
        org.junit.Assert.assertNotNull(doubleList54);
    }

    @Test
    public void test3938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3938");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray35);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray37);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 0, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) '#', doubleArray79);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 1, doubleArray79);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian(10, doubleArray38, doubleArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 6 out of bounds for length 6");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
    }

    @Test
    public void test3939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3939");
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray49 = new double[][] { doubleArray27, doubleArray34, doubleArray41, doubleArray48 };
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray50);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray50, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray50);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 0, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (-1), doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 0, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 0, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray89);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
    }

    @Test
    public void test3940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3940");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray38);
        double[][] doubleArray40 = null;
        java.util.ArrayList<java.lang.Double> doubleList41 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray39, doubleArray40);
        java.util.ArrayList<java.lang.Double> doubleList42 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList41);
        java.util.ArrayList<java.lang.Double> doubleList43 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList41);
        java.util.ArrayList<java.lang.Double> doubleList44 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList43);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList45 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) -1, doubleList43);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleList41);
        org.junit.Assert.assertNotNull(doubleList42);
        org.junit.Assert.assertNotNull(doubleList43);
        org.junit.Assert.assertNotNull(doubleList44);
    }

    @Test
    public void test3941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3941");
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray47 = new double[][] { doubleArray25, doubleArray32, doubleArray39, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray47);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray49);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray52);
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray88 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray89 = new double[][] { doubleArray67, doubleArray74, doubleArray81, doubleArray88 };
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray90);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray52, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 0, doubleArray92);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 0, doubleArray94);
        java.lang.Class<?> wildcardClass96 = doubleArray94.getClass();
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleList93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test3942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3942");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray35);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray35, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList76);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList76);
        java.lang.Class<?> wildcardClass79 = doubleList76.getClass();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleList77);
        org.junit.Assert.assertNotNull(doubleList78);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test3943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3943");
        double[] doubleArray16 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray22 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray28 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray34 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray40 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray46 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray47 = new double[][] { doubleArray16, doubleArray22, doubleArray28, doubleArray34, doubleArray40, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray47);
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray83 = new double[][] { doubleArray61, doubleArray68, doubleArray75, doubleArray82 };
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray48, doubleArray84);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray48);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) ' ', doubleArray48);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (byte) 10, doubleArray48);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray48);
        java.lang.Class<?> wildcardClass92 = doubleArray48.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test3944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3944");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray39);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray41, doubleArray74);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray41);
        double[][] doubleArray79 = null;
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) -1, doubleArray78, doubleArray79);
        double[][] doubleArray81 = null;
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray79, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList82);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 100, doubleList82);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleList77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
    }

    @Test
    public void test3945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3945");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.lang.Class<?> wildcardClass14 = doubleList13.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test3946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3946");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 100, doubleArray44);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 0, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 1, doubleArray45, doubleArray82);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian(100, doubleList84);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList84);
    }

    @Test
    public void test3947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3947");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray45);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray45, doubleArray84);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray84);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '4', doubleArray84);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray84);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 100, doubleArray84);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) '#', doubleArray84);
        double[][] doubleArray92 = null;
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray91, doubleArray92);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 100, doubleList93);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleList93);
    }

    @Test
    public void test3948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3948");
        java.lang.Double[] doubleArray11 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList12 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList12, doubleArray11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList19);
        java.lang.Class<?> wildcardClass21 = doubleList20.getClass();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test3949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3949");
        double[] doubleArray6 = new double[] {};
        double[][] doubleArray7 = new double[][] { doubleArray6 };
        double[][] doubleArray8 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray7);
        double[][] doubleArray9 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) '4', doubleArray8);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray10 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', 10, doubleArray8);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray6), "[]");
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertNotNull(doubleArray9);
    }

    @Test
    public void test3950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3950");
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray46 = new double[][] { doubleArray24, doubleArray31, doubleArray38, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray50);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 100, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray52);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 10, (int) '4', doubleArray52);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
    }

    @Test
    public void test3951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3951");
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray46 = new double[][] { doubleArray24, doubleArray31, doubleArray38, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) 'a', doubleArray48);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) '4', doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 1, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) 'a', doubleArray53);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '4', (int) (short) 100, doubleArray54);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
    }

    @Test
    public void test3952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3952");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 0, doubleArray44);
        double[][] doubleArray46 = null;
        java.util.ArrayList<java.lang.Double> doubleList47 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray45, doubleArray46);
        java.util.ArrayList<java.lang.Double> doubleList48 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList47);
        java.util.ArrayList<java.lang.Double> doubleList49 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList48);
        java.util.ArrayList<java.lang.Double> doubleList50 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList49);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList51 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) -1, doubleList50);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleList47);
        org.junit.Assert.assertNotNull(doubleList48);
        org.junit.Assert.assertNotNull(doubleList49);
        org.junit.Assert.assertNotNull(doubleList50);
    }

    @Test
    public void test3953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3953");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray41);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray81);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray43, doubleArray81);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 0, doubleArray81);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (short) 10, doubleArray87);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 10, 1, doubleArray88);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
    }

    @Test
    public void test3954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3954");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray43);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray43, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList83);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList83);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList85);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList86);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList86);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList86);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleList88);
    }

    @Test
    public void test3955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3955");
        java.lang.Double[] doubleArray14 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList15 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList15, doubleArray14);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList21 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList22 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList23 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList22);
        java.util.ArrayList<java.lang.Double> doubleList24 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList23);
        java.util.ArrayList<java.lang.Double> doubleList25 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList23);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList26 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList23);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(doubleList21);
        org.junit.Assert.assertNotNull(doubleList22);
        org.junit.Assert.assertNotNull(doubleList23);
        org.junit.Assert.assertNotNull(doubleList24);
        org.junit.Assert.assertNotNull(doubleList25);
    }

    @Test
    public void test3956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3956");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) 'a', doubleArray73);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 100, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray76);
        java.lang.Class<?> wildcardClass78 = doubleArray77.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test3957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3957");
        double[][] doubleArray1 = null;
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray49 = new double[][] { doubleArray27, doubleArray34, doubleArray41, doubleArray48 };
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray49);
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray85 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray86 = new double[][] { doubleArray64, doubleArray71, doubleArray78, doubleArray85 };
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray88);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray49, doubleArray88);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray88);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '4', doubleArray88);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray88);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (short) 0, doubleArray93);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (byte) -1, doubleArray94);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) 0, doubleArray94);
        double[][] doubleArray97 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 100, doubleArray96);
        java.util.ArrayList<java.lang.Double> doubleList98 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray1, doubleArray96);
        java.lang.Class<?> wildcardClass99 = doubleArray96.getClass();
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertNotNull(doubleList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test3958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3958");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 100, doubleList14);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
    }

    @Test
    public void test3959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3959");
        double[] doubleArray2 = new double[] {};
        double[] doubleArray3 = new double[] {};
        double[] doubleArray4 = new double[] {};
        double[][] doubleArray5 = new double[][] { doubleArray2, doubleArray3, doubleArray4 };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (-1), doubleArray48);
        java.util.ArrayList<java.lang.Double> doubleList50 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray5, doubleArray48);
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray88 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray89 = new double[][] { doubleArray67, doubleArray74, doubleArray81, doubleArray88 };
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray91);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 100, doubleArray91);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray91);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) ' ', doubleArray5, doubleArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray2), "[]");
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleList50);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
    }

    @Test
    public void test3960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3960");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList12);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) '4', doubleList13);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
    }

    @Test
    public void test3961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3961");
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray46 = new double[][] { doubleArray24, doubleArray31, doubleArray38, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray46);
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray83 = new double[][] { doubleArray61, doubleArray68, doubleArray75, doubleArray82 };
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray85);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray46, doubleArray85);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray85);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) 'a', doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, 10, doubleArray88);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) 'a', doubleArray88);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 100, doubleArray91);
        double[][] doubleArray93 = null;
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray92, doubleArray93);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (short) 10, doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleList94);
        org.junit.Assert.assertNull(doubleArray95);
    }

    @Test
    public void test3962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3962");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 100, doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray46);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (byte) 100, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 10, doubleArray49);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(10, (-1), doubleArray49);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
    }

    @Test
    public void test3963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3963");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) '4', doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 10, doubleArray45);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) ' ', (int) ' ', doubleArray45);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
    }

    @Test
    public void test3964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3964");
        java.lang.Double[] doubleArray10 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList11 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList11, doubleArray10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList16);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) 'a', doubleList17);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
    }

    @Test
    public void test3965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3965");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray45);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray45);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 100, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (byte) 100, doubleArray51);
        java.lang.Class<?> wildcardClass53 = doubleArray51.getClass();
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test3966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3966");
        double[] doubleArray14 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray20 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray26 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray32 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray38 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray44 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray45 = new double[][] { doubleArray14, doubleArray20, doubleArray26, doubleArray32, doubleArray38, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray45);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray46, doubleArray82);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray82);
        double[][] doubleArray87 = null;
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray86, doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList88);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList89);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 100, doubleList90);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleList90);
    }

    @Test
    public void test3967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3967");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray41, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList81);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList81);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList81);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList84);
        java.lang.Class<?> wildcardClass86 = doubleList84.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test3968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3968");
        double[][] doubleArray1 = null;
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray38);
        double[][] doubleArray41 = null;
        java.util.ArrayList<java.lang.Double> doubleList42 = com.thealgorithms.maths.Gaussian.valueOfGaussian((-1), doubleArray38, doubleArray41);
        java.util.ArrayList<java.lang.Double> doubleList43 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray1, doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleList42);
        org.junit.Assert.assertNotNull(doubleList43);
    }

    @Test
    public void test3969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3969");
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray48 = new double[][] { doubleArray26, doubleArray33, doubleArray40, doubleArray47 };
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray50);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray53);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray53);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray53);
        double[][] doubleArray57 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 10, doubleArray53);
        double[][] doubleArray58 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray53);
        java.lang.Class<?> wildcardClass59 = doubleArray53.getClass();
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test3970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3970");
        java.util.ArrayList<java.lang.Double> doubleList3 = null;
        java.util.ArrayList<java.lang.Double> doubleList4 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList3);
        java.util.ArrayList<java.lang.Double> doubleList5 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList3);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList6 = com.thealgorithms.maths.Gaussian.gaussian(10, doubleList5);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleList4);
        org.junit.Assert.assertNotNull(doubleList5);
    }

    @Test
    public void test3971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3971");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray44);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray44, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) 'a', doubleArray77);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray77);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 10, doubleArray77);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) '4', doubleArray81);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 100, 1, doubleArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleList78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
    }

    @Test
    public void test3972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3972");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) '#', doubleList14);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
    }

    @Test
    public void test3973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3973");
        java.lang.Double[] doubleArray10 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList11 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList11, doubleArray10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList17);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList17);
        java.lang.Class<?> wildcardClass20 = doubleList17.getClass();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test3974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3974");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray39);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 1, doubleArray41);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray83);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray85);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian((-1), doubleArray42, doubleArray85);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 100, doubleList87);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
    }

    @Test
    public void test3975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3975");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 100, doubleArray37);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 100, doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
    }

    @Test
    public void test3976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3976");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray41, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList81);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList81);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList83);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian((int) '4', doubleList84);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleList84);
    }

    @Test
    public void test3977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3977");
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray47 = new double[][] { doubleArray25, doubleArray32, doubleArray39, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray48);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray48);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray53);
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray88 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray89 = new double[][] { doubleArray67, doubleArray74, doubleArray81, doubleArray88 };
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray90);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray53, doubleArray90);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 100, doubleArray53);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 1, doubleArray94);
        java.lang.Class<?> wildcardClass96 = doubleArray95.getClass();
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleList93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test3978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3978");
        double[] doubleArray11 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray33 = new double[][] { doubleArray11, doubleArray18, doubleArray25, doubleArray32 };
        double[][] doubleArray34 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray33);
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray34);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray82);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray84);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 1, doubleArray90);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray34, doubleArray91);
        java.lang.Class<?> wildcardClass93 = doubleArray91.getClass();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleList92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test3979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3979");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList14);
        java.lang.Class<?> wildcardClass16 = doubleList14.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test3980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3980");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray43);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray43);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, 0, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 100, doubleArray47);
        java.lang.Class<?> wildcardClass50 = doubleArray47.getClass();
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test3981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3981");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray39);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray41, doubleArray78);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 10, doubleArray41);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 10, (int) '4', doubleArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleArray82);
    }

    @Test
    public void test3982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3982");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 1, doubleArray40);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 1, doubleArray40);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 100, (int) (short) 10, doubleArray40);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
    }

    @Test
    public void test3983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3983");
        double[][] doubleArray2 = null;
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray70 = new double[][] { doubleArray48, doubleArray55, doubleArray62, doubleArray69 };
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray70);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray39, doubleArray70);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 1, doubleArray39);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 10, doubleArray73);
        java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) -1, doubleArray2, doubleArray73);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.gaussian((int) '#', doubleList75);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleList72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleList75);
    }

    @Test
    public void test3984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3984");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray69 = new double[][] { doubleArray47, doubleArray54, doubleArray61, doubleArray68 };
        double[][] doubleArray70 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray69);
        java.util.ArrayList<java.lang.Double> doubleList71 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray38, doubleArray69);
        double[][] doubleArray72 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray69);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray69);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (-1), doubleArray69);
        java.lang.Class<?> wildcardClass75 = doubleArray74.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleList71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test3985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3985");
        double[] doubleArray16 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray22 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray28 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray34 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray40 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray46 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray47 = new double[][] { doubleArray16, doubleArray22, doubleArray28, doubleArray34, doubleArray40, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray47);
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray83 = new double[][] { doubleArray61, doubleArray68, doubleArray75, doubleArray82 };
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray48, doubleArray84);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray48);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) -1, doubleArray48);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 10, doubleArray48);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '4', (int) (byte) 0, doubleArray90);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[NaN, NaN, NaN, NaN, NaN]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
    }

    @Test
    public void test3986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3986");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray46);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray46, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) 'a', doubleArray79);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray79);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 10, doubleArray79);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (short) 1, doubleArray79);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, 1, doubleArray84);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', (int) (short) 1, doubleArray84);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
    }

    @Test
    public void test3987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3987");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray42);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray42, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList82);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList82);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList82);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList82);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList82);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleList86);
    }

    @Test
    public void test3988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3988");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray40);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray77);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray40, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList81);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList81);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
    }

    @Test
    public void test3989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3989");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray41);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray41);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) 'a', doubleArray45);
        java.lang.Class<?> wildcardClass47 = doubleArray45.getClass();
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test3990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3990");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray45);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray45, doubleArray84);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray84);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '4', doubleArray84);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) '4', doubleArray84);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) '4', doubleArray84);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray84);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination(100, (int) (byte) 1, doubleArray84);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
    }

    @Test
    public void test3991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3991");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray44);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray44, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray44);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) '#', doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '4', doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 10, doubleArray80);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 10, (int) (byte) 10, doubleArray80);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleList78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
    }

    @Test
    public void test3992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3992");
        double[][] doubleArray2 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray3 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '4', (int) (byte) 0, doubleArray2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test3993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3993");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray45);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray45, doubleArray84);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray84);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '4', doubleArray84);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray84);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (short) 0, doubleArray84);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 0, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) ' ', doubleArray90);
        java.lang.Class<?> wildcardClass93 = doubleArray92.getClass();
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test3994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3994");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) '4', doubleList14);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
    }

    @Test
    public void test3995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3995");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray45);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray45);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray49);
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray85 = new double[][] { doubleArray63, doubleArray70, doubleArray77, doubleArray84 };
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 100, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 1, doubleArray50, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList89);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList90);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) -1, doubleList91);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleList91);
    }

    @Test
    public void test3996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3996");
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray46 = new double[][] { doubleArray24, doubleArray31, doubleArray38, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray51);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 100, doubleArray53);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', (int) (short) 100, doubleArray53);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
    }

    @Test
    public void test3997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3997");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 1, doubleArray40);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 1, doubleArray40);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 100, doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
    }

    @Test
    public void test3998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3998");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray43);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray83);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray83);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray45, doubleArray83);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 0, doubleArray83);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 0, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 1, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 0, doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
    }

    @Test
    public void test3999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test3999");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray39);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 100, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray42);
        java.lang.Class<?> wildcardClass44 = doubleArray42.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test4000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest7.test4000");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray42, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 1, doubleArray42);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 1, doubleArray42);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) 'a', doubleArray78);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(10, (int) ' ', doubleArray78);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
    }
}

