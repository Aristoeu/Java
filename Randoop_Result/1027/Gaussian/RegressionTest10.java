package Gaussian;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest10 {

    public static boolean debug = false;

    @Test
    public void test5001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5001");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray44);
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray85 = new double[][] { doubleArray63, doubleArray70, doubleArray77, doubleArray84 };
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray85);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray87);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) -1, doubleArray89);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray44, doubleArray89);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList91);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList91);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList93);
        java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList93);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList96 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList93);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleList92);
        org.junit.Assert.assertNotNull(doubleList93);
        org.junit.Assert.assertNotNull(doubleList94);
        org.junit.Assert.assertNotNull(doubleList95);
    }

    @Test
    public void test5002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5002");
        double[] doubleArray11 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray17 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray23 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray29 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray35 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray41 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray42 = new double[][] { doubleArray11, doubleArray17, doubleArray23, doubleArray29, doubleArray35, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 1, doubleArray43, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 10, doubleArray81);
        double[][] doubleArray84 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 10, doubleArray83, doubleArray84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray11), "[0.01, 1.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleArray83);
    }

    @Test
    public void test5003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5003");
        double[] doubleArray12 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray18 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray24 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray30 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray36 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray42 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray43 = new double[][] { doubleArray12, doubleArray18, doubleArray24, doubleArray30, doubleArray36, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray44, doubleArray80);
        double[] doubleArray86 = new double[] {};
        double[][] doubleArray87 = new double[][] { doubleArray86 };
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray80, doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList89);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList90);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.gaussian((int) ' ', doubleList90);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleList91);
    }

    @Test
    public void test5004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5004");
        double[][] doubleArray9 = null;
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray51 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray52 = new double[][] { doubleArray30, doubleArray37, doubleArray44, doubleArray51 };
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray52);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray54);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray54);
        double[][] doubleArray57 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray56);
        double[][] doubleArray58 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray57);
        double[][] doubleArray59 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray58);
        java.util.ArrayList<java.lang.Double> doubleList60 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray9, doubleArray59);
        double[][] doubleArray61 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray59);
        double[][] doubleArray62 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 10, doubleArray59);
        double[][] doubleArray63 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (short) -1, doubleArray59);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray64 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 100, 0, doubleArray63);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertNotNull(doubleList60);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertNotNull(doubleArray63);
    }

    @Test
    public void test5005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5005");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray41);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray43, doubleArray76);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray43);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 0, doubleArray43);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) '4', doubleArray43);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
    }

    @Test
    public void test5006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5006");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray38);
        double[] doubleArray51 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray73 = new double[][] { doubleArray51, doubleArray58, doubleArray65, doubleArray72 };
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray73);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray40, doubleArray73);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray40);
        double[][] doubleArray78 = null;
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) -1, doubleArray77, doubleArray78);
        double[][] doubleArray80 = null;
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray78, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList81);
        java.lang.Class<?> wildcardClass83 = doubleList81.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test5007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5007");
        java.lang.Double[] doubleArray10 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList11 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList11, doubleArray10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList11);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 100, doubleList17);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
    }

    @Test
    public void test5008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5008");
        double[] doubleArray19 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray25 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray31 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray37 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray43 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray49 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray50 = new double[][] { doubleArray19, doubleArray25, doubleArray31, doubleArray37, doubleArray43, doubleArray49 };
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray50);
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray85 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray86 = new double[][] { doubleArray64, doubleArray71, doubleArray78, doubleArray85 };
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray51, doubleArray87);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray87);
        double[][] doubleArray92 = null;
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray91, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 10, doubleArray91);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) -1, doubleArray91);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) 10, doubleArray91);
        double[][] doubleArray97 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 10, doubleArray91);
        java.lang.Class<?> wildcardClass98 = doubleArray97.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleList93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test5009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5009");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList12);
        java.lang.Class<?> wildcardClass14 = doubleList12.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test5010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5010");
        java.lang.Double[] doubleArray11 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList12 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList12, doubleArray11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList17);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList18);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList18);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList21 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList20);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
    }

    @Test
    public void test5011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5011");
        double[][] doubleArray4 = null;
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray42);
        java.util.ArrayList<java.lang.Double> doubleList46 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray4, doubleArray45);
        java.util.ArrayList<java.lang.Double> doubleList47 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList46);
        java.util.ArrayList<java.lang.Double> doubleList48 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList46);
        java.util.ArrayList<java.lang.Double> doubleList49 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList46);
        java.lang.Class<?> wildcardClass50 = doubleList49.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleList46);
        org.junit.Assert.assertNotNull(doubleList47);
        org.junit.Assert.assertNotNull(doubleList48);
        org.junit.Assert.assertNotNull(doubleList49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test5012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5012");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray45);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray45, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 100, doubleArray45);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) -1, doubleArray45);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 100, doubleArray81);
        double[][] doubleArray86 = new double[][] {};
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray86);
        double[][] doubleArray88 = null;
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray86, doubleArray88);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.valueOfGaussian((-1), doubleArray81, doubleArray86);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 100, doubleArray86);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 0, doubleArray86);
        java.lang.Class<?> wildcardClass93 = doubleArray92.getClass();
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test5013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5013");
        double[] doubleArray10 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray16 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray22 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray28 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray34 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray40 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray41 = new double[][] { doubleArray10, doubleArray16, doubleArray22, doubleArray28, doubleArray34, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray85 = new double[][] { doubleArray63, doubleArray70, doubleArray77, doubleArray84 };
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray86);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray86);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray86);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray91);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray41, doubleArray92);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList93);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList94);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleList93);
        org.junit.Assert.assertNotNull(doubleList94);
    }

    @Test
    public void test5014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5014");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[] doubleArray49 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray71 = new double[][] { doubleArray49, doubleArray56, doubleArray63, doubleArray70 };
        double[][] doubleArray72 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray71);
        java.util.ArrayList<java.lang.Double> doubleList73 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray71);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray71);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray71);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 1, doubleArray75);
        java.lang.Class<?> wildcardClass78 = doubleArray75.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleList73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test5015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5015");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray43);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray43);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray83);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray47, doubleArray85);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList86);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList87);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 100, doubleList87);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleList88);
    }

    @Test
    public void test5016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5016");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray39);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 10, doubleArray41);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 100, 100, doubleArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
    }

    @Test
    public void test5017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5017");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray45);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray45, doubleArray84);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray84);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '4', doubleArray84);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray84);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 100, doubleArray84);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) '#', doubleArray84);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '4', (-1), doubleArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
    }

    @Test
    public void test5018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5018");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray45);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray45);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray49);
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray85 = new double[][] { doubleArray63, doubleArray70, doubleArray77, doubleArray84 };
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 100, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 1, doubleArray50, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList89);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList90);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList90);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleList91);
    }

    @Test
    public void test5019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5019");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) 'a', doubleArray44);
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray83 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray84 = new double[][] { doubleArray62, doubleArray69, doubleArray76, doubleArray83 };
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray86);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 100, doubleArray88);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray45, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray45);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 100, 100, doubleArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, -9999.0, 0.0, 9999.0, -969903.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleArray91);
    }

    @Test
    public void test5020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5020");
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray46 = new double[][] { doubleArray24, doubleArray31, doubleArray38, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray46);
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray85 = new double[][] { doubleArray63, doubleArray70, doubleArray77, doubleArray84 };
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray86);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray48, doubleArray86);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 0, doubleArray86);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray91);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (short) 10, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 1, doubleArray93);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray94);
        double[][] doubleArray96 = null;
        java.util.ArrayList<java.lang.Double> doubleList97 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) -1, doubleArray95, doubleArray96);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray98 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 100, (int) ' ', doubleArray95);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleList97);
    }

    @Test
    public void test5021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5021");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray35);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray35, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList76);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList76);
        java.lang.Class<?> wildcardClass79 = doubleList78.getClass();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleList77);
        org.junit.Assert.assertNotNull(doubleList78);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test5022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5022");
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray46 = new double[][] { doubleArray24, doubleArray31, doubleArray38, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray51);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 10, doubleArray51);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) '#', doubleArray51);
        java.lang.Class<?> wildcardClass56 = doubleArray55.getClass();
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test5023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5023");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray42);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (-1), doubleArray45);
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray83 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray84 = new double[][] { doubleArray62, doubleArray69, doubleArray76, doubleArray83 };
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 0, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 1, doubleArray45, doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList89);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList89);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 100, doubleList91);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleList91);
    }

    @Test
    public void test5024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5024");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray44);
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray85 = new double[][] { doubleArray63, doubleArray70, doubleArray77, doubleArray84 };
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray85);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray87);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) -1, doubleArray89);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray44, doubleArray89);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList91);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList92);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList92);
        java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList94);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList96 = com.thealgorithms.maths.Gaussian.gaussian((int) 'a', doubleList94);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleList92);
        org.junit.Assert.assertNotNull(doubleList93);
        org.junit.Assert.assertNotNull(doubleList94);
        org.junit.Assert.assertNotNull(doubleList95);
    }

    @Test
    public void test5025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5025");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray37);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray39, doubleArray72);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray39);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 100, doubleArray39);
        java.lang.Class<?> wildcardClass78 = doubleArray39.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleList75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test5026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5026");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 100, doubleArray36);
        double[] doubleArray42 = new double[] { (byte) 1 };
        double[] doubleArray44 = new double[] { (byte) 1 };
        double[] doubleArray46 = new double[] { (byte) 1 };
        double[] doubleArray48 = new double[] { (byte) 1 };
        double[][] doubleArray49 = new double[][] { doubleArray42, doubleArray44, doubleArray46, doubleArray48 };
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray49);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList51 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 10, doubleArray36, doubleArray50);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[1.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[1.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
    }

    @Test
    public void test5027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5027");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray45);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray45, doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList85);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList85);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList85);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList85);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList85);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList85);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList91);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.gaussian(10, doubleList92);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleList92);
    }

    @Test
    public void test5028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5028");
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray49 = new double[][] { doubleArray27, doubleArray34, doubleArray41, doubleArray48 };
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray51);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (-1), doubleArray53);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) -1, doubleArray54);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray54);
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray83 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray90 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray91 = new double[][] { doubleArray69, doubleArray76, doubleArray83, doubleArray90 };
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray91);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray92);
        java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray56, doubleArray92);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 10, doubleArray56);
        double[][] doubleArray97 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (byte) 100, doubleArray56);
        double[][] doubleArray98 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 1, doubleArray97);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleList95);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertNotNull(doubleArray98);
    }

    @Test
    public void test5029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5029");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList14);
        java.lang.Class<?> wildcardClass16 = doubleList14.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test5030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5030");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 0, doubleArray42);
        double[][] doubleArray44 = null;
        java.util.ArrayList<java.lang.Double> doubleList45 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray43, doubleArray44);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 100, (int) (short) 0, doubleArray44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleList45);
    }

    @Test
    public void test5031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5031");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray43);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray43, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList83);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList83);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList83);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList83);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList83);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 100, doubleList88);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleList88);
    }

    @Test
    public void test5032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5032");
        double[] doubleArray17 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray23 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray29 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray35 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray41 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray47 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray48 = new double[][] { doubleArray17, doubleArray23, doubleArray29, doubleArray35, doubleArray41, doubleArray47 };
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray48);
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray83 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray84 = new double[][] { doubleArray62, doubleArray69, doubleArray76, doubleArray83 };
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray85);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray49, doubleArray85);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray85);
        double[][] doubleArray90 = null;
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray89, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 10, doubleArray89);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 1, doubleArray89);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 0, doubleArray93);
        java.lang.Class<?> wildcardClass95 = doubleArray94.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test5033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5033");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray40);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray40);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) '#', doubleArray75);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '4', 0, doubleArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
    }

    @Test
    public void test5034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5034");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (-1), doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) -1, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 1, doubleArray48);
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray83 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray90 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray91 = new double[][] { doubleArray69, doubleArray76, doubleArray83, doubleArray90 };
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray91);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray93);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 100, doubleArray93);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (-1), doubleArray95);
        double[][] doubleArray97 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 1, doubleArray96);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList98 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) '4', doubleArray48, doubleArray96);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertNotNull(doubleArray97);
    }

    @Test
    public void test5035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5035");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) 'a', doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) ' ', doubleArray48);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray48);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 10, doubleArray52);
        double[][] doubleArray54 = null;
        java.util.ArrayList<java.lang.Double> doubleList55 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray53, doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleList55);
    }

    @Test
    public void test5036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5036");
        double[] doubleArray14 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray20 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray26 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray32 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray38 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray44 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray45 = new double[][] { doubleArray14, doubleArray20, doubleArray26, doubleArray32, doubleArray38, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray45);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray46, doubleArray82);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray82);
        double[][] doubleArray87 = null;
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray86, doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList88);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList89);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList89);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleList91);
    }

    @Test
    public void test5037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5037");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray43);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) '4', doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 100, doubleArray48);
        java.lang.Class<?> wildcardClass50 = doubleArray48.getClass();
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test5038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5038");
        java.util.ArrayList<java.lang.Double> doubleList4 = null;
        java.util.ArrayList<java.lang.Double> doubleList5 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList4);
        java.util.ArrayList<java.lang.Double> doubleList6 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList5);
        java.util.ArrayList<java.lang.Double> doubleList7 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList6);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList8 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList7);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleList5);
        org.junit.Assert.assertNotNull(doubleList6);
        org.junit.Assert.assertNotNull(doubleList7);
    }

    @Test
    public void test5039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5039");
        double[] doubleArray12 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray18 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray24 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray30 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray36 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray42 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray43 = new double[][] { doubleArray12, doubleArray18, doubleArray24, doubleArray30, doubleArray36, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray86 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray87 = new double[][] { doubleArray65, doubleArray72, doubleArray79, doubleArray86 };
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray88);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray88);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray88);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray93);
        java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray43, doubleArray94);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (-1), doubleArray43);
        double[][] doubleArray97 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 10, doubleArray43);
        java.lang.Class<?> wildcardClass98 = doubleArray43.getClass();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleList95);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test5040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5040");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) 'a', doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) ' ', doubleArray45);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 0, doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
    }

    @Test
    public void test5041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5041");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray45);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray45, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 1, doubleArray84);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 10, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (byte) 10, doubleArray87);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 10, (int) ' ', doubleArray87);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
    }

    @Test
    public void test5042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5042");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray36);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (short) 10, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) '#', doubleArray38);
        java.lang.Class<?> wildcardClass41 = doubleArray40.getClass();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test5043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5043");
        double[][] doubleArray6 = null;
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray44);
        java.util.ArrayList<java.lang.Double> doubleList48 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray6, doubleArray47);
        java.util.ArrayList<java.lang.Double> doubleList49 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList48);
        java.util.ArrayList<java.lang.Double> doubleList50 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList49);
        java.util.ArrayList<java.lang.Double> doubleList51 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList49);
        java.util.ArrayList<java.lang.Double> doubleList52 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList51);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList53 = com.thealgorithms.maths.Gaussian.gaussian(100, doubleList51);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleList48);
        org.junit.Assert.assertNotNull(doubleList49);
        org.junit.Assert.assertNotNull(doubleList50);
        org.junit.Assert.assertNotNull(doubleList51);
        org.junit.Assert.assertNotNull(doubleList52);
    }

    @Test
    public void test5044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5044");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray42, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) 'a', doubleArray75);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 100, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) '4', doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray79);
        java.lang.Class<?> wildcardClass81 = doubleArray79.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test5045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5045");
        double[][] doubleArray2 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray3 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 100, (int) (byte) 100, doubleArray2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test5046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5046");
        java.lang.Double[] doubleArray10 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList11 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList11, doubleArray10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.lang.Class<?> wildcardClass19 = doubleList11.getClass();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test5047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5047");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 0, doubleArray41);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) '4', doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 1, doubleArray44);
        java.lang.Class<?> wildcardClass47 = doubleArray44.getClass();
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test5048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5048");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray41);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray82);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray84);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) -1, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray41, doubleArray86);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) '4', doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleArray89);
    }

    @Test
    public void test5049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5049");
        double[] doubleArray12 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray18 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray24 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray30 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray36 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray42 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray43 = new double[][] { doubleArray12, doubleArray18, doubleArray24, doubleArray30, doubleArray36, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray86 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray87 = new double[][] { doubleArray65, doubleArray72, doubleArray79, doubleArray86 };
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray88);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray88);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray88);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray93);
        java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray43, doubleArray94);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (-1), doubleArray43);
        double[][] doubleArray97 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 10, doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleList95);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertNotNull(doubleArray97);
    }

    @Test
    public void test5050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5050");
        java.lang.Double[] doubleArray13 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList14 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList14, doubleArray13);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList21 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList22 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList23 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList14);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList24 = com.thealgorithms.maths.Gaussian.gaussian(10, doubleList23);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(doubleList21);
        org.junit.Assert.assertNotNull(doubleList22);
        org.junit.Assert.assertNotNull(doubleList23);
    }

    @Test
    public void test5051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5051");
        java.lang.Double[] doubleArray13 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList14 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList14, doubleArray13);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList21 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList22 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList21);
        java.util.ArrayList<java.lang.Double> doubleList23 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList21);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList24 = com.thealgorithms.maths.Gaussian.gaussian((int) '#', doubleList23);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(doubleList21);
        org.junit.Assert.assertNotNull(doubleList22);
        org.junit.Assert.assertNotNull(doubleList23);
    }

    @Test
    public void test5052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5052");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) 'a', doubleArray44);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 0, doubleArray44);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) -1, doubleArray44);
        java.lang.Class<?> wildcardClass50 = doubleArray44.getClass();
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test5053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5053");
        double[] doubleArray17 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray23 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray29 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray35 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray41 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray47 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray48 = new double[][] { doubleArray17, doubleArray23, doubleArray29, doubleArray35, doubleArray41, doubleArray47 };
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray48);
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray83 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray84 = new double[][] { doubleArray62, doubleArray69, doubleArray76, doubleArray83 };
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray85);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray49, doubleArray85);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray85);
        double[][] doubleArray90 = null;
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray89, doubleArray90);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList91);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList92);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList92);
        java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList94);
        java.util.ArrayList<java.lang.Double> doubleList96 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList94);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList97 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList94);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleList92);
        org.junit.Assert.assertNotNull(doubleList93);
        org.junit.Assert.assertNotNull(doubleList94);
        org.junit.Assert.assertNotNull(doubleList95);
        org.junit.Assert.assertNotNull(doubleList96);
    }

    @Test
    public void test5054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5054");
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray47 = new double[][] { doubleArray25, doubleArray32, doubleArray39, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray47);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray49);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray52);
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray88 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray89 = new double[][] { doubleArray67, doubleArray74, doubleArray81, doubleArray88 };
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray90);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray52, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 0, doubleArray92);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 100, doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleList93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
    }

    @Test
    public void test5055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5055");
        java.lang.Double[] doubleArray10 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList11 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList11, doubleArray10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList17);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList18);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
    }

    @Test
    public void test5056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5056");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray37);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray37);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray83);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (-1), doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) -1, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 1, doubleArray37, doubleArray86);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 10, doubleArray37);
        java.lang.Class<?> wildcardClass90 = doubleArray89.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test5057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5057");
        double[][] doubleArray4 = null;
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray48 = new double[][] { doubleArray26, doubleArray33, doubleArray40, doubleArray47 };
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray48);
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray85 = new double[][] { doubleArray63, doubleArray70, doubleArray77, doubleArray84 };
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray48, doubleArray87);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray87);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '4', doubleArray87);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray87);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (short) 0, doubleArray87);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 10, doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray4, doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList96 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList95);
        java.util.ArrayList<java.lang.Double> doubleList97 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList96);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList98 = com.thealgorithms.maths.Gaussian.gaussian((-1), doubleList97);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleList95);
        org.junit.Assert.assertNotNull(doubleList96);
        org.junit.Assert.assertNotNull(doubleList97);
    }

    @Test
    public void test5058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5058");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray39);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 100, doubleArray41);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) ' ', (int) (byte) 100, doubleArray41);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
    }

    @Test
    public void test5059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5059");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray69 = new double[][] { doubleArray47, doubleArray54, doubleArray61, doubleArray68 };
        double[][] doubleArray70 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray69);
        java.util.ArrayList<java.lang.Double> doubleList71 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray38, doubleArray69);
        double[][] doubleArray72 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray69);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray69);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) 'a', (int) (byte) 100, doubleArray69);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleList71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
    }

    @Test
    public void test5060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5060");
        java.lang.Double[] doubleArray11 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList12 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList12, doubleArray11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList18);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) -1, doubleList19);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
    }

    @Test
    public void test5061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5061");
        java.lang.Double[] doubleArray11 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList12 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList12, doubleArray11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList18);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList19);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
    }

    @Test
    public void test5062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5062");
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray47 = new double[][] { doubleArray25, doubleArray32, doubleArray39, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) '4', doubleArray50);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, 0, doubleArray50);
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray89 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray90 = new double[][] { doubleArray68, doubleArray75, doubleArray82, doubleArray89 };
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray91);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray91);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray91);
        java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray50, doubleArray91);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray91);
        double[][] doubleArray97 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (byte) 0, doubleArray91);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray98 = com.thealgorithms.maths.Gaussian.gaussianElimination(100, (int) '4', doubleArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleList95);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertNotNull(doubleArray97);
    }

    @Test
    public void test5063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5063");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 100, doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) ' ', doubleArray41);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray41);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 100, 0, doubleArray45);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
    }

    @Test
    public void test5064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5064");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray39);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray39);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray42);
        java.lang.Class<?> wildcardClass44 = doubleArray42.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test5065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5065");
        double[] doubleArray14 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray20 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray26 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray32 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray38 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray44 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray45 = new double[][] { doubleArray14, doubleArray20, doubleArray26, doubleArray32, doubleArray38, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray45);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray46, doubleArray82);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray82);
        double[][] doubleArray87 = null;
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray86, doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList88);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList89);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 100, doubleList89);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleList90);
    }

    @Test
    public void test5066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5066");
        double[] doubleArray10 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray16 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray22 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray28 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray34 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray40 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray41 = new double[][] { doubleArray10, doubleArray16, doubleArray22, doubleArray28, doubleArray34, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray42, doubleArray78);
        double[] doubleArray84 = new double[] {};
        double[][] doubleArray85 = new double[][] { doubleArray84 };
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray85);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray78, doubleArray85);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList87);
        java.lang.Class<?> wildcardClass89 = doubleList87.getClass();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test5067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5067");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray37);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray37, doubleArray76);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray76);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) '4', doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleList78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
    }

    @Test
    public void test5068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5068");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray42);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray42, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray42);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) '#', doubleArray42);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (-1), doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray79);
        java.lang.Class<?> wildcardClass81 = doubleArray79.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test5069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5069");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray43);
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray83 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray84 = new double[][] { doubleArray62, doubleArray69, doubleArray76, doubleArray83 };
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray84);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray86);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) -1, doubleArray88);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray43, doubleArray88);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList90);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList90);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList92);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.gaussian((int) 'a', doubleList92);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleList92);
        org.junit.Assert.assertNotNull(doubleList93);
    }

    @Test
    public void test5070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5070");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(10, doubleList14);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
    }

    @Test
    public void test5071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5071");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray75 = new double[][] { doubleArray53, doubleArray60, doubleArray67, doubleArray74 };
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray75);
        java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray44, doubleArray75);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray75);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray75);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 1, doubleArray75);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) ' ', doubleArray80);
        double[][] doubleArray83 = null;
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) -1, doubleArray82, doubleArray83);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian((int) ' ', doubleList84);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleList77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList84);
    }

    @Test
    public void test5072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5072");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray39);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) '4', doubleArray39);
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray86 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray87 = new double[][] { doubleArray65, doubleArray72, doubleArray79, doubleArray86 };
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray87);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray89);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) 'a', doubleArray89);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) '4', doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 1, doubleArray93);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray94);
        java.util.ArrayList<java.lang.Double> doubleList96 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray42, doubleArray94);
        double[][] doubleArray97 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray94);
        double[][] doubleArray98 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (short) -1, doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleList96);
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertNotNull(doubleArray98);
    }

    @Test
    public void test5073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5073");
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray47 = new double[][] { doubleArray25, doubleArray32, doubleArray39, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray49);
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray85 = new double[][] { doubleArray63, doubleArray70, doubleArray77, doubleArray84 };
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray49, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 1, doubleArray88);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 10, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) '4', doubleArray91);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 100, doubleArray91);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray93);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 1, doubleArray94);
        java.lang.Class<?> wildcardClass96 = doubleArray95.getClass();
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test5074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5074");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray40);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray40, doubleArray79);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray79);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) 'a', doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray83);
        double[][] doubleArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 10, doubleArray83, doubleArray85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
    }

    @Test
    public void test5075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5075");
        java.lang.Double[] doubleArray14 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList15 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList15, doubleArray14);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList21 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList20);
        java.util.ArrayList<java.lang.Double> doubleList22 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList20);
        java.util.ArrayList<java.lang.Double> doubleList23 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList22);
        java.util.ArrayList<java.lang.Double> doubleList24 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList22);
        java.util.ArrayList<java.lang.Double> doubleList25 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList24);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList26 = com.thealgorithms.maths.Gaussian.gaussian((-1), doubleList24);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(doubleList21);
        org.junit.Assert.assertNotNull(doubleList22);
        org.junit.Assert.assertNotNull(doubleList23);
        org.junit.Assert.assertNotNull(doubleList24);
        org.junit.Assert.assertNotNull(doubleList25);
    }

    @Test
    public void test5076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5076");
        double[][] doubleArray1 = null;
        double[] doubleArray14 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray20 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray26 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray32 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray38 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray44 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray45 = new double[][] { doubleArray14, doubleArray20, doubleArray26, doubleArray32, doubleArray38, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray45);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray81);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray46, doubleArray81);
        double[][] doubleArray88 = new double[][] {};
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray88);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray81, doubleArray89);
        double[][] doubleArray93 = new double[][] {};
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray93);
        java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray81, doubleArray94);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 1, doubleArray94);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList97 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 100, doubleArray1, doubleArray94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleList95);
        org.junit.Assert.assertNotNull(doubleArray96);
    }

    @Test
    public void test5077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5077");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray45);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray47, doubleArray80);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray47);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 100, doubleArray47);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 1, doubleArray47);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) -1, doubleArray47);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 10, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 100, doubleArray88);
        java.lang.Class<?> wildcardClass90 = doubleArray88.getClass();
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test5078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5078");
        double[] doubleArray18 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray24 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray30 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray36 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray42 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray48 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray49 = new double[][] { doubleArray18, doubleArray24, doubleArray30, doubleArray36, doubleArray42, doubleArray48 };
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray49);
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray85 = new double[][] { doubleArray63, doubleArray70, doubleArray77, doubleArray84 };
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray50, doubleArray86);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray50);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) ' ', doubleArray50);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '4', doubleArray50);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) -1, doubleArray50);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) -1, doubleArray50);
        java.lang.Class<?> wildcardClass95 = doubleArray94.getClass();
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test5079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5079");
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray48 = new double[][] { doubleArray26, doubleArray33, doubleArray40, doubleArray47 };
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray50);
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray85 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray86 = new double[][] { doubleArray64, doubleArray71, doubleArray78, doubleArray85 };
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray50, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 0, doubleArray50);
        double[][] doubleArray92 = null;
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) -1, doubleArray50, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 100, doubleArray50);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 0, doubleArray94);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) '#', doubleArray94);
        double[][] doubleArray97 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray96);
        double[][] doubleArray98 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray97);
        java.lang.Class<?> wildcardClass99 = doubleArray98.getClass();
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleList93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertNotNull(doubleArray98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test5080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5080");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray69 = new double[][] { doubleArray47, doubleArray54, doubleArray61, doubleArray68 };
        double[][] doubleArray70 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray69);
        java.util.ArrayList<java.lang.Double> doubleList71 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray38, doubleArray69);
        double[][] doubleArray72 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray69);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 10, doubleArray69);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray69);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleList71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
    }

    @Test
    public void test5081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5081");
        java.lang.Double[] doubleArray14 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList15 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList15, doubleArray14);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList21 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList22 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList23 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList22);
        java.util.ArrayList<java.lang.Double> doubleList24 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList22);
        java.util.ArrayList<java.lang.Double> doubleList25 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList24);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList26 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 10, doubleList25);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(doubleList21);
        org.junit.Assert.assertNotNull(doubleList22);
        org.junit.Assert.assertNotNull(doubleList23);
        org.junit.Assert.assertNotNull(doubleList24);
        org.junit.Assert.assertNotNull(doubleList25);
    }

    @Test
    public void test5082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5082");
        java.util.ArrayList<java.lang.Double> doubleList4 = null;
        java.util.ArrayList<java.lang.Double> doubleList5 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList4);
        java.util.ArrayList<java.lang.Double> doubleList6 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList5);
        java.util.ArrayList<java.lang.Double> doubleList7 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList6);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList8 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 100, doubleList6);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleList5);
        org.junit.Assert.assertNotNull(doubleList6);
        org.junit.Assert.assertNotNull(doubleList7);
    }

    @Test
    public void test5083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5083");
        double[] doubleArray16 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray22 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray28 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray34 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray40 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray46 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray47 = new double[][] { doubleArray16, doubleArray22, doubleArray28, doubleArray34, doubleArray40, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray47);
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray83 = new double[][] { doubleArray61, doubleArray68, doubleArray75, doubleArray82 };
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray48, doubleArray84);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 1, doubleArray48);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 0, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 10, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) -1, doubleArray89);
        java.lang.Class<?> wildcardClass92 = doubleArray89.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test5084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5084");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray39);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray75 = new double[][] { doubleArray53, doubleArray60, doubleArray67, doubleArray74 };
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray39, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList79);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList79);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleList81);
    }

    @Test
    public void test5085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5085");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray40);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 10, doubleArray40);
        double[][] doubleArray44 = null;
        java.util.ArrayList<java.lang.Double> doubleList45 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray44);
        java.util.ArrayList<java.lang.Double> doubleList46 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList45);
        java.util.ArrayList<java.lang.Double> doubleList47 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList46);
        java.lang.Class<?> wildcardClass48 = doubleList46.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleList45);
        org.junit.Assert.assertNotNull(doubleList46);
        org.junit.Assert.assertNotNull(doubleList47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test5086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5086");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray37);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray39, doubleArray72);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray39);
        double[][] doubleArray77 = null;
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) -1, doubleArray76, doubleArray77);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 10, doubleList78);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleList75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleList78);
    }

    @Test
    public void test5087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5087");
        double[] doubleArray15 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray21 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray27 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray33 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray39 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray45 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray46 = new double[][] { doubleArray15, doubleArray21, doubleArray27, doubleArray33, doubleArray39, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray46);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray82);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray47, doubleArray82);
        double[][] doubleArray89 = new double[][] {};
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray89);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray82, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 0, doubleArray90);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 1, doubleArray92);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) ' ', (int) 'a', doubleArray92);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
    }

    @Test
    public void test5088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5088");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray40);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray81);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray83);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) -1, doubleArray85);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray40, doubleArray85);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList87);
        java.lang.Class<?> wildcardClass89 = doubleList87.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test5089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5089");
        double[][] doubleArray1 = null;
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray48 = new double[][] { doubleArray26, doubleArray33, doubleArray40, doubleArray47 };
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray49);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray49);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray49);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray53);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray54);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 1, doubleArray55);
        double[][] doubleArray57 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) '4', doubleArray55);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList58 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 10, doubleArray1, doubleArray55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
    }

    @Test
    public void test5090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5090");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray44);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray44, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray44);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 0, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 10, doubleArray80);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', 1, doubleArray80);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleList78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
    }

    @Test
    public void test5091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5091");
        double[] doubleArray13 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray19 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray25 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray31 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray37 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray43 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray44 = new double[][] { doubleArray13, doubleArray19, doubleArray25, doubleArray31, doubleArray37, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray44);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray80);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray45, doubleArray80);
        double[][] doubleArray87 = new double[][] {};
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray80, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 100, doubleArray80);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) ' ', doubleArray80);
        java.lang.Class<?> wildcardClass92 = doubleArray80.getClass();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test5092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5092");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray40);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', (int) (byte) -1, doubleArray40);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
    }

    @Test
    public void test5093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5093");
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray47 = new double[][] { doubleArray25, doubleArray32, doubleArray39, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray48);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray48);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray53);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 1, doubleArray54);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) '4', doubleArray54);
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray85 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray92 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray93 = new double[][] { doubleArray71, doubleArray78, doubleArray85, doubleArray92 };
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray93);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray94);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 100, doubleArray94);
        double[][] doubleArray97 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray96);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList98 = com.thealgorithms.maths.Gaussian.valueOfGaussian(100, doubleArray54, doubleArray97);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray92), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertNotNull(doubleArray97);
    }

    @Test
    public void test5094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5094");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 10, doubleArray43);
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray85 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray86 = new double[][] { doubleArray64, doubleArray71, doubleArray78, doubleArray85 };
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray87);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 10, doubleArray87);
        double[][] doubleArray91 = null;
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray87, doubleArray91);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray87);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray93);
        java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray43, doubleArray93);
        java.util.ArrayList<java.lang.Double> doubleList96 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList95);
        java.util.ArrayList<java.lang.Double> doubleList97 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList95);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList98 = com.thealgorithms.maths.Gaussian.gaussian(100, doubleList97);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleList92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleList95);
        org.junit.Assert.assertNotNull(doubleList96);
        org.junit.Assert.assertNotNull(doubleList97);
    }

    @Test
    public void test5095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5095");
        double[][] doubleArray1 = null;
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray36);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray38);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList40 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 1, doubleArray1, doubleArray39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
    }

    @Test
    public void test5096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5096");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray42);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray42);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray46, doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList85);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.gaussian((-1), doubleList86);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleList86);
    }

    @Test
    public void test5097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5097");
        double[][] doubleArray2 = null;
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray43);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (-1), doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray48);
        java.util.ArrayList<java.lang.Double> doubleList50 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray2, doubleArray49);
        java.util.ArrayList<java.lang.Double> doubleList51 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList50);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleList50);
        org.junit.Assert.assertNotNull(doubleList51);
    }

    @Test
    public void test5098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5098");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray68 = new double[][] { doubleArray46, doubleArray53, doubleArray60, doubleArray67 };
        double[][] doubleArray69 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray68);
        java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray37, doubleArray68);
        java.util.ArrayList<java.lang.Double> doubleList71 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList70);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList70);
        java.util.ArrayList<java.lang.Double> doubleList73 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList70);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList73);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.gaussian((int) ' ', doubleList74);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleList70);
        org.junit.Assert.assertNotNull(doubleList71);
        org.junit.Assert.assertNotNull(doubleList72);
        org.junit.Assert.assertNotNull(doubleList73);
        org.junit.Assert.assertNotNull(doubleList74);
    }

    @Test
    public void test5099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5099");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 100, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 0, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) -1, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 0, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 10, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 0, doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
    }

    @Test
    public void test5100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5100");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray46);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray46, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) 'a', doubleArray79);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray79);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 10, doubleArray79);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (short) 1, doubleArray79);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray79);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 10, doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
    }

    @Test
    public void test5101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5101");
        double[] doubleArray18 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray24 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray30 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray36 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray42 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray48 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray49 = new double[][] { doubleArray18, doubleArray24, doubleArray30, doubleArray36, doubleArray42, doubleArray48 };
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray49);
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray85 = new double[][] { doubleArray63, doubleArray70, doubleArray77, doubleArray84 };
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray50, doubleArray86);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray50);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) -1, doubleArray50);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 10, doubleArray50);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 0, doubleArray92);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(10, 0, doubleArray93);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[NaN, NaN, NaN, NaN, NaN]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
    }

    @Test
    public void test5102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5102");
        double[] doubleArray12 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray18 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray24 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray30 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray36 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray42 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray43 = new double[][] { doubleArray12, doubleArray18, doubleArray24, doubleArray30, doubleArray36, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray86 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray87 = new double[][] { doubleArray65, doubleArray72, doubleArray79, doubleArray86 };
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray88);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray88);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray88);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray93);
        java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray43, doubleArray94);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (-1), doubleArray43);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray97 = com.thealgorithms.maths.Gaussian.gaussianElimination(100, (int) (byte) -1, doubleArray96);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[NaN, NaN, NaN, NaN, NaN]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleList95);
        org.junit.Assert.assertNotNull(doubleArray96);
    }

    @Test
    public void test5103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5103");
        java.lang.Double[] doubleArray11 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList12 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList12, doubleArray11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList16);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList16);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList16);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList16);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList21 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 100, doubleList20);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
    }

    @Test
    public void test5104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5104");
        double[] doubleArray17 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray23 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray29 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray35 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray41 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray47 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray48 = new double[][] { doubleArray17, doubleArray23, doubleArray29, doubleArray35, doubleArray41, doubleArray47 };
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray48);
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray83 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray84 = new double[][] { doubleArray62, doubleArray69, doubleArray76, doubleArray83 };
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray85);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray49, doubleArray85);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray85);
        double[][] doubleArray90 = null;
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray89, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) '4', doubleArray89);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) -1, doubleArray89);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '4', (int) '#', doubleArray89);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
    }

    @Test
    public void test5105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5105");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList12);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 100, doubleList12);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
    }

    @Test
    public void test5106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5106");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray46);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray46, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray46);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 0, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (-1), doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 0, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 100, doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
    }

    @Test
    public void test5107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5107");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray37);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray39, doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList75);
        java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList75);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList77);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList77);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleList75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleList77);
        org.junit.Assert.assertNotNull(doubleList78);
        org.junit.Assert.assertNotNull(doubleList79);
    }

    @Test
    public void test5108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5108");
        java.util.ArrayList<java.lang.Double> doubleList3 = null;
        java.util.ArrayList<java.lang.Double> doubleList4 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList3);
        java.util.ArrayList<java.lang.Double> doubleList5 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList3);
        java.util.ArrayList<java.lang.Double> doubleList6 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList5);
        org.junit.Assert.assertNotNull(doubleList4);
        org.junit.Assert.assertNotNull(doubleList5);
        org.junit.Assert.assertNotNull(doubleList6);
    }

    @Test
    public void test5109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5109");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray46);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray46);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray50);
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray85 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray86 = new double[][] { doubleArray64, doubleArray71, doubleArray78, doubleArray85 };
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 100, doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 1, doubleArray51, doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList90);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList90);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList90);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList90);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleList92);
        org.junit.Assert.assertNotNull(doubleList93);
    }

    @Test
    public void test5110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5110");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 0, doubleArray46);
        double[][] doubleArray48 = null;
        java.util.ArrayList<java.lang.Double> doubleList49 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray47, doubleArray48);
        java.util.ArrayList<java.lang.Double> doubleList50 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList49);
        java.util.ArrayList<java.lang.Double> doubleList51 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList50);
        java.util.ArrayList<java.lang.Double> doubleList52 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList51);
        java.util.ArrayList<java.lang.Double> doubleList53 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList52);
        java.util.ArrayList<java.lang.Double> doubleList54 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList52);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList55 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList52);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleList49);
        org.junit.Assert.assertNotNull(doubleList50);
        org.junit.Assert.assertNotNull(doubleList51);
        org.junit.Assert.assertNotNull(doubleList52);
        org.junit.Assert.assertNotNull(doubleList53);
        org.junit.Assert.assertNotNull(doubleList54);
    }

    @Test
    public void test5111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5111");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray42);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (-1), doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray47);
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray88 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray89 = new double[][] { doubleArray67, doubleArray74, doubleArray81, doubleArray88 };
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray90);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray90);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray90);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) ' ', doubleArray90);
        java.util.ArrayList<java.lang.Double> doubleList96 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 1, doubleArray47, doubleArray90);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList97 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 10, doubleList96);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleList96);
    }

    @Test
    public void test5112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5112");
        double[][] doubleArray1 = null;
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray41);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray43, doubleArray76);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray43);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 0, doubleArray43);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 10, doubleArray81);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 10, doubleArray1, doubleArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
    }

    @Test
    public void test5113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5113");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray42);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray42, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray42);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) '#', doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) 'a', doubleArray77);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) 'a', (int) (short) 1, doubleArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
    }

    @Test
    public void test5114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5114");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray47);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray50);
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray86 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray87 = new double[][] { doubleArray65, doubleArray72, doubleArray79, doubleArray86 };
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray88);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray50, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) '#', doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleArray92);
    }

    @Test
    public void test5115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5115");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray38);
        double[][] doubleArray40 = null;
        java.util.ArrayList<java.lang.Double> doubleList41 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray39, doubleArray40);
        java.util.ArrayList<java.lang.Double> doubleList42 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList41);
        java.util.ArrayList<java.lang.Double> doubleList43 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList41);
        java.util.ArrayList<java.lang.Double> doubleList44 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList41);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList45 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList41);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleList41);
        org.junit.Assert.assertNotNull(doubleList42);
        org.junit.Assert.assertNotNull(doubleList43);
        org.junit.Assert.assertNotNull(doubleList44);
    }

    @Test
    public void test5116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5116");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray39);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray42);
        java.lang.Class<?> wildcardClass44 = doubleArray43.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test5117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5117");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) '4', doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 10, doubleArray45);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 1, doubleArray48);
        java.lang.Class<?> wildcardClass50 = doubleArray49.getClass();
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test5118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5118");
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray49 = new double[][] { doubleArray27, doubleArray34, doubleArray41, doubleArray48 };
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray49);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray51);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray53);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray54);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray54);
        double[][] doubleArray57 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray54);
        double[][] doubleArray58 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 10, doubleArray54);
        double[][] doubleArray61 = new double[][] {};
        double[][] doubleArray62 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray61);
        java.util.ArrayList<java.lang.Double> doubleList63 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray54, doubleArray61);
        java.util.ArrayList<java.lang.Double> doubleList64 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList63);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList65 = com.thealgorithms.maths.Gaussian.gaussian((-1), doubleList64);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertNotNull(doubleList63);
        org.junit.Assert.assertNotNull(doubleList64);
    }

    @Test
    public void test5119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5119");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray42, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 1, doubleArray42);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 1, doubleArray42);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) 'a', doubleArray78);
        double[][] doubleArray80 = null;
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) -1, doubleArray79, doubleArray80);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) -1, doubleList81);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList81);
    }

    @Test
    public void test5120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5120");
        double[][] doubleArray2 = null;
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray43);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray75 = new double[][] { doubleArray53, doubleArray60, doubleArray67, doubleArray74 };
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray75);
        java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray43, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray43);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) '#', doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 100, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian((-1), doubleArray2, doubleArray80);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian(100, doubleList81);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleList77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
    }

    @Test
    public void test5121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5121");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray39);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray41, doubleArray74);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, 0, doubleArray74);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 10, doubleArray74);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(10, (int) '#', doubleArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleList77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
    }

    @Test
    public void test5122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5122");
        double[][] doubleArray11 = null;
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray49 = new double[][] { doubleArray27, doubleArray34, doubleArray41, doubleArray48 };
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray49);
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray83 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray84 = new double[][] { doubleArray62, doubleArray69, doubleArray76, doubleArray83 };
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray51, doubleArray84);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray51);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 0, doubleArray51);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray11, doubleArray51);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (short) 100, doubleArray51);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 10, doubleArray91);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) ' ', doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 0, doubleArray92);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 10, 0, doubleArray92);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
    }

    @Test
    public void test5123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5123");
        double[][] doubleArray3 = null;
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray46 = new double[][] { doubleArray24, doubleArray31, doubleArray38, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray52);
        java.util.ArrayList<java.lang.Double> doubleList54 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray3, doubleArray53);
        java.util.ArrayList<java.lang.Double> doubleList55 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList54);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList56 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList54);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleList54);
        org.junit.Assert.assertNotNull(doubleList55);
    }

    @Test
    public void test5124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5124");
        double[] doubleArray15 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray21 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray27 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray33 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray39 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray45 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray46 = new double[][] { doubleArray15, doubleArray21, doubleArray27, doubleArray33, doubleArray39, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray46);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray83);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray47, doubleArray83);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray83);
        double[][] doubleArray88 = null;
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray87, doubleArray88);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList89);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList89);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList89);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 10, doubleList89);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleList92);
    }

    @Test
    public void test5125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5125");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray39);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 100, doubleArray41);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(100, (int) (short) -1, doubleArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
    }

    @Test
    public void test5126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5126");
        double[][] doubleArray3 = null;
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray46 = new double[][] { doubleArray24, doubleArray31, doubleArray38, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray52);
        java.util.ArrayList<java.lang.Double> doubleList54 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray3, doubleArray53);
        java.util.ArrayList<java.lang.Double> doubleList55 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList54);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList56 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList55);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleList54);
        org.junit.Assert.assertNotNull(doubleList55);
    }

    @Test
    public void test5127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5127");
        double[] doubleArray20 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray26 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray32 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray38 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray44 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray50 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray51 = new double[][] { doubleArray20, doubleArray26, doubleArray32, doubleArray38, doubleArray44, doubleArray50 };
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray51);
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray86 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray87 = new double[][] { doubleArray65, doubleArray72, doubleArray79, doubleArray86 };
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray88);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray52, doubleArray88);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 1, doubleArray52);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 0, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 10, doubleArray93);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) -1, doubleArray93);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) '#', doubleArray95);
        double[][] doubleArray97 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 0, doubleArray95);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertNotNull(doubleArray97);
    }

    @Test
    public void test5128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5128");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (-1), doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) -1, doubleArray49);
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray88 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray89 = new double[][] { doubleArray67, doubleArray74, doubleArray81, doubleArray88 };
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray90);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray90);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray90);
        java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray50, doubleArray94);
        java.util.ArrayList<java.lang.Double> doubleList96 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList95);
        java.util.ArrayList<java.lang.Double> doubleList97 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList96);
        java.util.ArrayList<java.lang.Double> doubleList98 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList96);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleList95);
        org.junit.Assert.assertNotNull(doubleList96);
        org.junit.Assert.assertNotNull(doubleList97);
        org.junit.Assert.assertNotNull(doubleList98);
    }

    @Test
    public void test5129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5129");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 100, doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 0, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) -1, doubleArray45);
        java.lang.Class<?> wildcardClass47 = doubleArray46.getClass();
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test5130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5130");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray40);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 0, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) '4', doubleArray75);
        java.lang.Class<?> wildcardClass78 = doubleArray75.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test5131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5131");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) 'a', doubleArray43);
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray83 = new double[][] { doubleArray61, doubleArray68, doubleArray75, doubleArray82 };
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray85);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 100, doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray44, doubleArray88);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList89);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList90);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.gaussian(10, doubleList91);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleList91);
    }

    @Test
    public void test5132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5132");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray42);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray42);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray46, doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList85);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList86);
        java.lang.Class<?> wildcardClass88 = doubleList87.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test5133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5133");
        double[][] doubleArray3 = null;
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray47 = new double[][] { doubleArray25, doubleArray32, doubleArray39, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray47);
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray83 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray84 = new double[][] { doubleArray62, doubleArray69, doubleArray76, doubleArray83 };
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray47, doubleArray86);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray86);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '4', doubleArray86);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray86);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (short) 0, doubleArray86);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 10, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray3, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList94);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList96 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList95);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleList94);
        org.junit.Assert.assertNotNull(doubleList95);
    }

    @Test
    public void test5134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5134");
        java.lang.Double[] doubleArray11 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList12 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList12, doubleArray11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList18);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList19);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
    }

    @Test
    public void test5135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5135");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray40);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray77);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray40, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList81);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList82);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
    }

    @Test
    public void test5136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5136");
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray46 = new double[][] { doubleArray24, doubleArray31, doubleArray38, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray47);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray47);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray47);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 10, doubleArray47);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 10, doubleArray47);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (short) -1, doubleArray47);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) '4', doubleArray54);
        java.lang.Class<?> wildcardClass56 = doubleArray55.getClass();
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test5137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5137");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList9);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 100, doubleList9);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 3 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
    }

    @Test
    public void test5138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5138");
        double[] doubleArray19 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray25 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray31 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray37 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray43 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray49 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray50 = new double[][] { doubleArray19, doubleArray25, doubleArray31, doubleArray37, doubleArray43, doubleArray49 };
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray50);
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray85 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray86 = new double[][] { doubleArray64, doubleArray71, doubleArray78, doubleArray85 };
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray51, doubleArray87);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray87);
        double[][] doubleArray92 = null;
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray91, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 10, doubleArray91);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) -1, doubleArray91);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) -1, doubleArray91);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray97 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 10, (int) 'a', doubleArray96);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleList93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleArray96);
    }

    @Test
    public void test5139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5139");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray44);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray44, doubleArray83);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList84);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList84);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList84);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList84);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList84);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList84);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian((int) '4', doubleList90);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleList90);
    }

    @Test
    public void test5140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5140");
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList15);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) 'a', doubleList15);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
    }

    @Test
    public void test5141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5141");
        java.lang.Double[] doubleArray5 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList6 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList6, doubleArray5);
        java.util.ArrayList<java.lang.Double> doubleList8 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList6);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian((int) ' ', doubleList6);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 3 out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(doubleList8);
    }

    @Test
    public void test5142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5142");
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray49 = new double[][] { doubleArray27, doubleArray34, doubleArray41, doubleArray48 };
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray51);
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray86 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray87 = new double[][] { doubleArray65, doubleArray72, doubleArray79, doubleArray86 };
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray88);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray51, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 1, doubleArray90);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 10, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) '4', doubleArray93);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (short) 1, doubleArray93);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 100, doubleArray93);
        double[][] doubleArray97 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) -1, doubleArray96);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray98 = com.thealgorithms.maths.Gaussian.gaussianElimination(100, (-1), doubleArray97);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertNotNull(doubleArray97);
    }

    @Test
    public void test5143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5143");
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray47 = new double[][] { doubleArray25, doubleArray32, doubleArray39, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray49);
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray85 = new double[][] { doubleArray63, doubleArray70, doubleArray77, doubleArray84 };
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray49, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 1, doubleArray88);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 10, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) -1, doubleArray90);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, 100, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray93);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray94);
        java.lang.Class<?> wildcardClass96 = doubleArray94.getClass();
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test5144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5144");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray37);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray39, doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList75);
        java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList75);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList75);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList75);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleList75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleList77);
        org.junit.Assert.assertNotNull(doubleList78);
    }

    @Test
    public void test5145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5145");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 0, doubleArray37);
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray83 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray84 = new double[][] { doubleArray62, doubleArray69, doubleArray76, doubleArray83 };
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray85);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, 0, doubleArray87);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) '#', doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) -1, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray91);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray39, doubleArray92);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList93);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleList93);
    }

    @Test
    public void test5146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5146");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray37);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 1, doubleArray37);
        java.lang.Class<?> wildcardClass41 = doubleArray40.getClass();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test5147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5147");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray41, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList81);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList81);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList81);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian((int) 'a', doubleList81);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleList84);
    }

    @Test
    public void test5148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5148");
        java.lang.Double[] doubleArray12 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList13 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList13, doubleArray12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList19);
        java.util.ArrayList<java.lang.Double> doubleList21 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList20);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList22 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 100, doubleList20);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(doubleList21);
    }

    @Test
    public void test5149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5149");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 100, doubleArray38);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 0, doubleArray40);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray79);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray81);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian(10, doubleArray41, doubleArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
    }

    @Test
    public void test5150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5150");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray46);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray46, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 100, doubleArray46);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) 'a', doubleArray46);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) ' ', doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 0, doubleArray82);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (-1), doubleArray82);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray82);
        java.lang.Class<?> wildcardClass87 = doubleArray86.getClass();
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test5151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5151");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray41);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray81);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray43, doubleArray81);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 0, doubleArray81);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray86);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (short) 1, doubleArray88);
        java.lang.Class<?> wildcardClass90 = doubleArray88.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test5152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5152");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray40);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray81);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray83);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) -1, doubleArray85);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray40, doubleArray85);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList87);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
    }

    @Test
    public void test5153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5153");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 0, doubleArray41);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) '4', doubleArray44);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 100, (int) (byte) 0, doubleArray45);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
    }

    @Test
    public void test5154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5154");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (-1), doubleArray45);
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray85 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray86 = new double[][] { doubleArray64, doubleArray71, doubleArray78, doubleArray85 };
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray87);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray87);
        double[][] doubleArray91 = null;
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray87, doubleArray91);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) -1, doubleArray45, doubleArray93);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 100, (int) (byte) -1, doubleArray93);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleList92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleList94);
    }

    @Test
    public void test5155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5155");
        double[][] doubleArray7 = null;
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray45);
        java.util.ArrayList<java.lang.Double> doubleList49 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray7, doubleArray48);
        java.util.ArrayList<java.lang.Double> doubleList50 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList49);
        java.util.ArrayList<java.lang.Double> doubleList51 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList50);
        java.util.ArrayList<java.lang.Double> doubleList52 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList50);
        java.util.ArrayList<java.lang.Double> doubleList53 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList50);
        java.util.ArrayList<java.lang.Double> doubleList54 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList53);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList55 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) -1, doubleList53);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleList49);
        org.junit.Assert.assertNotNull(doubleList50);
        org.junit.Assert.assertNotNull(doubleList51);
        org.junit.Assert.assertNotNull(doubleList52);
        org.junit.Assert.assertNotNull(doubleList53);
        org.junit.Assert.assertNotNull(doubleList54);
    }

    @Test
    public void test5156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5156");
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList14);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) '#', doubleList15);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
    }

    @Test
    public void test5157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5157");
        java.lang.Double[] doubleArray12 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList13 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList13, doubleArray12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList19);
        java.util.ArrayList<java.lang.Double> doubleList21 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList19);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList22 = com.thealgorithms.maths.Gaussian.gaussian((int) ' ', doubleList21);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(doubleList21);
    }

    @Test
    public void test5158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5158");
        double[] doubleArray15 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray21 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray27 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray33 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray39 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray45 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray46 = new double[][] { doubleArray15, doubleArray21, doubleArray27, doubleArray33, doubleArray39, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray46);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray83);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray47, doubleArray83);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray83);
        double[][] doubleArray88 = null;
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray87, doubleArray88);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList89);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList90);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList91);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList92);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleList92);
    }

    @Test
    public void test5159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5159");
        java.lang.Double[] doubleArray12 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList13 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList13, doubleArray12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList21 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList20);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList22 = com.thealgorithms.maths.Gaussian.gaussian(10, doubleList20);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(doubleList21);
    }

    @Test
    public void test5160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5160");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray43);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray43, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList83);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList83);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList85);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList86);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList87);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) -1, doubleList87);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleList88);
    }

    @Test
    public void test5161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5161");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (-1), doubleArray73);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 10, doubleArray75);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination(10, (int) (short) 0, doubleArray75);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
    }

    @Test
    public void test5162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5162");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray43);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray43, doubleArray82);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray43);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 0, doubleArray43);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray43);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (byte) -1, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray88);
        java.lang.Class<?> wildcardClass90 = doubleArray89.getClass();
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test5163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5163");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray39);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray39, doubleArray78);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray78);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) 'a', doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
    }

    @Test
    public void test5164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5164");
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray46 = new double[][] { doubleArray24, doubleArray31, doubleArray38, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray47);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray47);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray47);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray52);
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray87 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray88 = new double[][] { doubleArray66, doubleArray73, doubleArray80, doubleArray87 };
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray89);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray52, doubleArray89);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList92);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList93);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList94);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleList92);
        org.junit.Assert.assertNotNull(doubleList93);
        org.junit.Assert.assertNotNull(doubleList94);
    }

    @Test
    public void test5165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5165");
        double[][] doubleArray2 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray3 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '4', (int) (short) -1, doubleArray2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test5166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5166");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray46);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray46);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, 0, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 100, doubleArray50);
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray83 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray90 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray91 = new double[][] { doubleArray69, doubleArray76, doubleArray83, doubleArray90 };
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray91);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 100, doubleArray92);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 0, doubleArray94);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) -1, doubleArray95);
        java.util.ArrayList<java.lang.Double> doubleList97 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 1, doubleArray52, doubleArray95);
        double[][] doubleArray98 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 0, doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertNotNull(doubleList97);
        org.junit.Assert.assertNotNull(doubleArray98);
    }

    @Test
    public void test5167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5167");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray44);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray44);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray48);
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray83 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray84 = new double[][] { doubleArray62, doubleArray69, doubleArray76, doubleArray83 };
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 100, doubleArray85);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 1, doubleArray49, doubleArray85);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList88);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList88);
        java.lang.Class<?> wildcardClass91 = doubleList90.getClass();
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test5168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5168");
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray51 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray52 = new double[][] { doubleArray30, doubleArray37, doubleArray44, doubleArray51 };
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray52);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray54);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray54);
        double[][] doubleArray57 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray56);
        double[][] doubleArray58 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray57);
        double[][] doubleArray59 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray57);
        double[][] doubleArray60 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 0, doubleArray59);
        double[][] doubleArray61 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 1, doubleArray60);
        double[][] doubleArray62 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) 10, doubleArray61);
        double[][] doubleArray63 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 10, doubleArray62);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray64 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 100, (int) (byte) 0, doubleArray62);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertNotNull(doubleArray63);
    }

    @Test
    public void test5169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5169");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray43);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) '4', doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 100, doubleArray48);
        java.lang.Class<?> wildcardClass50 = doubleArray49.getClass();
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test5170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5170");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) 'a', doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) -1, doubleArray45);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 100, doubleArray48);
        java.lang.Class<?> wildcardClass50 = doubleArray49.getClass();
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test5171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5171");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray42);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray42, doubleArray81);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray42);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 0, doubleArray42);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray42);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray42);
        double[][] doubleArray88 = null;
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) -1, doubleArray42, doubleArray88);
        java.lang.Class<?> wildcardClass90 = doubleList89.getClass();
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test5172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5172");
        double[] doubleArray20 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray26 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray32 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray38 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray44 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray50 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray51 = new double[][] { doubleArray20, doubleArray26, doubleArray32, doubleArray38, doubleArray44, doubleArray50 };
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray51);
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray86 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray87 = new double[][] { doubleArray65, doubleArray72, doubleArray79, doubleArray86 };
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray88);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray52, doubleArray88);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray52);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) ' ', doubleArray52);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '4', doubleArray52);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) -1, doubleArray52);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) -1, doubleArray52);
        double[][] doubleArray97 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (short) 100, doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertNotNull(doubleArray97);
    }

    @Test
    public void test5173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5173");
        java.util.ArrayList<java.lang.Double> doubleList4 = null;
        java.util.ArrayList<java.lang.Double> doubleList5 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList4);
        java.util.ArrayList<java.lang.Double> doubleList6 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList4);
        java.util.ArrayList<java.lang.Double> doubleList7 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList4);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList8 = com.thealgorithms.maths.Gaussian.gaussian((int) ' ', doubleList4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleList5);
        org.junit.Assert.assertNotNull(doubleList6);
        org.junit.Assert.assertNotNull(doubleList7);
    }

    @Test
    public void test5174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5174");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray41);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray43, doubleArray76);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, 0, doubleArray76);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 10, doubleArray76);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (-1), doubleArray76);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 100, (int) (byte) 0, doubleArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
    }

    @Test
    public void test5175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5175");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray49);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 10, doubleArray49);
        java.lang.Class<?> wildcardClass53 = doubleArray49.getClass();
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test5176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5176");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray39);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (short) 1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 0, doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
    }

    @Test
    public void test5177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5177");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList12);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
    }

    @Test
    public void test5178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5178");
        double[] doubleArray16 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray22 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray28 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray34 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray40 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray46 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray47 = new double[][] { doubleArray16, doubleArray22, doubleArray28, doubleArray34, doubleArray40, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray47);
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray83 = new double[][] { doubleArray61, doubleArray68, doubleArray75, doubleArray82 };
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray48, doubleArray84);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray84);
        double[][] doubleArray89 = null;
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray88, doubleArray89);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList90);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList90);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList90);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList93);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.gaussian((-1), doubleList94);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleList92);
        org.junit.Assert.assertNotNull(doubleList93);
        org.junit.Assert.assertNotNull(doubleList94);
    }

    @Test
    public void test5179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5179");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray41);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (-1), doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray44);
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray89 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray90 = new double[][] { doubleArray68, doubleArray75, doubleArray82, doubleArray89 };
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray91);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray91);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray91);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray91);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray95);
        double[][] doubleArray97 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray96);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList98 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) '#', doubleArray44, doubleArray97);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertNotNull(doubleArray97);
    }

    @Test
    public void test5180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5180");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList13);
        java.lang.Class<?> wildcardClass15 = doubleList14.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test5181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5181");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray43);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray43, doubleArray82);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray43);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 10, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 1, doubleArray87);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '4', (int) 'a', doubleArray87);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
    }

    @Test
    public void test5182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5182");
        java.lang.Double[] doubleArray10 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList11 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList11, doubleArray10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList11);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian(100, doubleList18);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
    }

    @Test
    public void test5183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5183");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray41);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray81);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray43, doubleArray81);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 0, doubleArray81);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 0, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 1, doubleArray88);
        java.lang.Class<?> wildcardClass90 = doubleArray89.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test5184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5184");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray41);
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray85 = new double[][] { doubleArray63, doubleArray70, doubleArray77, doubleArray84 };
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray87);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (-1), doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) -1, doubleArray90);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 1, doubleArray41, doubleArray90);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 10, doubleArray41);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 0, doubleArray93);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 100, (int) (short) -1, doubleArray93);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, -9999.0, 0.0, 9999.0, -969903.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleList92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
    }

    @Test
    public void test5185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5185");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray43);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray43);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) '4', doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (short) 10, doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
    }

    @Test
    public void test5186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5186");
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList16);
        java.lang.Class<?> wildcardClass18 = doubleList16.getClass();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test5187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5187");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray38);
        double[] doubleArray51 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray73 = new double[][] { doubleArray51, doubleArray58, doubleArray65, doubleArray72 };
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray73);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray40, doubleArray73);
        java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList76);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList76);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList76);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList79);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian((int) '#', doubleList79);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleList77);
        org.junit.Assert.assertNotNull(doubleList78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleList80);
    }

    @Test
    public void test5188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5188");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray69 = new double[][] { doubleArray47, doubleArray54, doubleArray61, doubleArray68 };
        double[][] doubleArray70 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray69);
        java.util.ArrayList<java.lang.Double> doubleList71 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray38, doubleArray69);
        double[][] doubleArray72 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 1, doubleArray38);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) '4', doubleArray38);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 0, doubleArray38);
        java.lang.Class<?> wildcardClass75 = doubleArray38.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleList71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test5189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5189");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 10, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 100, doubleArray46);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', (-1), doubleArray46);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
    }

    @Test
    public void test5190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5190");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray45);
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray85 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray86 = new double[][] { doubleArray64, doubleArray71, doubleArray78, doubleArray85 };
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray86);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray88);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) -1, doubleArray90);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray45, doubleArray90);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) '4', doubleArray45);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 1, doubleArray93);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 10, doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleList92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
    }

    @Test
    public void test5191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5191");
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray49 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray50 = new double[][] { doubleArray28, doubleArray35, doubleArray42, doubleArray49 };
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray50);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray52);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) 'a', doubleArray52);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) '4', doubleArray55);
        double[][] doubleArray57 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 1, doubleArray56);
        double[][] doubleArray58 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray57);
        double[][] doubleArray59 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 10, doubleArray58);
        double[][] doubleArray60 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray58);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray61 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', (int) ' ', doubleArray58);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertNotNull(doubleArray60);
    }

    @Test
    public void test5192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5192");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 0, doubleArray43);
        double[][] doubleArray45 = null;
        java.util.ArrayList<java.lang.Double> doubleList46 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray44, doubleArray45);
        java.util.ArrayList<java.lang.Double> doubleList47 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList46);
        java.util.ArrayList<java.lang.Double> doubleList48 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList47);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList49 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) -1, doubleList47);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleList46);
        org.junit.Assert.assertNotNull(doubleList47);
        org.junit.Assert.assertNotNull(doubleList48);
    }

    @Test
    public void test5193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5193");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 10, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (short) 10, doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
    }

    @Test
    public void test5194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5194");
        double[] doubleArray18 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray24 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray30 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray36 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray42 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray48 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray49 = new double[][] { doubleArray18, doubleArray24, doubleArray30, doubleArray36, doubleArray42, doubleArray48 };
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray49);
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray85 = new double[][] { doubleArray63, doubleArray70, doubleArray77, doubleArray84 };
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray50, doubleArray86);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray50);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) -1, doubleArray50);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 10, doubleArray50);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 0, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 0, doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
    }

    @Test
    public void test5195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5195");
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray47 = new double[][] { doubleArray25, doubleArray32, doubleArray39, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray47);
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray83 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray84 = new double[][] { doubleArray62, doubleArray69, doubleArray76, doubleArray83 };
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray47, doubleArray86);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray86);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '4', doubleArray86);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray86);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (short) 0, doubleArray86);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) ' ', doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray92);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) 'a', (int) '4', doubleArray94);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
    }

    @Test
    public void test5196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5196");
        double[][] doubleArray5 = null;
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) 'a', doubleArray45);
        java.util.ArrayList<java.lang.Double> doubleList47 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray5, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 1, doubleArray45);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 0, doubleArray45);
        java.lang.Class<?> wildcardClass50 = doubleArray49.getClass();
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleList47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test5197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5197");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[] doubleArray49 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray71 = new double[][] { doubleArray49, doubleArray56, doubleArray63, doubleArray70 };
        double[][] doubleArray72 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray71);
        java.util.ArrayList<java.lang.Double> doubleList73 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray39, doubleArray72);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (-1), doubleArray72);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray72);
        double[][] doubleArray76 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 10, doubleArray75, doubleArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"mat\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleList73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
    }

    @Test
    public void test5198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5198");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray36);
        double[] doubleArray49 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray71 = new double[][] { doubleArray49, doubleArray56, doubleArray63, doubleArray70 };
        double[][] doubleArray72 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray71);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray71);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian(100, doubleArray36, doubleArray71);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
    }

    @Test
    public void test5199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5199");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray47);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) 'a', doubleArray47);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) '4', doubleArray50);
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray89 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray90 = new double[][] { doubleArray68, doubleArray75, doubleArray82, doubleArray89 };
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray91);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray91);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray91);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray91);
        java.util.ArrayList<java.lang.Double> doubleList96 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) -1, doubleArray50, doubleArray95);
        double[][] doubleArray97 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 0, doubleArray95);
        double[][] doubleArray98 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 10, doubleArray95);
        java.lang.Class<?> wildcardClass99 = doubleArray95.getClass();
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleList96);
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertNotNull(doubleArray98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test5200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5200");
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray49 = new double[][] { doubleArray27, doubleArray34, doubleArray41, doubleArray48 };
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray50);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray50, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 100, doubleArray50);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray86);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 1, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray88);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 0, doubleArray88);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '4', (int) '4', doubleArray88);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
    }

    @Test
    public void test5201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5201");
        java.lang.Double[] doubleArray11 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList12 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList12, doubleArray11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList18);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList19);
        java.util.ArrayList<java.lang.Double> doubleList21 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList20);
        java.lang.Class<?> wildcardClass22 = doubleList21.getClass();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(doubleList21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test5202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5202");
        double[][] doubleArray2 = null;
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray40);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray40, doubleArray79);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray79);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 0, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray2, doubleArray82);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList84);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList84);
    }

    @Test
    public void test5203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5203");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray45);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray45, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 100, doubleArray45);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray81);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (byte) 0, doubleArray81);
        double[][] doubleArray85 = null;
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian((-1), doubleArray84, doubleArray85);
        java.lang.Class<?> wildcardClass87 = doubleList86.getClass();
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test5204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5204");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray41, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 0, doubleArray41);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 10, (int) 'a', doubleArray41);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, -9999.0, 0.0, 9999.0, -969903.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleArray82);
    }

    @Test
    public void test5205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5205");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) -1, doubleArray45);
        double[][] doubleArray50 = new double[][] {};
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray50);
        double[][] doubleArray52 = null;
        java.util.ArrayList<java.lang.Double> doubleList53 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray50, doubleArray52);
        java.util.ArrayList<java.lang.Double> doubleList54 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) -1, doubleArray45, doubleArray50);
        java.util.ArrayList<java.lang.Double> doubleList55 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList54);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList56 = com.thealgorithms.maths.Gaussian.gaussian(100, doubleList55);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleList53);
        org.junit.Assert.assertNotNull(doubleList54);
        org.junit.Assert.assertNotNull(doubleList55);
    }

    @Test
    public void test5206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5206");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray41);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray41, doubleArray80);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray80);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 0, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (short) 10, doubleArray83);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 100, (int) (byte) -1, doubleArray83);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
    }

    @Test
    public void test5207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5207");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[] doubleArray49 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray71 = new double[][] { doubleArray49, doubleArray56, doubleArray63, doubleArray70 };
        double[][] doubleArray72 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray71);
        java.util.ArrayList<java.lang.Double> doubleList73 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray71);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray71);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray71);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) ' ', doubleArray76);
        java.lang.Class<?> wildcardClass78 = doubleArray76.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleList73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test5208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5208");
        java.lang.Double[] doubleArray10 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList11 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList11, doubleArray10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList11);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) -1, doubleList18);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
    }

    @Test
    public void test5209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5209");
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray48 = new double[][] { doubleArray26, doubleArray33, doubleArray40, doubleArray47 };
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray50);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray53);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray54);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray55);
        double[][] doubleArray57 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 1, doubleArray56);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray58 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 100, (int) '4', doubleArray57);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
    }

    @Test
    public void test5210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5210");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray43);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray43, doubleArray82);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray82);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 0, doubleArray85);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 100, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (-1), doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
    }

    @Test
    public void test5211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5211");
        double[] doubleArray13 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray19 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray25 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray31 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray37 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray43 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray44 = new double[][] { doubleArray13, doubleArray19, doubleArray25, doubleArray31, doubleArray37, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray44);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray80);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray45, doubleArray80);
        double[][] doubleArray87 = new double[][] {};
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray80, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 10, doubleArray80);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(100, (int) (byte) -1, doubleArray90);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleArray90);
    }

    @Test
    public void test5212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5212");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 100, doubleArray44);
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray83 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray84 = new double[][] { doubleArray62, doubleArray69, doubleArray76, doubleArray83 };
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray85);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray85);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray88);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.valueOfGaussian((-1), doubleArray45, doubleArray88);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 100, doubleList90);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleList90);
    }

    @Test
    public void test5213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5213");
        double[] doubleArray10 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray16 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray22 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray28 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray34 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray40 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray41 = new double[][] { doubleArray10, doubleArray16, doubleArray22, doubleArray28, doubleArray34, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray77);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray77);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray42, doubleArray77);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList81);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList81);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
    }

    @Test
    public void test5214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5214");
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList15);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) '#', doubleList15);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
    }

    @Test
    public void test5215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5215");
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList15);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((-1), doubleList15);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
    }

    @Test
    public void test5216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5216");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.lang.Class<?> wildcardClass16 = doubleList9.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test5217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5217");
        double[] doubleArray15 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray21 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray27 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray33 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray39 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray45 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray46 = new double[][] { doubleArray15, doubleArray21, doubleArray27, doubleArray33, doubleArray39, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray46);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray83);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray47, doubleArray83);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray83);
        double[][] doubleArray88 = null;
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray87, doubleArray88);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList89);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList90);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList91);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList92);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleList92);
    }

    @Test
    public void test5218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5218");
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray49 = new double[][] { doubleArray27, doubleArray34, doubleArray41, doubleArray48 };
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray50);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray50, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) 'a', doubleArray83);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray83);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 10, doubleArray83);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (short) 10, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (-1), doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (short) 1, doubleArray88);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 10, doubleArray88);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, 1, doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
    }

    @Test
    public void test5219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5219");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 0, doubleArray42);
        double[][] doubleArray44 = null;
        java.util.ArrayList<java.lang.Double> doubleList45 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray43, doubleArray44);
        java.util.ArrayList<java.lang.Double> doubleList46 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList45);
        java.util.ArrayList<java.lang.Double> doubleList47 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList46);
        java.lang.Class<?> wildcardClass48 = doubleList47.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleList45);
        org.junit.Assert.assertNotNull(doubleList46);
        org.junit.Assert.assertNotNull(doubleList47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test5220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5220");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 10, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 1, doubleArray47);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray47);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 0, doubleArray50);
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray87 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray88 = new double[][] { doubleArray66, doubleArray73, doubleArray80, doubleArray87 };
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray89);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 0, doubleArray91);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray51, doubleArray91);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.gaussian(10, doubleList93);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleList93);
    }

    @Test
    public void test5221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5221");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 100, doubleArray40);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray75);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) ' ', (int) (byte) 1, doubleArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
    }

    @Test
    public void test5222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5222");
        java.lang.Double[] doubleArray10 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList11 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList11, doubleArray10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList17);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 100, doubleList18);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
    }

    @Test
    public void test5223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5223");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray68 = new double[][] { doubleArray46, doubleArray53, doubleArray60, doubleArray67 };
        double[][] doubleArray69 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray68);
        java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray37, doubleArray68);
        java.util.ArrayList<java.lang.Double> doubleList71 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList70);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList70);
        java.util.ArrayList<java.lang.Double> doubleList73 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList70);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList73);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 100, doubleList73);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleList70);
        org.junit.Assert.assertNotNull(doubleList71);
        org.junit.Assert.assertNotNull(doubleList72);
        org.junit.Assert.assertNotNull(doubleList73);
        org.junit.Assert.assertNotNull(doubleList74);
    }

    @Test
    public void test5224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5224");
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray49 = new double[][] { doubleArray27, doubleArray34, doubleArray41, doubleArray48 };
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray49);
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray83 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray84 = new double[][] { doubleArray62, doubleArray69, doubleArray76, doubleArray83 };
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray51, doubleArray84);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray51);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 100, doubleArray51);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 1, doubleArray51);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) -1, doubleArray51);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 10, doubleArray91);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 100, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) 'a', doubleArray93);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', 0, doubleArray93);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
    }

    @Test
    public void test5225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5225");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 10, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 1, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (short) 10, doubleArray47);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 100, (int) (short) 100, doubleArray47);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
    }

    @Test
    public void test5226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5226");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray36);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray36);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray81);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, 0, doubleArray83);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) '#', doubleArray85);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray39, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList87);
        java.lang.Class<?> wildcardClass89 = doubleList87.getClass();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test5227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5227");
        java.lang.Double[] doubleArray13 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList14 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList14, doubleArray13);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList19);
        java.util.ArrayList<java.lang.Double> doubleList21 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList19);
        java.util.ArrayList<java.lang.Double> doubleList22 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList21);
        java.util.ArrayList<java.lang.Double> doubleList23 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList21);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList24 = com.thealgorithms.maths.Gaussian.gaussian(100, doubleList21);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(doubleList21);
        org.junit.Assert.assertNotNull(doubleList22);
        org.junit.Assert.assertNotNull(doubleList23);
    }

    @Test
    public void test5228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5228");
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray46 = new double[][] { doubleArray24, doubleArray31, doubleArray38, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray51);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 10, doubleArray51);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', (int) (short) 10, doubleArray54);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
    }

    @Test
    public void test5229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5229");
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray47 = new double[][] { doubleArray25, doubleArray32, doubleArray39, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray49);
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray85 = new double[][] { doubleArray63, doubleArray70, doubleArray77, doubleArray84 };
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray49, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 1, doubleArray88);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 10, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) '4', doubleArray91);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 100, doubleArray91);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray91);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) '#', doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
    }

    @Test
    public void test5230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5230");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray39);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 0, doubleArray43);
        double[][] doubleArray45 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList46 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 100, doubleArray44, doubleArray45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"mat\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
    }

    @Test
    public void test5231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5231");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray46);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray46);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 1, doubleArray50);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray50);
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray87 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray88 = new double[][] { doubleArray66, doubleArray73, doubleArray80, doubleArray87 };
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray88);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray88);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 1, doubleArray50, doubleArray88);
        java.lang.Class<?> wildcardClass93 = doubleArray50.getClass();
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleList92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test5232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5232");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray40);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (short) 100, doubleArray40);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) 'a', doubleArray40);
        java.lang.Class<?> wildcardClass78 = doubleArray40.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test5233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5233");
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray47 = new double[][] { doubleArray25, doubleArray32, doubleArray39, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray48);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray48);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray53);
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray88 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray89 = new double[][] { doubleArray67, doubleArray74, doubleArray81, doubleArray88 };
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray90);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray53, doubleArray90);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 100, doubleArray53);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleList93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
    }

    @Test
    public void test5234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5234");
        double[][] doubleArray3 = null;
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray47 = new double[][] { doubleArray25, doubleArray32, doubleArray39, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray47);
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray83 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray84 = new double[][] { doubleArray62, doubleArray69, doubleArray76, doubleArray83 };
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray47, doubleArray86);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray86);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '4', doubleArray86);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray86);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (short) 0, doubleArray86);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 10, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray3, doubleArray86);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) ' ', 10, doubleArray3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleList94);
    }

    @Test
    public void test5235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5235");
        double[] doubleArray3 = new double[] {};
        double[][] doubleArray4 = new double[][] { doubleArray3 };
        double[][] doubleArray5 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray4);
        double[] doubleArray17 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray23 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray29 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray35 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray41 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray47 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray48 = new double[][] { doubleArray17, doubleArray23, doubleArray29, doubleArray35, doubleArray41, doubleArray47 };
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray48);
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray83 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray84 = new double[][] { doubleArray62, doubleArray69, doubleArray76, doubleArray83 };
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray84);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray49, doubleArray84);
        double[][] doubleArray91 = new double[][] {};
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray91);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray84, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 0, doubleArray92);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray5, doubleArray92);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleList93);
        org.junit.Assert.assertNotNull(doubleArray94);
    }

    @Test
    public void test5236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5236");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 100, doubleArray40);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray82);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray82);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray85);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray40, doubleArray85);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) '#', doubleArray85);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 10, 0, doubleArray88);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleArray88);
    }

    @Test
    public void test5237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5237");
        java.lang.Double[] doubleArray12 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList13 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList13, doubleArray12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList13);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList16);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList16);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList16);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList19);
        java.util.ArrayList<java.lang.Double> doubleList21 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList20);
        java.util.ArrayList<java.lang.Double> doubleList22 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList21);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList23 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList22);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(doubleList21);
        org.junit.Assert.assertNotNull(doubleList22);
    }

    @Test
    public void test5238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5238");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray45);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) '4', doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (short) -1, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 10, doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
    }

    @Test
    public void test5239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5239");
        double[][] doubleArray1 = null;
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray39);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray41, doubleArray74);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 100, doubleArray41);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 1, doubleArray41);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 100, doubleArray1, doubleArray41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleList77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
    }

    @Test
    public void test5240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5240");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray38);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray38);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 0, doubleArray41);
        java.lang.Class<?> wildcardClass44 = doubleArray43.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test5241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5241");
        double[][] doubleArray2 = null;
        double[][] doubleArray3 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
    }

    @Test
    public void test5242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5242");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray45);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray45);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 100, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray50);
        java.lang.Class<?> wildcardClass53 = doubleArray52.getClass();
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test5243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5243");
        java.lang.Double[] doubleArray15 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList16 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList16, doubleArray15);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList16);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList16);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList16);
        java.util.ArrayList<java.lang.Double> doubleList21 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList16);
        java.util.ArrayList<java.lang.Double> doubleList22 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList21);
        java.util.ArrayList<java.lang.Double> doubleList23 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList21);
        java.util.ArrayList<java.lang.Double> doubleList24 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList23);
        java.util.ArrayList<java.lang.Double> doubleList25 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList23);
        java.util.ArrayList<java.lang.Double> doubleList26 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList25);
        java.util.ArrayList<java.lang.Double> doubleList27 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList25);
        java.util.ArrayList<java.lang.Double> doubleList28 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList27);
        java.lang.Class<?> wildcardClass29 = doubleList28.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(doubleList21);
        org.junit.Assert.assertNotNull(doubleList22);
        org.junit.Assert.assertNotNull(doubleList23);
        org.junit.Assert.assertNotNull(doubleList24);
        org.junit.Assert.assertNotNull(doubleList25);
        org.junit.Assert.assertNotNull(doubleList26);
        org.junit.Assert.assertNotNull(doubleList27);
        org.junit.Assert.assertNotNull(doubleList28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test5244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5244");
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray49 = new double[][] { doubleArray27, doubleArray34, doubleArray41, doubleArray48 };
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray49);
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray83 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray84 = new double[][] { doubleArray62, doubleArray69, doubleArray76, doubleArray83 };
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray51, doubleArray84);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray51);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 100, doubleArray51);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 1, doubleArray51);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) -1, doubleArray51);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 10, doubleArray91);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 100, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 100, doubleArray93);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '4', (int) ' ', doubleArray94);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
    }

    @Test
    public void test5245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5245");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray42);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray42, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList82);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList82);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList84);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList84);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 100, doubleList84);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleList86);
    }

    @Test
    public void test5246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5246");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray39);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray41, doubleArray74);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, 0, doubleArray74);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (-1), doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleList77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
    }

    @Test
    public void test5247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5247");
        java.lang.Double[] doubleArray11 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList12 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList12, doubleArray11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList18);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) -1, doubleList18);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
    }

    @Test
    public void test5248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5248");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray36);
        double[] doubleArray49 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray71 = new double[][] { doubleArray49, doubleArray56, doubleArray63, doubleArray70 };
        double[][] doubleArray72 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray71);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray71);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray38, doubleArray71);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, 0, doubleArray71);
        double[][] doubleArray76 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.valueOfGaussian(100, doubleArray71, doubleArray76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot load from object array because \"mat\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(doubleArray75);
    }

    @Test
    public void test5249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5249");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 100, doubleArray47);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 0, doubleArray47);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) 'a', doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 0, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 0, doubleArray51);
        double[][] doubleArray54 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList55 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 10, doubleArray53, doubleArray54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
    }

    @Test
    public void test5250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5250");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray40);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray77);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray40, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList80);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList80);
        java.lang.Class<?> wildcardClass84 = doubleList83.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test5251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5251");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray40);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = null;
        java.util.ArrayList<java.lang.Double> doubleList47 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray45, doubleArray46);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList48 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList47);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleList47);
    }

    @Test
    public void test5252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5252");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray42);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray42, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray42);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) '#', doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '4', doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
    }

    @Test
    public void test5253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5253");
        java.lang.Double[] doubleArray11 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList12 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList12, doubleArray11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian(10, doubleList19);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
    }

    @Test
    public void test5254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5254");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (-1), doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) -1, doubleArray48);
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray87 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray88 = new double[][] { doubleArray66, doubleArray73, doubleArray80, doubleArray87 };
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray89);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray89);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray89);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray49, doubleArray93);
        java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList94);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList96 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList94);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleList94);
        org.junit.Assert.assertNotNull(doubleList95);
    }

    @Test
    public void test5255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5255");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray38);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (short) 10, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) '#', doubleArray40);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) 'a', doubleArray40);
        java.lang.Class<?> wildcardClass44 = doubleArray40.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test5256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5256");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList13);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) '#', doubleList14);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
    }

    @Test
    public void test5257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5257");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray43);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray45, doubleArray78);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (short) 100, doubleArray45);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 0, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) 'a', doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 0, doubleArray85);
        java.lang.Class<?> wildcardClass87 = doubleArray85.getClass();
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test5258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5258");
        double[] doubleArray14 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray20 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray26 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray32 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray38 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray44 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray45 = new double[][] { doubleArray14, doubleArray20, doubleArray26, doubleArray32, doubleArray38, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray45);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray81);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray46, doubleArray81);
        double[][] doubleArray88 = new double[][] {};
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray88);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray81, doubleArray89);
        double[][] doubleArray93 = new double[][] {};
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray93);
        java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray81, doubleArray94);
        java.util.ArrayList<java.lang.Double> doubleList96 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList95);
        java.util.ArrayList<java.lang.Double> doubleList97 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList96);
        java.util.ArrayList<java.lang.Double> doubleList98 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList97);
        java.util.ArrayList<java.lang.Double> doubleList99 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList97);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleList95);
        org.junit.Assert.assertNotNull(doubleList96);
        org.junit.Assert.assertNotNull(doubleList97);
        org.junit.Assert.assertNotNull(doubleList98);
        org.junit.Assert.assertNotNull(doubleList99);
    }

    @Test
    public void test5259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5259");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray38);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 1, doubleArray38);
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray85 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray86 = new double[][] { doubleArray64, doubleArray71, doubleArray78, doubleArray85 };
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 100, doubleArray88);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 0, doubleArray88);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) 'a', doubleArray91);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 0, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 0, doubleArray92);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 100, doubleArray41, doubleArray94);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
    }

    @Test
    public void test5260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5260");
        java.lang.Double[] doubleArray11 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList12 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList12, doubleArray11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList17);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList17);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList19);
        java.util.ArrayList<java.lang.Double> doubleList21 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList19);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(doubleList21);
    }

    @Test
    public void test5261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5261");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray70 = new double[][] { doubleArray48, doubleArray55, doubleArray62, doubleArray69 };
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray70);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray38, doubleArray71);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray38);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 0, doubleArray73);
        java.lang.Class<?> wildcardClass75 = doubleArray74.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleList72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test5262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5262");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray42);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray42, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList82);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList82);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList82);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList85);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList85);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleList86);
    }

    @Test
    public void test5263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5263");
        double[] doubleArray10 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray16 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray22 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray28 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray34 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray40 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray41 = new double[][] { doubleArray10, doubleArray16, doubleArray22, doubleArray28, doubleArray34, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray77);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray77);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray42, doubleArray77);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) ' ', doubleArray42);
        java.lang.Class<?> wildcardClass83 = doubleArray42.getClass();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test5264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5264");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) '4', doubleArray47);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, 0, doubleArray47);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray47);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 1, doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
    }

    @Test
    public void test5265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5265");
        double[] doubleArray12 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray18 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray24 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray30 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray36 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray42 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray43 = new double[][] { doubleArray12, doubleArray18, doubleArray24, doubleArray30, doubleArray36, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray79);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray44, doubleArray79);
        double[][] doubleArray86 = new double[][] {};
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray79, doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList88);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList88);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList90);
        java.lang.Class<?> wildcardClass92 = doubleList91.getClass();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test5266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5266");
        double[][] doubleArray3 = null;
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray47 = new double[][] { doubleArray25, doubleArray32, doubleArray39, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray47);
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray83 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray84 = new double[][] { doubleArray62, doubleArray69, doubleArray76, doubleArray83 };
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray47, doubleArray86);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray86);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '4', doubleArray86);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray86);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (short) 0, doubleArray86);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 10, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray3, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList94);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList96 = com.thealgorithms.maths.Gaussian.gaussian(10, doubleList95);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleList94);
        org.junit.Assert.assertNotNull(doubleList95);
    }

    @Test
    public void test5267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5267");
        double[] doubleArray20 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray26 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray32 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray38 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray44 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray50 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray51 = new double[][] { doubleArray20, doubleArray26, doubleArray32, doubleArray38, doubleArray44, doubleArray50 };
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray51);
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray86 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray87 = new double[][] { doubleArray65, doubleArray72, doubleArray79, doubleArray86 };
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray88);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray52, doubleArray88);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray52);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) ' ', doubleArray52);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '4', doubleArray52);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 10, doubleArray52);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (byte) -1, doubleArray95);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray97 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 10, 1, doubleArray95);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[NaN, NaN, NaN, NaN, NaN]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleArray96);
    }

    @Test
    public void test5268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5268");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray42, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (-1), doubleArray75);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 0, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 0, doubleArray78);
        java.lang.Class<?> wildcardClass81 = doubleArray78.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test5269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5269");
        java.lang.Double[] doubleArray14 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList15 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList15, doubleArray14);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList21 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList22 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList23 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList22);
        java.util.ArrayList<java.lang.Double> doubleList24 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList23);
        java.util.ArrayList<java.lang.Double> doubleList25 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList23);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList26 = com.thealgorithms.maths.Gaussian.gaussian(100, doubleList23);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(doubleList21);
        org.junit.Assert.assertNotNull(doubleList22);
        org.junit.Assert.assertNotNull(doubleList23);
        org.junit.Assert.assertNotNull(doubleList24);
        org.junit.Assert.assertNotNull(doubleList25);
    }

    @Test
    public void test5270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5270");
        double[] doubleArray19 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray25 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray31 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray37 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray43 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray49 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray50 = new double[][] { doubleArray19, doubleArray25, doubleArray31, doubleArray37, doubleArray43, doubleArray49 };
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray50);
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray85 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray86 = new double[][] { doubleArray64, doubleArray71, doubleArray78, doubleArray85 };
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray51, doubleArray87);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray87);
        double[][] doubleArray92 = null;
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray91, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 10, doubleArray91);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 1, doubleArray91);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 0, doubleArray95);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray97 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 10, 0, doubleArray96);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleList93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleArray96);
    }

    @Test
    public void test5271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5271");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 100, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 0, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray50 = null;
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray86 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray87 = new double[][] { doubleArray65, doubleArray72, doubleArray79, doubleArray86 };
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray88);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray88);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray50, doubleArray91);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) '#', doubleArray91);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) -1, doubleArray45, doubleArray93);
        java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList94);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList96 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 100, doubleList94);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleList92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleList94);
        org.junit.Assert.assertNotNull(doubleList95);
    }

    @Test
    public void test5272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5272");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) 'a', doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 0, doubleArray47);
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray85 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray86 = new double[][] { doubleArray64, doubleArray71, doubleArray78, doubleArray85 };
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray86);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray88);
        double[][] doubleArray91 = null;
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray90, doubleArray91);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray47, doubleArray91);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList93);
        java.lang.Class<?> wildcardClass95 = doubleList94.getClass();
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleList92);
        org.junit.Assert.assertNotNull(doubleList93);
        org.junit.Assert.assertNotNull(doubleList94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test5273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5273");
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray47 = new double[][] { doubleArray25, doubleArray32, doubleArray39, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) 'a', doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 0, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) -1, doubleArray52);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 1, doubleArray52);
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray87 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray88 = new double[][] { doubleArray66, doubleArray73, doubleArray80, doubleArray87 };
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray89);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) -1, doubleArray52, doubleArray90);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 100, (int) (byte) 1, doubleArray52);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleList91);
    }

    @Test
    public void test5274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5274");
        double[] doubleArray17 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray23 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray29 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray35 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray41 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray47 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray48 = new double[][] { doubleArray17, doubleArray23, doubleArray29, doubleArray35, doubleArray41, doubleArray47 };
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray48);
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray83 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray84 = new double[][] { doubleArray62, doubleArray69, doubleArray76, doubleArray83 };
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray85);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray49, doubleArray85);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray85);
        double[][] doubleArray90 = null;
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray89, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 10, doubleArray89);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) -1, doubleArray89);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 1, doubleArray89);
        java.lang.Class<?> wildcardClass95 = doubleArray89.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test5275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5275");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray67 = new double[][] { doubleArray45, doubleArray52, doubleArray59, doubleArray66 };
        double[][] doubleArray68 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray67);
        java.util.ArrayList<java.lang.Double> doubleList69 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray36, doubleArray67);
        java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList69);
        java.util.ArrayList<java.lang.Double> doubleList71 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList69);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList69);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList73 = com.thealgorithms.maths.Gaussian.gaussian((int) '4', doubleList72);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleList69);
        org.junit.Assert.assertNotNull(doubleList70);
        org.junit.Assert.assertNotNull(doubleList71);
        org.junit.Assert.assertNotNull(doubleList72);
    }

    @Test
    public void test5276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5276");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray44);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray44, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray44);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 0, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 0, doubleArray81);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(100, (int) (short) 0, doubleArray81);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleList78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
    }

    @Test
    public void test5277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5277");
        double[][] doubleArray2 = null;
        double[][] doubleArray3 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 1, doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
    }

    @Test
    public void test5278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5278");
        double[] doubleArray19 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray25 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray31 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray37 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray43 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray49 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray50 = new double[][] { doubleArray19, doubleArray25, doubleArray31, doubleArray37, doubleArray43, doubleArray49 };
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray50);
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray85 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray86 = new double[][] { doubleArray64, doubleArray71, doubleArray78, doubleArray85 };
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray51, doubleArray87);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray87);
        double[][] doubleArray92 = null;
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray91, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) '4', doubleArray91);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 1, doubleArray91);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (short) 10, doubleArray95);
        double[][] doubleArray97 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 10, doubleArray95);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleList93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertNotNull(doubleArray97);
    }

    @Test
    public void test5279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5279");
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray48 = new double[][] { doubleArray26, doubleArray33, doubleArray40, doubleArray47 };
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray49);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray49);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray49);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray53);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray54);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 1, doubleArray55);
        double[][] doubleArray57 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) '4', doubleArray55);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray58 = com.thealgorithms.maths.Gaussian.gaussianElimination(10, 0, doubleArray57);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
    }

    @Test
    public void test5280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5280");
        double[] doubleArray18 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray24 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray30 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray36 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray42 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray48 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray49 = new double[][] { doubleArray18, doubleArray24, doubleArray30, doubleArray36, doubleArray42, doubleArray48 };
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray49);
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray85 = new double[][] { doubleArray63, doubleArray70, doubleArray77, doubleArray84 };
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray50, doubleArray86);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray50);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) ' ', doubleArray50);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '4', doubleArray50);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) -1, doubleArray50);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(10, 100, doubleArray50);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[NaN, NaN, NaN, NaN, NaN]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
    }

    @Test
    public void test5281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5281");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray40);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray77);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray40, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList80);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList80);
        java.lang.Class<?> wildcardClass84 = doubleList83.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test5282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5282");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray47);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (-1), doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) -1, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray50);
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray86 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray87 = new double[][] { doubleArray65, doubleArray72, doubleArray79, doubleArray86 };
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray88);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray52, doubleArray88);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 10, doubleArray88);
        java.lang.Class<?> wildcardClass93 = doubleArray92.getClass();
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test5283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5283");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray37);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) 'a', doubleArray39);
        java.lang.Class<?> wildcardClass41 = doubleArray39.getClass();
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test5284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5284");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray45);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray47, doubleArray80);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray47);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 100, doubleArray47);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 1, doubleArray47);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) ' ', doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 0, doubleArray86);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
    }

    @Test
    public void test5285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5285");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray42);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray42, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList82);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList83);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList83);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList83);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.gaussian(10, doubleList86);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleList86);
    }

    @Test
    public void test5286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5286");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray39);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray75 = new double[][] { doubleArray53, doubleArray60, doubleArray67, doubleArray74 };
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray39, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList79);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 10, doubleList80);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleList80);
    }

    @Test
    public void test5287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5287");
        double[][] doubleArray2 = null;
        double[] doubleArray16 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray22 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray28 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray34 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray40 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray46 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray47 = new double[][] { doubleArray16, doubleArray22, doubleArray28, doubleArray34, doubleArray40, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray47);
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray83 = new double[][] { doubleArray61, doubleArray68, doubleArray75, doubleArray82 };
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray83);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray83);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray48, doubleArray83);
        double[][] doubleArray90 = new double[][] {};
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray90);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray83, doubleArray91);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 0, doubleArray91);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 0, doubleArray93);
        java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) -1, doubleArray2, doubleArray93);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList96 = com.thealgorithms.maths.Gaussian.gaussian((int) '#', doubleList95);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleList92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleList95);
    }

    @Test
    public void test5288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5288");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray45);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray45);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 100, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) '#', doubleArray51);
        java.lang.Class<?> wildcardClass53 = doubleArray52.getClass();
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test5289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5289");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray35);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray37);
        double[] doubleArray51 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray73 = new double[][] { doubleArray51, doubleArray58, doubleArray65, doubleArray72 };
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray37, doubleArray74);
        java.lang.Class<?> wildcardClass78 = doubleArray74.getClass();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleList77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test5290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5290");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 100, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 0, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 1, doubleArray47);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(10, (int) 'a', doubleArray47);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
    }

    @Test
    public void test5291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5291");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 100, doubleArray47);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (-1), doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 1, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) 'a', doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray51);
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray91 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray92 = new double[][] { doubleArray70, doubleArray77, doubleArray84, doubleArray91 };
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray93);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray94);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) -1, doubleArray95);
        double[][] doubleArray97 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) '4', doubleArray96);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList98 = com.thealgorithms.maths.Gaussian.valueOfGaussian(100, doubleArray51, doubleArray97);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertNotNull(doubleArray97);
    }

    @Test
    public void test5292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5292");
        double[][] doubleArray4 = null;
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray42);
        java.util.ArrayList<java.lang.Double> doubleList46 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray4, doubleArray45);
        java.util.ArrayList<java.lang.Double> doubleList47 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList46);
        java.util.ArrayList<java.lang.Double> doubleList48 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList46);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList49 = com.thealgorithms.maths.Gaussian.gaussian(10, doubleList46);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleList46);
        org.junit.Assert.assertNotNull(doubleList47);
        org.junit.Assert.assertNotNull(doubleList48);
    }

    @Test
    public void test5293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5293");
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray46 = new double[][] { doubleArray24, doubleArray31, doubleArray38, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 0, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 100, doubleArray50);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 0, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (short) 10, doubleArray52);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) 'a', (int) (byte) 10, doubleArray54);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
    }

    @Test
    public void test5294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5294");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray37);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray39, doubleArray72);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray39);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleList75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
    }

    @Test
    public void test5295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5295");
        double[] doubleArray18 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray24 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray30 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray36 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray42 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray48 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray49 = new double[][] { doubleArray18, doubleArray24, doubleArray30, doubleArray36, doubleArray42, doubleArray48 };
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray49);
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray85 = new double[][] { doubleArray63, doubleArray70, doubleArray77, doubleArray84 };
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray50, doubleArray86);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray50);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 100, doubleArray90);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 0, doubleArray90);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(10, (-1), doubleArray93);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[NaN, NaN, NaN, NaN, NaN]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
    }

    @Test
    public void test5296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5296");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray35);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray70 = new double[][] { doubleArray48, doubleArray55, doubleArray62, doubleArray69 };
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray70);
        double[][] doubleArray72 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray70);
        java.util.ArrayList<java.lang.Double> doubleList73 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray37, doubleArray70);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList73);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 100, doubleList73);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleList73);
        org.junit.Assert.assertNotNull(doubleList74);
    }

    @Test
    public void test5297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5297");
        double[] doubleArray18 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray24 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray30 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray36 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray42 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray48 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray49 = new double[][] { doubleArray18, doubleArray24, doubleArray30, doubleArray36, doubleArray42, doubleArray48 };
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray49);
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray85 = new double[][] { doubleArray63, doubleArray70, doubleArray77, doubleArray84 };
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray50, doubleArray86);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray50);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) 100, doubleArray91);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray91);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) '#', doubleArray91);
        java.lang.Class<?> wildcardClass95 = doubleArray91.getClass();
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test5298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5298");
        double[][] doubleArray2 = null;
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray44);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray44, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 1, doubleArray83);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray83);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian((-1), doubleArray2, doubleArray86);
        double[][] doubleArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian(100, doubleArray86, doubleArray88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
    }

    @Test
    public void test5299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5299");
        double[] doubleArray20 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray26 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray32 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray38 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray44 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray50 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray51 = new double[][] { doubleArray20, doubleArray26, doubleArray32, doubleArray38, doubleArray44, doubleArray50 };
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray51);
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray86 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray87 = new double[][] { doubleArray65, doubleArray72, doubleArray79, doubleArray86 };
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray88);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray52, doubleArray88);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray52);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) 100, doubleArray93);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray93);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (-1), doubleArray95);
        double[][] doubleArray97 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 100, doubleArray95);
        java.lang.Class<?> wildcardClass98 = doubleArray97.getClass();
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test5300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5300");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray46);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray46, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 100, doubleArray46);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) '4', doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray83);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
    }

    @Test
    public void test5301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5301");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray44);
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray85 = new double[][] { doubleArray63, doubleArray70, doubleArray77, doubleArray84 };
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray85);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray87);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) -1, doubleArray89);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray44, doubleArray89);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList91);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList91);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList93);
        java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList94);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList96 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList94);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleList92);
        org.junit.Assert.assertNotNull(doubleList93);
        org.junit.Assert.assertNotNull(doubleList94);
        org.junit.Assert.assertNotNull(doubleList95);
    }

    @Test
    public void test5302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5302");
        double[] doubleArray16 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray22 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray28 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray34 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray40 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray46 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray47 = new double[][] { doubleArray16, doubleArray22, doubleArray28, doubleArray34, doubleArray40, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray47);
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray83 = new double[][] { doubleArray61, doubleArray68, doubleArray75, doubleArray82 };
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray83);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray83);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray48, doubleArray83);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray83);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) '#', doubleArray83);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 0, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (short) 10, doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
    }

    @Test
    public void test5303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5303");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray43);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray43, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (-1), doubleArray43);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) 'a', doubleArray43);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(100, (int) ' ', doubleArray43);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, -9999.0, 0.0, 9999.0, -969903.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
    }

    @Test
    public void test5304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5304");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 100, doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray46);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (byte) 100, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) 'a', doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) 'a', doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
    }

    @Test
    public void test5305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5305");
        java.lang.Double[] doubleArray10 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList11 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList11, doubleArray10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList16);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) ' ', doubleList17);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
    }

    @Test
    public void test5306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5306");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray45);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray45);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray49);
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray85 = new double[][] { doubleArray63, doubleArray70, doubleArray77, doubleArray84 };
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 100, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 1, doubleArray50, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList89);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList89);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.gaussian(10, doubleList89);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleList91);
    }

    @Test
    public void test5307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5307");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 100, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 0, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 0, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 10, doubleArray48);
        java.lang.Class<?> wildcardClass50 = doubleArray49.getClass();
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test5308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5308");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 0, doubleArray42);
        double[][] doubleArray44 = null;
        java.util.ArrayList<java.lang.Double> doubleList45 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray43, doubleArray44);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) 'a', 1, doubleArray43);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleList45);
    }

    @Test
    public void test5309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5309");
        java.lang.Double[] doubleArray11 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList12 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList12, doubleArray11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList19);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList21 = com.thealgorithms.maths.Gaussian.gaussian((-1), doubleList19);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
    }

    @Test
    public void test5310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5310");
        double[] doubleArray16 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray22 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray28 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray34 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray40 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray46 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray47 = new double[][] { doubleArray16, doubleArray22, doubleArray28, doubleArray34, doubleArray40, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray47);
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray83 = new double[][] { doubleArray61, doubleArray68, doubleArray75, doubleArray82 };
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray48, doubleArray84);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray48);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) ' ', doubleArray48);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 0, doubleArray89);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 100, (int) (byte) 0, doubleArray89);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[NaN, NaN, NaN, NaN, NaN]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
    }

    @Test
    public void test5311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5311");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray41, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList81);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList81);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList83);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList83);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleList84);
    }

    @Test
    public void test5312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5312");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray45);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray47, doubleArray80);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray47);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 100, doubleArray47);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '4', doubleArray47);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 100, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '#', doubleArray86);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 10, (int) (byte) 100, doubleArray88);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
    }

    @Test
    public void test5313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5313");
        double[][] doubleArray5 = null;
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray43);
        java.util.ArrayList<java.lang.Double> doubleList47 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray5, doubleArray46);
        java.util.ArrayList<java.lang.Double> doubleList48 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList47);
        java.util.ArrayList<java.lang.Double> doubleList49 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList47);
        java.util.ArrayList<java.lang.Double> doubleList50 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList47);
        java.util.ArrayList<java.lang.Double> doubleList51 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList47);
        java.lang.Class<?> wildcardClass52 = doubleList47.getClass();
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleList47);
        org.junit.Assert.assertNotNull(doubleList48);
        org.junit.Assert.assertNotNull(doubleList49);
        org.junit.Assert.assertNotNull(doubleList50);
        org.junit.Assert.assertNotNull(doubleList51);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test5314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5314");
        double[][] doubleArray1 = null;
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 100, doubleArray46);
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray85 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray86 = new double[][] { doubleArray64, doubleArray71, doubleArray78, doubleArray85 };
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray87);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray87);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray90);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.valueOfGaussian((-1), doubleArray47, doubleArray90);
        double[][] doubleArray93 = null;
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) -1, doubleArray90, doubleArray93);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 100, doubleArray1, doubleArray90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleList92);
        org.junit.Assert.assertNotNull(doubleList94);
    }

    @Test
    public void test5315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5315");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray40);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray40);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) '#', doubleArray75);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination(100, (int) (byte) 100, doubleArray75);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
    }

    @Test
    public void test5316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5316");
        double[][] doubleArray3 = null;
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray43);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray83);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray83);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray45, doubleArray83);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 0, doubleArray83);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (short) 10, doubleArray89);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) -1, doubleArray3, doubleArray89);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList91);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.gaussian((int) '4', doubleList91);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleList92);
    }

    @Test
    public void test5317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5317");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 0, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray40);
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray85 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray86 = new double[][] { doubleArray64, doubleArray71, doubleArray78, doubleArray85 };
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray87);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) 'a', doubleArray89);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) ' ', doubleArray89);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray89);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (byte) 100, doubleArray93);
        java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 1, doubleArray40, doubleArray94);
        java.lang.Class<?> wildcardClass96 = doubleArray94.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleList95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test5318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5318");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray44);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray83);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray44, doubleArray83);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray83);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) 'a', doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, 10, doubleArray86);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) 'a', doubleArray86);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 100, doubleArray89);
        double[][] doubleArray91 = null;
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray90, doubleArray91);
        java.lang.Class<?> wildcardClass93 = doubleList92.getClass();
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleList92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test5319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5319");
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray47 = new double[][] { doubleArray25, doubleArray32, doubleArray39, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray47);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray49);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray52);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray52);
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray91 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray92 = new double[][] { doubleArray70, doubleArray77, doubleArray84, doubleArray91 };
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray93);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 100, doubleArray93);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 0, doubleArray95);
        java.util.ArrayList<java.lang.Double> doubleList97 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 1, doubleArray55, doubleArray96);
        java.util.ArrayList<java.lang.Double> doubleList98 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList97);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList99 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 100, doubleList97);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertNotNull(doubleList97);
        org.junit.Assert.assertNotNull(doubleList98);
    }

    @Test
    public void test5320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5320");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray68 = new double[][] { doubleArray46, doubleArray53, doubleArray60, doubleArray67 };
        double[][] doubleArray69 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray68);
        java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray37, doubleArray68);
        java.util.ArrayList<java.lang.Double> doubleList71 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList70);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList71);
        java.util.ArrayList<java.lang.Double> doubleList73 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList72);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList73);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.gaussian((int) ' ', doubleList73);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleList70);
        org.junit.Assert.assertNotNull(doubleList71);
        org.junit.Assert.assertNotNull(doubleList72);
        org.junit.Assert.assertNotNull(doubleList73);
        org.junit.Assert.assertNotNull(doubleList74);
    }

    @Test
    public void test5321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5321");
        java.lang.Double[] doubleArray10 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList11 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList11, doubleArray10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList16);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList16);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
    }

    @Test
    public void test5322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5322");
        java.lang.Double[] doubleArray11 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList12 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList12, doubleArray11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList18);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList18);
        java.lang.Class<?> wildcardClass21 = doubleList18.getClass();
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test5323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5323");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList9);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList14);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
    }

    @Test
    public void test5324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5324");
        double[] doubleArray16 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray22 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray28 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray34 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray40 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray46 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray47 = new double[][] { doubleArray16, doubleArray22, doubleArray28, doubleArray34, doubleArray40, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray47);
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray83 = new double[][] { doubleArray61, doubleArray68, doubleArray75, doubleArray82 };
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray48, doubleArray84);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 1, doubleArray48);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 0, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (short) 100, doubleArray89);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 10, (int) (short) 1, doubleArray90);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[NaN, NaN, NaN, NaN, NaN]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
    }

    @Test
    public void test5325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5325");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray36);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray36);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray82);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (-1), doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) -1, doubleArray85);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 1, doubleArray36, doubleArray85);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 100, doubleList87);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
    }

    @Test
    public void test5326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5326");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray42, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) 'a', doubleArray75);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 100, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray78);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', (int) (short) -1, doubleArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
    }

    @Test
    public void test5327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5327");
        double[] doubleArray12 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray18 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray24 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray30 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray36 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray42 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray43 = new double[][] { doubleArray12, doubleArray18, doubleArray24, doubleArray30, doubleArray36, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray44, doubleArray80);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray80);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 10, doubleArray84);
        java.lang.Class<?> wildcardClass86 = doubleArray84.getClass();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test5328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5328");
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray47 = new double[][] { doubleArray25, doubleArray32, doubleArray39, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray47);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray49, doubleArray82);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (short) 100, doubleArray49);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 0, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) 'a', doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 0, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) -1, doubleArray89);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', (int) (short) 100, doubleArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
    }

    @Test
    public void test5329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5329");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, 0, doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) '#', doubleArray46);
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray89 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray90 = new double[][] { doubleArray68, doubleArray75, doubleArray82, doubleArray89 };
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray90);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray92);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray94);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray95);
        double[][] doubleArray97 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray96);
        java.util.ArrayList<java.lang.Double> doubleList98 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray46, doubleArray96);
        java.lang.Class<?> wildcardClass99 = doubleArray96.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertNotNull(doubleList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test5330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5330");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray39);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray39, doubleArray78);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray39);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 0, doubleArray39);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (short) 0, doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
    }

    @Test
    public void test5331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5331");
        double[] doubleArray10 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray16 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray22 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray28 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray34 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray40 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray41 = new double[][] { doubleArray10, doubleArray16, doubleArray22, doubleArray28, doubleArray34, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray85 = new double[][] { doubleArray63, doubleArray70, doubleArray77, doubleArray84 };
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray86);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray86);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray86);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray91);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray41, doubleArray92);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList93);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.gaussian((int) ' ', doubleList93);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleList93);
        org.junit.Assert.assertNotNull(doubleList94);
    }

    @Test
    public void test5332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5332");
        double[][] doubleArray2 = null;
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray42);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray42, doubleArray81);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray42);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 0, doubleArray85);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray2, doubleArray86);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.gaussian((int) '4', doubleList87);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
    }

    @Test
    public void test5333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5333");
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray51 = new double[][] { doubleArray29, doubleArray36, doubleArray43, doubleArray50 };
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray51);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray53);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray53);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray55);
        double[][] doubleArray57 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray56);
        double[][] doubleArray58 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray56);
        double[][] doubleArray59 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray56);
        double[][] doubleArray60 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 10, doubleArray56);
        double[][] doubleArray63 = new double[][] {};
        double[][] doubleArray64 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray63);
        java.util.ArrayList<java.lang.Double> doubleList65 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray56, doubleArray63);
        double[][] doubleArray66 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '4', doubleArray63);
        double[][] doubleArray67 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (short) 10, doubleArray66);
        java.lang.Class<?> wildcardClass68 = doubleArray67.getClass();
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertNotNull(doubleList65);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test5334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5334");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray46);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray46);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray51);
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray86 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray87 = new double[][] { doubleArray65, doubleArray72, doubleArray79, doubleArray86 };
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray88);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray51, doubleArray88);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 100, doubleArray51);
        java.lang.Class<?> wildcardClass93 = doubleArray92.getClass();
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test5335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5335");
        java.lang.Double[] doubleArray14 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList15 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList15, doubleArray14);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList21 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList22 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList23 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList22);
        java.util.ArrayList<java.lang.Double> doubleList24 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList22);
        java.util.ArrayList<java.lang.Double> doubleList25 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList24);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList26 = com.thealgorithms.maths.Gaussian.gaussian((-1), doubleList24);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(doubleList21);
        org.junit.Assert.assertNotNull(doubleList22);
        org.junit.Assert.assertNotNull(doubleList23);
        org.junit.Assert.assertNotNull(doubleList24);
        org.junit.Assert.assertNotNull(doubleList25);
    }

    @Test
    public void test5336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5336");
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray48 = new double[][] { doubleArray26, doubleArray33, doubleArray40, doubleArray47 };
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray50);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray53);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray54);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 1, doubleArray55);
        double[][] doubleArray57 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 10, doubleArray55);
        double[][] doubleArray58 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) -1, doubleArray57);
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(doubleArray58);
    }

    @Test
    public void test5337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5337");
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray46 = new double[][] { doubleArray24, doubleArray31, doubleArray38, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray47);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) 'a', doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 0, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) -1, doubleArray51);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 1, doubleArray51);
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray86 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray87 = new double[][] { doubleArray65, doubleArray72, doubleArray79, doubleArray86 };
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray88);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) -1, doubleArray51, doubleArray89);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian(10, doubleList90);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleList90);
    }

    @Test
    public void test5338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5338");
        double[][] doubleArray6 = null;
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray44);
        java.util.ArrayList<java.lang.Double> doubleList48 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray6, doubleArray47);
        java.util.ArrayList<java.lang.Double> doubleList49 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList48);
        java.util.ArrayList<java.lang.Double> doubleList50 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList48);
        java.util.ArrayList<java.lang.Double> doubleList51 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList48);
        java.util.ArrayList<java.lang.Double> doubleList52 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList51);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList53 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 10, doubleList51);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleList48);
        org.junit.Assert.assertNotNull(doubleList49);
        org.junit.Assert.assertNotNull(doubleList50);
        org.junit.Assert.assertNotNull(doubleList51);
        org.junit.Assert.assertNotNull(doubleList52);
    }

    @Test
    public void test5339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5339");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 0, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) '#', doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
    }

    @Test
    public void test5340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5340");
        double[][] doubleArray2 = null;
        double[][] doubleArray3 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) '#', doubleArray2);
        org.junit.Assert.assertNull(doubleArray3);
    }

    @Test
    public void test5341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5341");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray67 = new double[][] { doubleArray45, doubleArray52, doubleArray59, doubleArray66 };
        double[][] doubleArray68 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray67);
        java.util.ArrayList<java.lang.Double> doubleList69 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray36, doubleArray67);
        double[][] doubleArray70 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 1, doubleArray36);
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) '4', doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleList69);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
    }

    @Test
    public void test5342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5342");
        java.lang.Double[] doubleArray13 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList14 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList14, doubleArray13);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList21 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList22 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList21);
        java.util.ArrayList<java.lang.Double> doubleList23 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList21);
        java.util.ArrayList<java.lang.Double> doubleList24 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList23);
        java.lang.Class<?> wildcardClass25 = doubleList24.getClass();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(doubleList21);
        org.junit.Assert.assertNotNull(doubleList22);
        org.junit.Assert.assertNotNull(doubleList23);
        org.junit.Assert.assertNotNull(doubleList24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test5343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5343");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray44);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray44, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) 'a', doubleArray77);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray77);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 10, doubleArray77);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) '4', doubleArray81);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(100, 100, doubleArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleList78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
    }

    @Test
    public void test5344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5344");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray42, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 1, doubleArray42);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 1, doubleArray42);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) 'a', doubleArray78);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 10, 0, doubleArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
    }

    @Test
    public void test5345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5345");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 100, doubleArray45);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 0, doubleArray83);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 1, doubleArray46, doubleArray83);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) 'a', doubleArray83);
        java.lang.Class<?> wildcardClass87 = doubleArray86.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test5346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5346");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray42);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray42);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray46, doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList85);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.gaussian((int) '#', doubleList85);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleList86);
    }

    @Test
    public void test5347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5347");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray42);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray42, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList82);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList82);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList82);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList82);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList82);
        java.lang.Class<?> wildcardClass88 = doubleList87.getClass();
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test5348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5348");
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray47 = new double[][] { doubleArray25, doubleArray32, doubleArray39, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray47);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray49);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray51);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 100, doubleArray53);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray53);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (-1), doubleArray53);
        double[][] doubleArray57 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList58 = com.thealgorithms.maths.Gaussian.valueOfGaussian(10, doubleArray53, doubleArray57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
    }

    @Test
    public void test5349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5349");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 10, doubleArray44);
        java.lang.Class<?> wildcardClass47 = doubleArray46.getClass();
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test5350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5350");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (-1), doubleArray73);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 0, doubleArray73);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) 10, doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
    }

    @Test
    public void test5351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5351");
        java.lang.Double[] doubleArray11 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList12 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList12, doubleArray11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList18);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) '#', doubleList19);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
    }

    @Test
    public void test5352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5352");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 10, doubleArray41);
        double[][] doubleArray45 = null;
        java.util.ArrayList<java.lang.Double> doubleList46 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray41, doubleArray45);
        java.util.ArrayList<java.lang.Double> doubleList47 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList46);
        java.util.ArrayList<java.lang.Double> doubleList48 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList47);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList49 = com.thealgorithms.maths.Gaussian.gaussian((int) '#', doubleList47);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleList46);
        org.junit.Assert.assertNotNull(doubleList47);
        org.junit.Assert.assertNotNull(doubleList48);
    }

    @Test
    public void test5353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5353");
        double[][] doubleArray4 = null;
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray42);
        java.util.ArrayList<java.lang.Double> doubleList46 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray4, doubleArray45);
        java.util.ArrayList<java.lang.Double> doubleList47 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList46);
        java.util.ArrayList<java.lang.Double> doubleList48 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList47);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList49 = com.thealgorithms.maths.Gaussian.gaussian((int) ' ', doubleList47);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleList46);
        org.junit.Assert.assertNotNull(doubleList47);
        org.junit.Assert.assertNotNull(doubleList48);
    }

    @Test
    public void test5354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5354");
        double[] doubleArray16 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray22 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray28 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray34 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray40 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray46 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray47 = new double[][] { doubleArray16, doubleArray22, doubleArray28, doubleArray34, doubleArray40, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray47);
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray83 = new double[][] { doubleArray61, doubleArray68, doubleArray75, doubleArray82 };
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray48, doubleArray84);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray48);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) ' ', doubleArray48);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (byte) 10, doubleArray48);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) -1, doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
    }

    @Test
    public void test5355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5355");
        double[][] doubleArray2 = null;
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray40);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray75 = new double[][] { doubleArray53, doubleArray60, doubleArray67, doubleArray74 };
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray75);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray42, doubleArray75);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray42);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 0, doubleArray42);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray2, doubleArray42);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList81);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleList78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
    }

    @Test
    public void test5356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5356");
        java.util.ArrayList<java.lang.Double> doubleList3 = null;
        java.util.ArrayList<java.lang.Double> doubleList4 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList3);
        java.util.ArrayList<java.lang.Double> doubleList5 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList4);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList6 = com.thealgorithms.maths.Gaussian.gaussian((int) 'a', doubleList4);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleList4);
        org.junit.Assert.assertNotNull(doubleList5);
    }

    @Test
    public void test5357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5357");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray75 = new double[][] { doubleArray53, doubleArray60, doubleArray67, doubleArray74 };
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray75);
        java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray44, doubleArray75);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray75);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray75);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 1, doubleArray75);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) ' ', doubleArray80);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 1, doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleList77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
    }

    @Test
    public void test5358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5358");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 10, doubleArray41);
        double[][] doubleArray45 = null;
        java.util.ArrayList<java.lang.Double> doubleList46 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray41, doubleArray45);
        java.util.ArrayList<java.lang.Double> doubleList47 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList46);
        java.util.ArrayList<java.lang.Double> doubleList48 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList47);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList49 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList48);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleList46);
        org.junit.Assert.assertNotNull(doubleList47);
        org.junit.Assert.assertNotNull(doubleList48);
    }

    @Test
    public void test5359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5359");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray43);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray43);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 10, doubleArray47);
        java.lang.Class<?> wildcardClass50 = doubleArray49.getClass();
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test5360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5360");
        double[] doubleArray19 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray25 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray31 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray37 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray43 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray49 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray50 = new double[][] { doubleArray19, doubleArray25, doubleArray31, doubleArray37, doubleArray43, doubleArray49 };
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray50);
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray85 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray86 = new double[][] { doubleArray64, doubleArray71, doubleArray78, doubleArray85 };
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray51, doubleArray87);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray87);
        double[][] doubleArray92 = null;
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray91, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) '4', doubleArray91);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 100, doubleArray91);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray95);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray97 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '4', 10, doubleArray96);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleList93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleArray96);
    }

    @Test
    public void test5361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5361");
        double[] doubleArray3 = new double[] {};
        double[] doubleArray4 = new double[] {};
        double[] doubleArray5 = new double[] {};
        double[][] doubleArray6 = new double[][] { doubleArray3, doubleArray4, doubleArray5 };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray47);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (-1), doubleArray49);
        java.util.ArrayList<java.lang.Double> doubleList51 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray6, doubleArray49);
        java.util.ArrayList<java.lang.Double> doubleList52 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList51);
        java.util.ArrayList<java.lang.Double> doubleList53 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList52);
        java.lang.Class<?> wildcardClass54 = doubleList52.getClass();
        org.junit.Assert.assertNotNull(doubleArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray3), "[]");
        org.junit.Assert.assertNotNull(doubleArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray4), "[]");
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray5), "[]");
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleList51);
        org.junit.Assert.assertNotNull(doubleList52);
        org.junit.Assert.assertNotNull(doubleList53);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test5362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5362");
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray47 = new double[][] { doubleArray25, doubleArray32, doubleArray39, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) '4', doubleArray50);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, 0, doubleArray50);
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray89 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray90 = new double[][] { doubleArray68, doubleArray75, doubleArray82, doubleArray89 };
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray91);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray91);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray91);
        java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray50, doubleArray91);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray91);
        double[][] doubleArray97 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (byte) 0, doubleArray91);
        double[][] doubleArray98 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) '4', doubleArray97);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleList95);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertNotNull(doubleArray98);
    }

    @Test
    public void test5363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5363");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 100, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 0, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 1, doubleArray47);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 10, (int) (byte) -1, doubleArray48);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
    }

    @Test
    public void test5364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5364");
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray49 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray50 = new double[][] { doubleArray28, doubleArray35, doubleArray42, doubleArray49 };
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray50);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray52);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray54);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray54);
        double[][] doubleArray57 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 100, doubleArray56);
        double[][] doubleArray58 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray56);
        double[][] doubleArray59 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (-1), doubleArray56);
        double[][] doubleArray60 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray59);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray61 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) ' ', 100, doubleArray59);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertNotNull(doubleArray60);
    }

    @Test
    public void test5365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5365");
        double[][] doubleArray1 = null;
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray46);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray46, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 100, doubleArray46);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray82);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) '#', doubleArray82);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) '4', doubleArray1, doubleArray85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
    }

    @Test
    public void test5366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5366");
        double[][] doubleArray2 = null;
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray49 = new double[][] { doubleArray27, doubleArray34, doubleArray41, doubleArray48 };
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray49);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray51);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray53);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray54);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray54);
        double[][] doubleArray57 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray54);
        double[][] doubleArray58 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 10, doubleArray54);
        java.util.ArrayList<java.lang.Double> doubleList59 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) -1, doubleArray2, doubleArray58);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList60 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList59);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertNotNull(doubleList59);
    }

    @Test
    public void test5367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5367");
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray47 = new double[][] { doubleArray25, doubleArray32, doubleArray39, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray47);
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray83 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray84 = new double[][] { doubleArray62, doubleArray69, doubleArray76, doubleArray83 };
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray47, doubleArray86);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray47);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray89);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 0, doubleArray89);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 100, doubleArray89);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (byte) 100, doubleArray89);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
    }

    @Test
    public void test5368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5368");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) 'a', doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray46);
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray89 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray90 = new double[][] { doubleArray68, doubleArray75, doubleArray82, doubleArray89 };
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray90);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray92);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray94);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray95);
        double[][] doubleArray97 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray96);
        java.util.ArrayList<java.lang.Double> doubleList98 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray46, doubleArray97);
        java.lang.Class<?> wildcardClass99 = doubleList98.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertNotNull(doubleArray97);
        org.junit.Assert.assertNotNull(doubleList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test5369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5369");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray40);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) ' ', doubleArray42);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '4', 0, doubleArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
    }

    @Test
    public void test5370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5370");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 10, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) '4', doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) ' ', doubleArray43);
        java.lang.Class<?> wildcardClass47 = doubleArray46.getClass();
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test5371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5371");
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList10);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList16);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
    }

    @Test
    public void test5372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5372");
        double[][] doubleArray6 = null;
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray44);
        java.util.ArrayList<java.lang.Double> doubleList48 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray6, doubleArray47);
        java.util.ArrayList<java.lang.Double> doubleList49 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList48);
        java.util.ArrayList<java.lang.Double> doubleList50 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList49);
        java.util.ArrayList<java.lang.Double> doubleList51 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList49);
        java.util.ArrayList<java.lang.Double> doubleList52 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList51);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList53 = com.thealgorithms.maths.Gaussian.gaussian((int) '4', doubleList52);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleList48);
        org.junit.Assert.assertNotNull(doubleList49);
        org.junit.Assert.assertNotNull(doubleList50);
        org.junit.Assert.assertNotNull(doubleList51);
        org.junit.Assert.assertNotNull(doubleList52);
    }

    @Test
    public void test5373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5373");
        java.lang.Double[] doubleArray7 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList8 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList8, doubleArray7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList8);
        java.lang.Class<?> wildcardClass14 = doubleList8.getClass();
        org.junit.Assert.assertNotNull(doubleArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test5374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5374");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[] doubleArray51 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray73 = new double[][] { doubleArray51, doubleArray58, doubleArray65, doubleArray72 };
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray73);
        java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray41, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray41);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 0, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray77);
        double[][] doubleArray79 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 1, doubleArray77, doubleArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleList75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
    }

    @Test
    public void test5375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5375");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) 'a', doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 100, doubleArray44);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) 'a', (int) '#', doubleArray44);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
    }

    @Test
    public void test5376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5376");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray36);
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray68 = new double[][] { doubleArray46, doubleArray53, doubleArray60, doubleArray67 };
        double[][] doubleArray69 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray68);
        java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray36, doubleArray69);
        java.util.ArrayList<java.lang.Double> doubleList71 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList70);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 100, doubleList70);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertNotNull(doubleList70);
        org.junit.Assert.assertNotNull(doubleList71);
    }

    @Test
    public void test5377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5377");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 100, doubleArray45);
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray85 = new double[][] { doubleArray63, doubleArray70, doubleArray77, doubleArray84 };
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray86);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray86);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray89);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.valueOfGaussian((-1), doubleArray46, doubleArray89);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', 10, doubleArray46);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleList91);
    }

    @Test
    public void test5378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5378");
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray47 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray48 = new double[][] { doubleArray26, doubleArray33, doubleArray40, doubleArray47 };
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray49);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) 'a', doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 0, doubleArray53);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, 10, doubleArray54);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (short) 1, doubleArray54);
        double[][] doubleArray57 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 1, doubleArray54);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray58 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '4', (int) (short) 1, doubleArray54);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray47), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
    }

    @Test
    public void test5379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5379");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray38);
        double[] doubleArray51 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray73 = new double[][] { doubleArray51, doubleArray58, doubleArray65, doubleArray72 };
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray73);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray40, doubleArray73);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray40);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, 1, doubleArray40);
        double[][] doubleArray79 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 100, doubleArray78, doubleArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
    }

    @Test
    public void test5380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5380");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray40);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray40);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) '#', doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray75);
        java.lang.Class<?> wildcardClass78 = doubleArray77.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test5381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5381");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 100, doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 0, doubleArray46);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 1, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (-1), doubleArray49);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 100, 1, doubleArray49);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
    }

    @Test
    public void test5382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5382");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray45);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray45, doubleArray84);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray45);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray87);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 0, doubleArray87);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 0, doubleArray87);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 10, (int) (byte) 100, doubleArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
    }

    @Test
    public void test5383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5383");
        java.lang.Double[] doubleArray11 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList12 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList12, doubleArray11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList16);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList17);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList17);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList19);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList21 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList20);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
    }

    @Test
    public void test5384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5384");
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray46 = new double[][] { doubleArray24, doubleArray31, doubleArray38, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray51);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray51);
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray88 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray89 = new double[][] { doubleArray67, doubleArray74, doubleArray81, doubleArray88 };
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray89);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray91);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray54, doubleArray91);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList93);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleList93);
        org.junit.Assert.assertNotNull(doubleList94);
    }

    @Test
    public void test5385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5385");
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray54 = new double[][] { doubleArray32, doubleArray39, doubleArray46, doubleArray53 };
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray54);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray55);
        double[][] doubleArray57 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray55);
        double[][] doubleArray58 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray55);
        double[][] doubleArray59 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray55);
        double[][] doubleArray60 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray59);
        double[][] doubleArray61 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 100, doubleArray60);
        double[][] doubleArray62 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray60);
        double[][] doubleArray63 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 1, doubleArray62);
        double[][] doubleArray64 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) -1, doubleArray62);
        double[][] doubleArray65 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) 'a', doubleArray62);
        double[][] doubleArray66 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 10, doubleArray65);
        double[][] doubleArray67 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 0, doubleArray65);
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertNotNull(doubleArray67);
    }

    @Test
    public void test5386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5386");
        double[] doubleArray10 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray16 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray22 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray28 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray34 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray40 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray41 = new double[][] { doubleArray10, doubleArray16, doubleArray22, doubleArray28, doubleArray34, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray42, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList81);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList82);
        java.lang.Class<?> wildcardClass84 = doubleList82.getClass();
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test5387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5387");
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray46 = new double[][] { doubleArray24, doubleArray31, doubleArray38, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray51);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 0, doubleArray53);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 10, doubleArray54);
        java.lang.Class<?> wildcardClass56 = doubleArray54.getClass();
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test5388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5388");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) 'a', doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) -1, doubleArray45);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 100, doubleArray48);
        java.lang.Class<?> wildcardClass50 = doubleArray48.getClass();
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test5389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5389");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray44);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray44, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray44);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) '#', doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '4', doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 10, doubleArray80);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) 'a', (int) (byte) 1, doubleArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleList78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
    }

    @Test
    public void test5390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5390");
        double[] doubleArray10 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray16 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray22 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray28 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray34 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray40 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray41 = new double[][] { doubleArray10, doubleArray16, doubleArray22, doubleArray28, doubleArray34, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray77);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray77);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray42, doubleArray77);
        double[][] doubleArray82 = null;
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray42, doubleArray82);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList83);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList83);
    }

    @Test
    public void test5391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5391");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray42);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray42, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList82);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList82);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList82);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList82);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList82);
        java.lang.Class<?> wildcardClass88 = doubleList82.getClass();
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test5392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5392");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray44);
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray85 = new double[][] { doubleArray63, doubleArray70, doubleArray77, doubleArray84 };
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray85);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray87);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) -1, doubleArray89);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray44, doubleArray89);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList91);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList91);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList93);
        java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList93);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList96 = com.thealgorithms.maths.Gaussian.gaussian(10, doubleList95);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleList92);
        org.junit.Assert.assertNotNull(doubleList93);
        org.junit.Assert.assertNotNull(doubleList94);
        org.junit.Assert.assertNotNull(doubleList95);
    }

    @Test
    public void test5393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5393");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 10, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 1, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
    }

    @Test
    public void test5394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5394");
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray46 = new double[][] { doubleArray24, doubleArray31, doubleArray38, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 100, doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 0, doubleArray48);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) 'a', doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 0, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 0, doubleArray52);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
    }

    @Test
    public void test5395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5395");
        double[] doubleArray13 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray19 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray25 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray31 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray37 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray43 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray44 = new double[][] { doubleArray13, doubleArray19, doubleArray25, doubleArray31, doubleArray37, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray44);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray45, doubleArray81);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray45);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray85);
        double[][] doubleArray87 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 1, doubleArray86, doubleArray87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
    }

    @Test
    public void test5396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5396");
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray51 = new double[][] { doubleArray29, doubleArray36, doubleArray43, doubleArray50 };
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray52);
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray83 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray84 = new double[][] { doubleArray62, doubleArray69, doubleArray76, doubleArray83 };
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray52, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) 'a', doubleArray85);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray85);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 10, doubleArray85);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (short) 1, doubleArray85);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray85);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 1, doubleArray85);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) '#', doubleArray85);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) '4', doubleArray93);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray94);
        java.lang.Class<?> wildcardClass96 = doubleArray94.getClass();
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test5397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5397");
        double[] doubleArray13 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray19 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray25 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray31 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray37 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray43 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray44 = new double[][] { doubleArray13, doubleArray19, doubleArray25, doubleArray31, doubleArray37, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray44);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray80);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray45, doubleArray80);
        double[][] doubleArray87 = new double[][] {};
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (-1), doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray80, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 0, doubleArray88);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) '4', doubleArray90);
        java.lang.Class<?> wildcardClass92 = doubleArray90.getClass();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test5398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5398");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray41, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) ' ', doubleArray41);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 10, doubleArray82);
        java.lang.Class<?> wildcardClass84 = doubleArray83.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test5399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5399");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray35);
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray67 = new double[][] { doubleArray45, doubleArray52, doubleArray59, doubleArray66 };
        double[][] doubleArray68 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray67);
        java.util.ArrayList<java.lang.Double> doubleList69 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray35, doubleArray68);
        java.util.ArrayList<java.lang.Double> doubleList70 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList69);
        java.lang.Class<?> wildcardClass71 = doubleList69.getClass();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertNotNull(doubleList69);
        org.junit.Assert.assertNotNull(doubleList70);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test5400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5400");
        double[] doubleArray13 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray19 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray25 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray31 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray37 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray43 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray44 = new double[][] { doubleArray13, doubleArray19, doubleArray25, doubleArray31, doubleArray37, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray44);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray45, doubleArray81);
        double[] doubleArray87 = new double[] {};
        double[][] doubleArray88 = new double[][] { doubleArray87 };
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray88);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray81, doubleArray88);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) 100, doubleArray81);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) '#', doubleArray91);
        java.lang.Class<?> wildcardClass93 = doubleArray92.getClass();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test5401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5401");
        double[] doubleArray12 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray18 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray24 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray30 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray36 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray42 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray43 = new double[][] { doubleArray12, doubleArray18, doubleArray24, doubleArray30, doubleArray36, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray79);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray44, doubleArray79);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray79);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) '#', doubleArray79);
        java.lang.Class<?> wildcardClass86 = doubleArray79.getClass();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test5402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5402");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 0, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 100, doubleArray45);
        double[][] doubleArray48 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList49 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 100, doubleArray45, doubleArray48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
    }

    @Test
    public void test5403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5403");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) '4', doubleArray47);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, 0, doubleArray47);
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray86 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray87 = new double[][] { doubleArray65, doubleArray72, doubleArray79, doubleArray86 };
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray88);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray88);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray47, doubleArray88);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray88);
        double[][] doubleArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 100, doubleArray88, doubleArray94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray86), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleList92);
        org.junit.Assert.assertNotNull(doubleArray93);
    }

    @Test
    public void test5404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5404");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 100, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 0, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 1, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 0, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (-1), doubleArray47);
        java.lang.Class<?> wildcardClass50 = doubleArray49.getClass();
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test5405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5405");
        double[] doubleArray19 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray25 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray31 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray37 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray43 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray49 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray50 = new double[][] { doubleArray19, doubleArray25, doubleArray31, doubleArray37, doubleArray43, doubleArray49 };
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray50);
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray85 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray86 = new double[][] { doubleArray64, doubleArray71, doubleArray78, doubleArray85 };
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray51, doubleArray87);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray87);
        double[][] doubleArray92 = null;
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray91, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 10, doubleArray91);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) -1, doubleArray91);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) 1, doubleArray91);
        double[][] doubleArray97 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 1, doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleList93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertNotNull(doubleArray97);
    }

    @Test
    public void test5406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5406");
        java.lang.Double[] doubleArray5 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList6 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList6, doubleArray5);
        java.util.ArrayList<java.lang.Double> doubleList8 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList8);
        java.lang.Class<?> wildcardClass10 = doubleList9.getClass();
        org.junit.Assert.assertNotNull(doubleArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(doubleList8);
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test5407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5407");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray37);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray37);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray77);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray77);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 1, doubleArray37, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList82);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.gaussian((int) '#', doubleList83);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
    }

    @Test
    public void test5408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5408");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray43);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 100, doubleArray82);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) '4', doubleArray82);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian(10, doubleArray43, doubleArray85);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
    }

    @Test
    public void test5409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5409");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray45);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray45, doubleArray84);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray84);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '4', doubleArray84);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray84);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 100, doubleArray84);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 100, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray91);
        java.lang.Class<?> wildcardClass93 = doubleArray92.getClass();
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test5410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5410");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) 'a', doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 0, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, 10, doubleArray49);
        double[][] doubleArray51 = null;
        java.util.ArrayList<java.lang.Double> doubleList52 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray49, doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleList52);
    }

    @Test
    public void test5411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5411");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray45);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray47, doubleArray80);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray47);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 100, doubleArray47);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '4', doubleArray47);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 100, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '#', doubleArray86);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 0, doubleArray86);
        java.lang.Class<?> wildcardClass90 = doubleArray86.getClass();
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test5412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5412");
        double[] doubleArray16 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray22 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray28 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray34 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray40 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray46 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray47 = new double[][] { doubleArray16, doubleArray22, doubleArray28, doubleArray34, doubleArray40, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray47);
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray83 = new double[][] { doubleArray61, doubleArray68, doubleArray75, doubleArray82 };
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray48, doubleArray84);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray48);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 100, doubleArray88);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) '#', doubleArray90);
        java.lang.Class<?> wildcardClass92 = doubleArray91.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test5413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5413");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 10, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) '4', doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) ' ', doubleArray45);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (short) 100, doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
    }

    @Test
    public void test5414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5414");
        java.lang.Double[] doubleArray11 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList12 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList12, doubleArray11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList18);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList19);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList21 = com.thealgorithms.maths.Gaussian.gaussian((int) 'a', doubleList19);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
    }

    @Test
    public void test5415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5415");
        java.lang.Double[] doubleArray11 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList12 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList12, doubleArray11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList18);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList18);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList21 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 10, doubleList18);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
    }

    @Test
    public void test5416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5416");
        double[][] doubleArray6 = null;
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray44);
        java.util.ArrayList<java.lang.Double> doubleList48 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray6, doubleArray47);
        java.util.ArrayList<java.lang.Double> doubleList49 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList48);
        java.util.ArrayList<java.lang.Double> doubleList50 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList49);
        java.util.ArrayList<java.lang.Double> doubleList51 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList49);
        java.util.ArrayList<java.lang.Double> doubleList52 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList49);
        java.util.ArrayList<java.lang.Double> doubleList53 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList52);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleList48);
        org.junit.Assert.assertNotNull(doubleList49);
        org.junit.Assert.assertNotNull(doubleList50);
        org.junit.Assert.assertNotNull(doubleList51);
        org.junit.Assert.assertNotNull(doubleList52);
        org.junit.Assert.assertNotNull(doubleList53);
    }

    @Test
    public void test5417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5417");
        double[][] doubleArray1 = null;
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 100, doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray44);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 10, doubleArray44);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList49 = com.thealgorithms.maths.Gaussian.valueOfGaussian(10, doubleArray1, doubleArray44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
    }

    @Test
    public void test5418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5418");
        java.lang.Double[] doubleArray11 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList12 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList12, doubleArray11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList12);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList17);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList17);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList19);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
    }

    @Test
    public void test5419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5419");
        double[][] doubleArray4 = null;
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 100, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray45);
        java.util.ArrayList<java.lang.Double> doubleList49 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray4, doubleArray48);
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray85 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray86 = new double[][] { doubleArray64, doubleArray71, doubleArray78, doubleArray85 };
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 100, doubleArray87);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) ' ', doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray48, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 0, doubleArray48);
        java.lang.Class<?> wildcardClass93 = doubleArray92.getClass();
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleList49);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test5420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5420");
        double[][] doubleArray6 = null;
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray44);
        java.util.ArrayList<java.lang.Double> doubleList48 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray6, doubleArray47);
        java.util.ArrayList<java.lang.Double> doubleList49 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList48);
        java.util.ArrayList<java.lang.Double> doubleList50 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList48);
        java.util.ArrayList<java.lang.Double> doubleList51 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList48);
        java.util.ArrayList<java.lang.Double> doubleList52 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList48);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList53 = com.thealgorithms.maths.Gaussian.gaussian((int) '4', doubleList48);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleList48);
        org.junit.Assert.assertNotNull(doubleList49);
        org.junit.Assert.assertNotNull(doubleList50);
        org.junit.Assert.assertNotNull(doubleList51);
        org.junit.Assert.assertNotNull(doubleList52);
    }

    @Test
    public void test5421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5421");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[] doubleArray49 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray71 = new double[][] { doubleArray49, doubleArray56, doubleArray63, doubleArray70 };
        double[][] doubleArray72 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray71);
        java.util.ArrayList<java.lang.Double> doubleList73 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray71);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray71);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray71);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (-1), doubleArray71);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, 0, doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleList73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
    }

    @Test
    public void test5422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5422");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray40);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray42);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 0, doubleArray44);
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray85 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray86 = new double[][] { doubleArray64, doubleArray71, doubleArray78, doubleArray85 };
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray88);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 10, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) ' ', doubleArray90);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 1, doubleArray45, doubleArray92);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList93);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleList93);
        org.junit.Assert.assertNotNull(doubleList94);
    }

    @Test
    public void test5423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5423");
        double[] doubleArray13 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray35 = new double[][] { doubleArray13, doubleArray20, doubleArray27, doubleArray34 };
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray36);
        double[][] doubleArray38 = null;
        java.util.ArrayList<java.lang.Double> doubleList39 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray37, doubleArray38);
        java.util.ArrayList<java.lang.Double> doubleList40 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList39);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList41 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList40);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray13), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleList39);
        org.junit.Assert.assertNotNull(doubleList40);
    }

    @Test
    public void test5424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5424");
        double[][] doubleArray2 = null;
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray3 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '4', (int) ' ', doubleArray2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
    }

    @Test
    public void test5425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5425");
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList10);
        java.lang.Class<?> wildcardClass18 = doubleList10.getClass();
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test5426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5426");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray40);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray77);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray40, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList81);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList82);
        java.lang.Class<?> wildcardClass84 = doubleList83.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test5427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5427");
        double[][] doubleArray6 = null;
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray44);
        java.util.ArrayList<java.lang.Double> doubleList48 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray6, doubleArray47);
        java.util.ArrayList<java.lang.Double> doubleList49 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList48);
        java.util.ArrayList<java.lang.Double> doubleList50 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList48);
        java.util.ArrayList<java.lang.Double> doubleList51 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList48);
        java.util.ArrayList<java.lang.Double> doubleList52 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList51);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList53 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList52);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleList48);
        org.junit.Assert.assertNotNull(doubleList49);
        org.junit.Assert.assertNotNull(doubleList50);
        org.junit.Assert.assertNotNull(doubleList51);
        org.junit.Assert.assertNotNull(doubleList52);
    }

    @Test
    public void test5428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5428");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray38);
        double[][] doubleArray40 = null;
        java.util.ArrayList<java.lang.Double> doubleList41 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray39, doubleArray40);
        java.util.ArrayList<java.lang.Double> doubleList42 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList41);
        java.util.ArrayList<java.lang.Double> doubleList43 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList41);
        java.util.ArrayList<java.lang.Double> doubleList44 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList41);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList45 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 10, doubleList41);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleList41);
        org.junit.Assert.assertNotNull(doubleList42);
        org.junit.Assert.assertNotNull(doubleList43);
        org.junit.Assert.assertNotNull(doubleList44);
    }

    @Test
    public void test5429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5429");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray46);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray46, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (-1), doubleArray79);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 0, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray83);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (short) 10, doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
    }

    @Test
    public void test5430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5430");
        double[][] doubleArray2 = null;
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray70 = new double[][] { doubleArray48, doubleArray55, doubleArray62, doubleArray69 };
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray70);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray39, doubleArray70);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 1, doubleArray39);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 10, doubleArray73);
        java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) -1, doubleArray2, doubleArray73);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 100, doubleList75);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleList72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleList75);
    }

    @Test
    public void test5431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5431");
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray54 = new double[][] { doubleArray32, doubleArray39, doubleArray46, doubleArray53 };
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray54);
        double[][] doubleArray56 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray54);
        double[][] doubleArray57 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray56);
        double[][] doubleArray58 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray56);
        double[][] doubleArray59 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray58);
        double[][] doubleArray60 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray59);
        double[][] doubleArray61 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray59);
        double[][] doubleArray62 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 0, doubleArray61);
        double[][] doubleArray63 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 1, doubleArray62);
        double[][] doubleArray64 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) 10, doubleArray63);
        double[][] doubleArray65 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 10, doubleArray64);
        double[][] doubleArray66 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) 'a', doubleArray64);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray67 = com.thealgorithms.maths.Gaussian.gaussianElimination(100, (int) 'a', doubleArray64);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertNotNull(doubleArray66);
    }

    @Test
    public void test5432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5432");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) 'a', doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) ' ', doubleArray48);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray48);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) '#', doubleArray52);
        double[][] doubleArray54 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList55 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) '4', doubleArray52, doubleArray54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
    }

    @Test
    public void test5433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5433");
        double[][] doubleArray1 = null;
        double[] doubleArray8 = new double[] {};
        double[][] doubleArray9 = new double[][] { doubleArray8 };
        double[][] doubleArray10 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray9);
        double[][] doubleArray11 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray10);
        double[][] doubleArray12 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) 10, doubleArray10);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) 'a', doubleArray1, doubleArray10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray8), "[]");
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertNotNull(doubleArray11);
        org.junit.Assert.assertNotNull(doubleArray12);
    }

    @Test
    public void test5434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5434");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) 'a', doubleArray44);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 10, (int) (short) -1, doubleArray44);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
    }

    @Test
    public void test5435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5435");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray39);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray41, doubleArray74);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, 0, doubleArray74);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (-1), doubleArray78);
        java.lang.Class<?> wildcardClass81 = doubleArray80.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleList77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test5436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5436");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray44);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray83);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray44, doubleArray83);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray44);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray86);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 0, doubleArray86);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 100, doubleArray86);
        double[][] doubleArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 1, doubleArray90, doubleArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
    }

    @Test
    public void test5437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5437");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 100, doubleArray41);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 0, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (short) 100, doubleArray45);
        java.lang.Class<?> wildcardClass47 = doubleArray46.getClass();
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test5438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5438");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray34);
        double[] doubleArray49 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray71 = new double[][] { doubleArray49, doubleArray56, doubleArray63, doubleArray70 };
        double[][] doubleArray72 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray71);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray72);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray73);
        java.util.ArrayList<java.lang.Double> doubleList75 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray34, doubleArray73);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 10, doubleList75);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray49), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleList75);
    }

    @Test
    public void test5439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5439");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) 'a', doubleArray45);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) '4', doubleArray48);
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray87 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray88 = new double[][] { doubleArray66, doubleArray73, doubleArray80, doubleArray87 };
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray89);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray89);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray89);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) -1, doubleArray48, doubleArray93);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination(10, (int) (byte) 100, doubleArray48);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleList94);
    }

    @Test
    public void test5440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5440");
        java.lang.Double[] doubleArray6 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList7 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList7, doubleArray6);
        java.util.ArrayList<java.lang.Double> doubleList9 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList7);
        java.util.ArrayList<java.lang.Double> doubleList10 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList7);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.lang.Class<?> wildcardClass12 = doubleList10.getClass();
        org.junit.Assert.assertNotNull(doubleArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(doubleList9);
        org.junit.Assert.assertNotNull(doubleList10);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test5441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5441");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray41);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray43, doubleArray76);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 100, doubleArray43);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 1, doubleArray43);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (byte) 100, doubleArray81);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(10, (int) (byte) 0, doubleArray82);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
    }

    @Test
    public void test5442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5442");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray44);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray44, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 1, doubleArray83);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (-1), doubleArray83);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 0, doubleArray86);
        double[][] doubleArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) '4', doubleArray87, doubleArray88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
    }

    @Test
    public void test5443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5443");
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray43 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray44 = new double[][] { doubleArray22, doubleArray29, doubleArray36, doubleArray43 };
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray45);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray45);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 0, doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray43), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
    }

    @Test
    public void test5444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5444");
        java.lang.Double[] doubleArray8 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList9 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList9, doubleArray8);
        java.util.ArrayList<java.lang.Double> doubleList11 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList9);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList9);
        java.lang.Class<?> wildcardClass15 = doubleList14.getClass();
        org.junit.Assert.assertNotNull(doubleArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(doubleList11);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test5445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5445");
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray47 = new double[][] { doubleArray25, doubleArray32, doubleArray39, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray47);
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray85 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray86 = new double[][] { doubleArray64, doubleArray71, doubleArray78, doubleArray85 };
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray87);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray49, doubleArray87);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 0, doubleArray87);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray93);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 0, doubleArray93);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray93);
        double[][] doubleArray97 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (-1), doubleArray96);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray98 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 100, 0, doubleArray96);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertNotNull(doubleArray97);
    }

    @Test
    public void test5446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5446");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray43);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray43, doubleArray82);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray43);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 0, doubleArray43);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray43);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray43);
        double[][] doubleArray89 = null;
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) -1, doubleArray43, doubleArray89);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) -1, doubleList90);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleList90);
    }

    @Test
    public void test5447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5447");
        double[] doubleArray12 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray34 = new double[][] { doubleArray12, doubleArray19, doubleArray26, doubleArray33 };
        double[][] doubleArray35 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray34);
        double[][] doubleArray36 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray35);
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 0, doubleArray35);
        java.lang.Class<?> wildcardClass38 = doubleArray37.getClass();
        org.junit.Assert.assertNotNull(doubleArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray12), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test5448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5448");
        double[] doubleArray14 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray20 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray26 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray32 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray38 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray44 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray45 = new double[][] { doubleArray14, doubleArray20, doubleArray26, doubleArray32, doubleArray38, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray45);
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray81 = new double[][] { doubleArray59, doubleArray66, doubleArray73, doubleArray80 };
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray46, doubleArray82);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray46);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) ' ', doubleArray46);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (short) 1, doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
    }

    @Test
    public void test5449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5449");
        double[][] doubleArray3 = null;
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray47 = new double[][] { doubleArray25, doubleArray32, doubleArray39, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray47);
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray83 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray84 = new double[][] { doubleArray62, doubleArray69, doubleArray76, doubleArray83 };
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray47, doubleArray86);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray86);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '4', doubleArray86);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray86);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (short) 0, doubleArray86);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 10, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray3, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList94);
        java.util.ArrayList<java.lang.Double> doubleList96 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList95);
        java.lang.Class<?> wildcardClass97 = doubleList95.getClass();
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleList88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleList94);
        org.junit.Assert.assertNotNull(doubleList95);
        org.junit.Assert.assertNotNull(doubleList96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test5450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5450");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray43);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray43);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray83);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray47, doubleArray85);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList86);
        java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList87);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.gaussian((-1), doubleList88);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleList88);
    }

    @Test
    public void test5451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5451");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray47);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray49);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) -1, doubleArray49);
        double[] doubleArray60 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray66 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray72 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray78 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray84 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray90 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray91 = new double[][] { doubleArray60, doubleArray66, doubleArray72, doubleArray78, doubleArray84, doubleArray90 };
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray91);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) -1, doubleArray49, doubleArray91);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 100, (int) (byte) 0, doubleArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[NaN, NaN, NaN, NaN, NaN]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray90), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleList93);
    }

    @Test
    public void test5452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5452");
        double[][] doubleArray3 = null;
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray46 = new double[][] { doubleArray24, doubleArray31, doubleArray38, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray52);
        java.util.ArrayList<java.lang.Double> doubleList54 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray3, doubleArray53);
        java.util.ArrayList<java.lang.Double> doubleList55 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList54);
        java.util.ArrayList<java.lang.Double> doubleList56 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList54);
        java.lang.Class<?> wildcardClass57 = doubleList54.getClass();
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleList54);
        org.junit.Assert.assertNotNull(doubleList55);
        org.junit.Assert.assertNotNull(doubleList56);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test5453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5453");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray42, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 100, doubleArray42);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) '4', doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray79);
        java.lang.Class<?> wildcardClass81 = doubleArray79.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test5454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5454");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray40);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray77);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray40, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList81);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) -1, doubleList81);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
    }

    @Test
    public void test5455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5455");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray42);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray42, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList82);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList83);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList83);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList85);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList86);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleList87);
    }

    @Test
    public void test5456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5456");
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray46 = new double[][] { doubleArray24, doubleArray31, doubleArray38, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray47);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) 'a', doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 0, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, 10, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (short) 1, doubleArray52);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 100, 100, doubleArray52);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
    }

    @Test
    public void test5457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5457");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray42, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray42);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 0, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (-1), doubleArray79);
        java.lang.Class<?> wildcardClass81 = doubleArray79.getClass();
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test5458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5458");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) 'a', doubleArray45);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) '4', doubleArray48);
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray89 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray90 = new double[][] { doubleArray68, doubleArray75, doubleArray82, doubleArray89 };
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray90);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray92);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) 'a', doubleArray92);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) '4', doubleArray95);
        java.util.ArrayList<java.lang.Double> doubleList97 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray48, doubleArray95);
        java.util.ArrayList<java.lang.Double> doubleList98 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList97);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList99 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) -1, doubleList97);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertNotNull(doubleList97);
        org.junit.Assert.assertNotNull(doubleList98);
    }

    @Test
    public void test5459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5459");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[] doubleArray50 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray72 = new double[][] { doubleArray50, doubleArray57, doubleArray64, doubleArray71 };
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray72);
        java.util.ArrayList<java.lang.Double> doubleList74 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray40, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray40);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray40);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) -1, doubleArray40);
        java.lang.Class<?> wildcardClass78 = doubleArray77.getClass();
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray50), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleList74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test5460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5460");
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray46 = new double[][] { doubleArray24, doubleArray31, doubleArray38, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray50);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 100, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray52);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 0, doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
    }

    @Test
    public void test5461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5461");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray38);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray74);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray38, doubleArray74);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 10, doubleArray38);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray38);
        java.lang.Class<?> wildcardClass81 = doubleArray38.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleList78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test5462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5462");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray39);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray80);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray82);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) -1, doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray39, doubleArray84);
        java.lang.Class<?> wildcardClass87 = doubleList86.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test5463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5463");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray36);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray36);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(100, (int) 'a', doubleArray36);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
    }

    @Test
    public void test5464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5464");
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray47 = new double[][] { doubleArray25, doubleArray32, doubleArray39, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray47);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray49);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray52);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray52);
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray82 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray89 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray90 = new double[][] { doubleArray68, doubleArray75, doubleArray82, doubleArray89 };
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray90);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray92);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray55, doubleArray92);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination(100, (int) '#', doubleArray55);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray82), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray89), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleList94);
    }

    @Test
    public void test5465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5465");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray44);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray44, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray44);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) '#', doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray80);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (short) 0, doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleList78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
    }

    @Test
    public void test5466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5466");
        java.lang.Double[] doubleArray10 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList11 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList11, doubleArray10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList15);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList16);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList17);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList18);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
    }

    @Test
    public void test5467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5467");
        double[] doubleArray18 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray24 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray30 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray36 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray42 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray48 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray49 = new double[][] { doubleArray18, doubleArray24, doubleArray30, doubleArray36, doubleArray42, doubleArray48 };
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray49);
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray85 = new double[][] { doubleArray63, doubleArray70, doubleArray77, doubleArray84 };
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray86);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray50, doubleArray86);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray50);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) '#', doubleArray50);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 1, doubleArray50);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) 'a', doubleArray50);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 100, (int) '4', doubleArray93);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[NaN, NaN, NaN, NaN, NaN]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
    }

    @Test
    public void test5468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5468");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray70 = new double[][] { doubleArray48, doubleArray55, doubleArray62, doubleArray69 };
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray70);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray38, doubleArray71);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 10, doubleArray71);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) 'a', doubleArray71);
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleList72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
    }

    @Test
    public void test5469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5469");
        double[][] doubleArray4 = null;
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray39);
        double[] doubleArray53 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray75 = new double[][] { doubleArray53, doubleArray60, doubleArray67, doubleArray74 };
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray76);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray40, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray4, doubleArray40);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList80);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList82);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray53), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleList79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
    }

    @Test
    public void test5470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5470");
        double[] doubleArray10 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray16 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray22 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray28 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray34 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[] doubleArray40 = new double[] { 0.0f, 10, 0.0d, 10.0f, 1 };
        double[][] doubleArray41 = new double[][] { doubleArray10, doubleArray16, doubleArray22, doubleArray28, doubleArray34, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[][] doubleArray43 = null;
        java.util.ArrayList<java.lang.Double> doubleList44 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray42, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (-1), doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray10), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[0.0, 10.0, 0.0, 10.0, 1.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleList44);
        org.junit.Assert.assertNotNull(doubleArray45);
    }

    @Test
    public void test5471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5471");
        double[][] doubleArray7 = null;
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray46 = new double[][] { doubleArray24, doubleArray31, doubleArray38, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 100, doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 1, doubleArray48);
        java.util.ArrayList<java.lang.Double> doubleList52 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray7, doubleArray51);
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray88 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray89 = new double[][] { doubleArray67, doubleArray74, doubleArray81, doubleArray88 };
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 100, doubleArray90);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) ' ', doubleArray90);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray51, doubleArray93);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 0, doubleArray51);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) '#', doubleArray95);
        double[][] doubleArray97 = null;
        java.util.ArrayList<java.lang.Double> doubleList98 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray96, doubleArray97);
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleList52);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleList94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertNotNull(doubleList98);
    }

    @Test
    public void test5472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5472");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray43);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray81);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray82);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray43, doubleArray82);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 0, doubleArray43);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 0, doubleArray43);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (-1), doubleArray43);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 100, doubleArray43);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(10, (int) ' ', doubleArray88);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
    }

    @Test
    public void test5473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5473");
        double[][] doubleArray2 = null;
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray46 = new double[][] { doubleArray24, doubleArray31, doubleArray38, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray47);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray47);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray47);
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray85 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray86 = new double[][] { doubleArray64, doubleArray71, doubleArray78, doubleArray85 };
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (-1), doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList90 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray51, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) 1, doubleArray89);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) -1, doubleArray91);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray2, doubleArray91);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.gaussian(10, doubleList93);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleList90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleList93);
    }

    @Test
    public void test5474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5474");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), 0, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 1, doubleArray44);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) '4', doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, 0, doubleArray46);
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray85 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray86 = new double[][] { doubleArray64, doubleArray71, doubleArray78, doubleArray85 };
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray86);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray87);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray87);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray46, doubleArray87);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray87);
        java.lang.Class<?> wildcardClass93 = doubleArray87.getClass();
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray85), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test5475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5475");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray46);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray46, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) 'a', doubleArray79);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray79);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) 10, doubleArray79);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (short) 1, doubleArray79);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (byte) -1, doubleArray84);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) ' ', 0, doubleArray84);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
    }

    @Test
    public void test5476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5476");
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray47 = new double[][] { doubleArray25, doubleArray32, doubleArray39, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray49);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (-1), doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) -1, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray52);
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray88 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray89 = new double[][] { doubleArray67, doubleArray74, doubleArray81, doubleArray88 };
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray89);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 100, doubleArray90);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray54, doubleArray90);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 10, doubleArray54);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (byte) 100, doubleArray54);
        java.lang.Class<?> wildcardClass96 = doubleArray54.getClass();
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray88), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleList93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test5477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5477");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 100, doubleArray39);
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray79 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray80 = new double[][] { doubleArray58, doubleArray65, doubleArray72, doubleArray79 };
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray80);
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (short) 0, doubleArray80);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, 10, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) '4', doubleArray83);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray41, doubleArray83);
        java.lang.Class<?> wildcardClass87 = doubleArray41.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray79), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test5478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5478");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray45);
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray83 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray84 = new double[][] { doubleArray62, doubleArray69, doubleArray76, doubleArray83 };
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray85);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray85);
        java.util.ArrayList<java.lang.Double> doubleList89 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 0, doubleArray47, doubleArray85);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 0, doubleArray85);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, 1, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (-1), doubleArray91);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 0, doubleArray91);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray91);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleList89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
    }

    @Test
    public void test5479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5479");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 0, doubleArray43);
        double[][] doubleArray45 = null;
        java.util.ArrayList<java.lang.Double> doubleList46 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray44, doubleArray45);
        java.util.ArrayList<java.lang.Double> doubleList47 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList46);
        java.util.ArrayList<java.lang.Double> doubleList48 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList47);
        java.util.ArrayList<java.lang.Double> doubleList49 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList48);
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleList46);
        org.junit.Assert.assertNotNull(doubleList47);
        org.junit.Assert.assertNotNull(doubleList48);
        org.junit.Assert.assertNotNull(doubleList49);
    }

    @Test
    public void test5480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5480");
        java.lang.Double[] doubleArray10 = new java.lang.Double[] { 0.0d, (-1.0d), 0.0d };
        java.util.ArrayList<java.lang.Double> doubleList11 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList11, doubleArray10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList11);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList16);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList16);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 10, doubleList16);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
    }

    @Test
    public void test5481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5481");
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray44 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray45 = new double[][] { doubleArray23, doubleArray30, doubleArray37, doubleArray44 };
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray45);
        double[] doubleArray60 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray67 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray74 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray81 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray82 = new double[][] { doubleArray60, doubleArray67, doubleArray74, doubleArray81 };
        double[][] doubleArray83 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray83);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray45, doubleArray84);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 10, doubleArray84);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) '4', doubleArray84);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 0, doubleArray84);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (short) 0, doubleArray84);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 0, doubleArray90);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '#', (int) (byte) 10, doubleArray90);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray44), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray60), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray67), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray74), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray81), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
    }

    @Test
    public void test5482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5482");
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray49 = new double[][] { doubleArray27, doubleArray34, doubleArray41, doubleArray48 };
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray49);
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray83 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray84 = new double[][] { doubleArray62, doubleArray69, doubleArray76, doubleArray83 };
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray84);
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray84);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray51, doubleArray84);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray51);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 100, doubleArray51);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 1, doubleArray51);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) -1, doubleArray51);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 10, doubleArray91);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 100, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, 1, doubleArray92);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 10, (int) (byte) 100, doubleArray94);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray83), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
    }

    @Test
    public void test5483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5483");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray36);
        double[] doubleArray51 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray58 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray65 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray72 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray73 = new double[][] { doubleArray51, doubleArray58, doubleArray65, doubleArray72 };
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray73);
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray74);
        double[][] doubleArray76 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray75);
        java.util.ArrayList<java.lang.Double> doubleList77 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 0, doubleArray36, doubleArray75);
        java.util.ArrayList<java.lang.Double> doubleList78 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList77);
        java.util.ArrayList<java.lang.Double> doubleList79 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList77);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 100, doubleList77);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray51), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray58), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray65), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray72), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleList77);
        org.junit.Assert.assertNotNull(doubleList78);
        org.junit.Assert.assertNotNull(doubleList79);
    }

    @Test
    public void test5484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5484");
        java.lang.Double[] doubleArray9 = new java.lang.Double[] { 100.0d, 1.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList10 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList10, doubleArray9);
        java.util.ArrayList<java.lang.Double> doubleList12 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList13 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList14 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList10);
        java.util.ArrayList<java.lang.Double> doubleList15 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList14);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 100, doubleList14);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(doubleList12);
        org.junit.Assert.assertNotNull(doubleList13);
        org.junit.Assert.assertNotNull(doubleList14);
        org.junit.Assert.assertNotNull(doubleList15);
        org.junit.Assert.assertNotNull(doubleList16);
    }

    @Test
    public void test5485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5485");
        double[] doubleArray17 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray39 = new double[][] { doubleArray17, doubleArray24, doubleArray31, doubleArray38 };
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray41);
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray76 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray77 = new double[][] { doubleArray55, doubleArray62, doubleArray69, doubleArray76 };
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray78);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray41, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList81);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList82);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList82);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 10, doubleList84);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 1 out of bounds for length 1");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray17), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray76), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleList84);
    }

    @Test
    public void test5486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5486");
        double[] doubleArray24 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray31 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray38 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray45 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray46 = new double[][] { doubleArray24, doubleArray31, doubleArray38, doubleArray45 };
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray46);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray46);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray48);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray48);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray50);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray51);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, (int) (short) 0, doubleArray53);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) '#', doubleArray53);
        java.lang.Class<?> wildcardClass56 = doubleArray55.getClass();
        org.junit.Assert.assertNotNull(doubleArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray24), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray31), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray38), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray45), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test5487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5487");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 10, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) 1, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray45);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) 'a', (int) (short) 10, doubleArray48);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
    }

    @Test
    public void test5488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5488");
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray46 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray47 = new double[][] { doubleArray25, doubleArray32, doubleArray39, doubleArray46 };
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray47);
        double[][] doubleArray50 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray49);
        double[][] doubleArray51 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray49);
        double[][] doubleArray52 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) (byte) -1, doubleArray51);
        double[][] doubleArray53 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (byte) 10, doubleArray52);
        double[][] doubleArray54 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray52);
        double[][] doubleArray55 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray52);
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray91 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray92 = new double[][] { doubleArray70, doubleArray77, doubleArray84, doubleArray91 };
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray92);
        double[][] doubleArray94 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray93);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, 100, doubleArray93);
        double[][] doubleArray96 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 0, (int) (short) 0, doubleArray95);
        java.util.ArrayList<java.lang.Double> doubleList97 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) 1, doubleArray55, doubleArray96);
        double[][] doubleArray98 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) '#', doubleArray96);
        java.lang.Class<?> wildcardClass99 = doubleArray96.getClass();
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray46), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray50);
        org.junit.Assert.assertNotNull(doubleArray51);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertNotNull(doubleArray53);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray91), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleArray94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(doubleArray96);
        org.junit.Assert.assertNotNull(doubleList97);
        org.junit.Assert.assertNotNull(doubleArray98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test5489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5489");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray43);
        double[] doubleArray57 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray64 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray71 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray78 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray79 = new double[][] { doubleArray57, doubleArray64, doubleArray71, doubleArray78 };
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray80);
        double[][] doubleArray82 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray80);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray43, doubleArray82);
        double[][] doubleArray84 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (byte) 1, doubleArray82);
        double[][] doubleArray85 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray82);
        double[][] doubleArray86 = null;
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray82, doubleArray86);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList88 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList87);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray57), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray64), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray71), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray78), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleArray82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleList87);
    }

    @Test
    public void test5490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5490");
        double[] doubleArray14 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray36 = new double[][] { doubleArray14, doubleArray21, doubleArray28, doubleArray35 };
        double[][] doubleArray37 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray36);
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray38);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 100, 100, doubleArray39);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray14), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
    }

    @Test
    public void test5491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5491");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[] doubleArray52 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray59 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray74 = new double[][] { doubleArray52, doubleArray59, doubleArray66, doubleArray73 };
        double[][] doubleArray75 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray74);
        java.util.ArrayList<java.lang.Double> doubleList76 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray42, doubleArray75);
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (-1), doubleArray75);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) '#', doubleArray75);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) 'a', doubleArray75);
        // The following exception was thrown during execution in test generation
        try {
            double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) '4', (int) (short) 0, doubleArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.ArrayIndexOutOfBoundsException; message: null");
        } catch (java.lang.ArrayIndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray52), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray59), "[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertNotNull(doubleList76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
    }

    @Test
    public void test5492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5492");
        double[] doubleArray19 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray26 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray33 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray40 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray41 = new double[][] { doubleArray19, doubleArray26, doubleArray33, doubleArray40 };
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) ' ', doubleArray45);
        double[][] doubleArray47 = null;
        java.util.ArrayList<java.lang.Double> doubleList48 = com.thealgorithms.maths.Gaussian.valueOfGaussian((-1), doubleArray45, doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) (short) -1, doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray19), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray26), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray33), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray40), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleList48);
        org.junit.Assert.assertNull(doubleArray49);
    }

    @Test
    public void test5493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5493");
        double[] doubleArray18 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray25 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray32 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray39 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray40 = new double[][] { doubleArray18, doubleArray25, doubleArray32, doubleArray39 };
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray40);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray41);
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray42);
        double[] doubleArray56 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray78 = new double[][] { doubleArray56, doubleArray63, doubleArray70, doubleArray77 };
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray78);
        double[][] doubleArray80 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray79);
        double[][] doubleArray81 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray42, doubleArray81);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList82);
        java.util.ArrayList<java.lang.Double> doubleList84 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList82);
        java.util.ArrayList<java.lang.Double> doubleList85 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList84);
        java.util.ArrayList<java.lang.Double> doubleList86 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList84);
        java.util.ArrayList<java.lang.Double> doubleList87 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList86);
        java.lang.Class<?> wildcardClass88 = doubleList87.getClass();
        org.junit.Assert.assertNotNull(doubleArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray18), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray25), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray32), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray39), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray56), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertNotNull(doubleArray81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(doubleList84);
        org.junit.Assert.assertNotNull(doubleList85);
        org.junit.Assert.assertNotNull(doubleList86);
        org.junit.Assert.assertNotNull(doubleList87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test5494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5494");
        double[][] doubleArray1 = null;
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) -1, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray39);
        double[][] doubleArray42 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, (int) 'a', doubleArray41);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList43 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 1, doubleArray1, doubleArray41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray42);
    }

    @Test
    public void test5495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5495");
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination(1, 0, doubleArray44);
        double[] doubleArray63 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray70 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray77 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray84 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray85 = new double[][] { doubleArray63, doubleArray70, doubleArray77, doubleArray84 };
        double[][] doubleArray86 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray85);
        double[][] doubleArray87 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray85);
        double[][] doubleArray88 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray87);
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray87);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) -1, doubleArray89);
        java.util.ArrayList<java.lang.Double> doubleList91 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (short) -1, doubleArray44, doubleArray89);
        java.util.ArrayList<java.lang.Double> doubleList92 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList91);
        java.util.ArrayList<java.lang.Double> doubleList93 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList92);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList92);
        java.util.ArrayList<java.lang.Double> doubleList95 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList94);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList96 = com.thealgorithms.maths.Gaussian.gaussian(100, doubleList95);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Index 0 out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray63), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray70), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray77), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray84), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray85);
        org.junit.Assert.assertNotNull(doubleArray86);
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleList91);
        org.junit.Assert.assertNotNull(doubleList92);
        org.junit.Assert.assertNotNull(doubleList93);
        org.junit.Assert.assertNotNull(doubleList94);
        org.junit.Assert.assertNotNull(doubleList95);
    }

    @Test
    public void test5496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5496");
        double[] doubleArray16 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray23 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray30 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray37 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray38 = new double[][] { doubleArray16, doubleArray23, doubleArray30, doubleArray37 };
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray38);
        double[][] doubleArray40 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray39);
        double[][] doubleArray41 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray40);
        double[] doubleArray54 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray61 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray68 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray75 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray76 = new double[][] { doubleArray54, doubleArray61, doubleArray68, doubleArray75 };
        double[][] doubleArray77 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray76);
        double[][] doubleArray78 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray77);
        double[][] doubleArray79 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray77);
        java.util.ArrayList<java.lang.Double> doubleList80 = com.thealgorithms.maths.Gaussian.valueOfGaussian(1, doubleArray40, doubleArray79);
        java.util.ArrayList<java.lang.Double> doubleList81 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList80);
        java.util.ArrayList<java.lang.Double> doubleList82 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList80);
        java.util.ArrayList<java.lang.Double> doubleList83 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList80);
        java.lang.Class<?> wildcardClass84 = doubleList80.getClass();
        org.junit.Assert.assertNotNull(doubleArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray16), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray23), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray30), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray37), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray40);
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertNotNull(doubleArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray54), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray61), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray68), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray75), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray76);
        org.junit.Assert.assertNotNull(doubleArray77);
        org.junit.Assert.assertNotNull(doubleArray78);
        org.junit.Assert.assertNotNull(doubleArray79);
        org.junit.Assert.assertNotNull(doubleList80);
        org.junit.Assert.assertNotNull(doubleList81);
        org.junit.Assert.assertNotNull(doubleList82);
        org.junit.Assert.assertNotNull(doubleList83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test5497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5497");
        double[] doubleArray15 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray22 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray29 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray36 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray37 = new double[][] { doubleArray15, doubleArray22, doubleArray29, doubleArray36 };
        double[][] doubleArray38 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray37);
        double[][] doubleArray39 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray38);
        double[] doubleArray48 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray55 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray62 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray69 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray70 = new double[][] { doubleArray48, doubleArray55, doubleArray62, doubleArray69 };
        double[][] doubleArray71 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray70);
        java.util.ArrayList<java.lang.Double> doubleList72 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray38, doubleArray71);
        double[][] doubleArray73 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, (int) '4', doubleArray71);
        double[][] doubleArray74 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 10, doubleArray71);
        java.lang.Class<?> wildcardClass75 = doubleArray71.getClass();
        org.junit.Assert.assertNotNull(doubleArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray15), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray22), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray29), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray36), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray37);
        org.junit.Assert.assertNotNull(doubleArray38);
        org.junit.Assert.assertNotNull(doubleArray39);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray48), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray55), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray62), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray69), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray70);
        org.junit.Assert.assertNotNull(doubleArray71);
        org.junit.Assert.assertNotNull(doubleList72);
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertNotNull(doubleArray74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test5498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5498");
        java.lang.Double[] doubleArray13 = new java.lang.Double[] { 1.0d, 0.0d, 10.0d, 10.0d };
        java.util.ArrayList<java.lang.Double> doubleList14 = new java.util.ArrayList<java.lang.Double>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.Double>) doubleList14, doubleArray13);
        java.util.ArrayList<java.lang.Double> doubleList16 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList17 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList18 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList19 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList20 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList21 = com.thealgorithms.maths.Gaussian.gaussian(1, doubleList14);
        java.util.ArrayList<java.lang.Double> doubleList22 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 1, doubleList21);
        java.util.ArrayList<java.lang.Double> doubleList23 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 1, doubleList22);
        java.util.ArrayList<java.lang.Double> doubleList24 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList22);
        java.lang.Class<?> wildcardClass25 = doubleList22.getClass();
        org.junit.Assert.assertNotNull(doubleArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(doubleList16);
        org.junit.Assert.assertNotNull(doubleList17);
        org.junit.Assert.assertNotNull(doubleList18);
        org.junit.Assert.assertNotNull(doubleList19);
        org.junit.Assert.assertNotNull(doubleList20);
        org.junit.Assert.assertNotNull(doubleList21);
        org.junit.Assert.assertNotNull(doubleList22);
        org.junit.Assert.assertNotNull(doubleList23);
        org.junit.Assert.assertNotNull(doubleList24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test5499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5499");
        double[] doubleArray21 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray28 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray35 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray42 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray43 = new double[][] { doubleArray21, doubleArray28, doubleArray35, doubleArray42 };
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 100, doubleArray44);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) 10, doubleArray45);
        double[][] doubleArray47 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (int) (byte) 1, doubleArray45);
        double[][] doubleArray48 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) 1, (-1), doubleArray47);
        double[][] doubleArray49 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (byte) -1, 10, doubleArray47);
        double[] doubleArray66 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray73 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray80 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray87 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray88 = new double[][] { doubleArray66, doubleArray73, doubleArray80, doubleArray87 };
        double[][] doubleArray89 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray88);
        double[][] doubleArray90 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) ' ', doubleArray88);
        double[][] doubleArray91 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, 10, doubleArray90);
        double[][] doubleArray92 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (byte) 10, doubleArray90);
        double[][] doubleArray93 = com.thealgorithms.maths.Gaussian.gaussianElimination(0, (int) (short) -1, doubleArray92);
        java.util.ArrayList<java.lang.Double> doubleList94 = com.thealgorithms.maths.Gaussian.valueOfGaussian((int) (byte) 1, doubleArray49, doubleArray93);
        double[][] doubleArray95 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 1, (int) (byte) 0, doubleArray93);
        java.lang.Class<?> wildcardClass96 = doubleArray93.getClass();
        org.junit.Assert.assertNotNull(doubleArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray21), "[0.01, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray28), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray35), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray42), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleArray47);
        org.junit.Assert.assertNotNull(doubleArray48);
        org.junit.Assert.assertNotNull(doubleArray49);
        org.junit.Assert.assertNotNull(doubleArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray66), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray73), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray80), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray87), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray88);
        org.junit.Assert.assertNotNull(doubleArray89);
        org.junit.Assert.assertNotNull(doubleArray90);
        org.junit.Assert.assertNotNull(doubleArray91);
        org.junit.Assert.assertNotNull(doubleArray92);
        org.junit.Assert.assertNotNull(doubleArray93);
        org.junit.Assert.assertNotNull(doubleList94);
        org.junit.Assert.assertNotNull(doubleArray95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test5500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest10.test5500");
        double[][] doubleArray5 = null;
        double[] doubleArray20 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray27 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray34 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[] doubleArray41 = new double[] { 100.0d, (short) 1, (byte) 0, (-1.0f), 'a', 0L };
        double[][] doubleArray42 = new double[][] { doubleArray20, doubleArray27, doubleArray34, doubleArray41 };
        double[][] doubleArray43 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) 0, (int) (short) -1, doubleArray42);
        double[][] doubleArray44 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (byte) -1, doubleArray43);
        double[][] doubleArray45 = com.thealgorithms.maths.Gaussian.gaussianElimination((int) (short) -1, 0, doubleArray43);
        double[][] doubleArray46 = com.thealgorithms.maths.Gaussian.gaussianElimination((-1), (int) (short) 1, doubleArray43);
        java.util.ArrayList<java.lang.Double> doubleList47 = com.thealgorithms.maths.Gaussian.valueOfGaussian(0, doubleArray5, doubleArray46);
        java.util.ArrayList<java.lang.Double> doubleList48 = com.thealgorithms.maths.Gaussian.gaussian(0, doubleList47);
        java.util.ArrayList<java.lang.Double> doubleList49 = com.thealgorithms.maths.Gaussian.gaussian((int) (byte) 0, doubleList47);
        java.util.ArrayList<java.lang.Double> doubleList50 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) 0, doubleList47);
        // The following exception was thrown during execution in test generation
        try {
            java.util.ArrayList<java.lang.Double> doubleList51 = com.thealgorithms.maths.Gaussian.gaussian((int) (short) -1, doubleList50);
            org.junit.Assert.fail("Expected exception of type java.lang.NegativeArraySizeException; message: -1");
        } catch (java.lang.NegativeArraySizeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(doubleArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray20), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray27), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray34), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(doubleArray41), "[100.0, 1.0, 0.0, -1.0, 97.0, 0.0]");
        org.junit.Assert.assertNotNull(doubleArray42);
        org.junit.Assert.assertNotNull(doubleArray43);
        org.junit.Assert.assertNotNull(doubleArray44);
        org.junit.Assert.assertNotNull(doubleArray45);
        org.junit.Assert.assertNotNull(doubleArray46);
        org.junit.Assert.assertNotNull(doubleList47);
        org.junit.Assert.assertNotNull(doubleList48);
        org.junit.Assert.assertNotNull(doubleList49);
        org.junit.Assert.assertNotNull(doubleList50);
    }
}

