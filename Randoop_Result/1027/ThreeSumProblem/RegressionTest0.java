package ThreeSumProblem;

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test0001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0001");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.TwoPointer(intArray6, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"a\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
    }

    @Test
    public void test0002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0002");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        java.lang.Class<?> wildcardClass9 = intArray4.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0003");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        java.lang.Class<?> wildcardClass10 = intArray7.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0004");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        java.lang.Class<?> wildcardClass6 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0005");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem0.Hashmap(intArray29, (int) 'a');
        java.lang.Class<?> wildcardClass36 = intArray29.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0006");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem17.Hashmap(intArray46, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem0.BruteForce(intArray46, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem55.Hashmap(intArray59, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem55.TwoPointer(intArray67, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.Hashmap(intArray67, 0);
        java.lang.Class<?> wildcardClass74 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0007");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        java.lang.Class<?> wildcardClass6 = intArray3.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0008");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        java.lang.Class<?> wildcardClass12 = intListList11.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0009");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        java.lang.Class<?> wildcardClass42 = intListList41.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0010");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem26.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem26.TwoPointer(intArray38, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem9.Hashmap(intArray38, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem45.Hashmap(intArray49, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem45.TwoPointer(intArray57, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem62.Hashmap(intArray66, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem62.TwoPointer(intArray74, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem45.Hashmap(intArray74, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem9.Hashmap(intArray74, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.TwoPointer(intArray74, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem85 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem86 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray93 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem86.TwoPointer(intArray93, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem85.TwoPointer(intArray93, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList99 = threeSumProblem0.Hashmap(intArray93, (int) (short) 1);
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(intListList99);
    }

    @Test
    public void test0011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0011");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        java.lang.Class<?> wildcardClass14 = intListList13.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0012");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem17.Hashmap(intArray46, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem0.BruteForce(intArray46, (int) (byte) 0);
        java.lang.Class<?> wildcardClass55 = intListList54.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0013");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem17.Hashmap(intArray46, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem0.BruteForce(intArray46, (int) (byte) 0);
        java.lang.Class<?> wildcardClass55 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0014");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem18.TwoPointer(intArray25, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem17.TwoPointer(intArray25, (int) (byte) 0);
        int[] intArray34 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray34, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray34, (int) ' ');
        int[] intArray39 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.TwoPointer(intArray39, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"a\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
    }

    @Test
    public void test0015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0015");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem13.BruteForce(intArray16, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem12.Hashmap(intArray16, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem12.TwoPointer(intArray24, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem29.Hashmap(intArray33, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem29.TwoPointer(intArray41, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem47.BruteForce(intArray50, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem46.Hashmap(intArray50, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem46.TwoPointer(intArray58, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem29.Hashmap(intArray58, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem12.BruteForce(intArray58, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem67.Hashmap(intArray71, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem76.BruteForce(intArray79, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem67.TwoPointer(intArray79, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem12.Hashmap(intArray79, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.TwoPointer(intArray79, (int) (byte) -1);
        java.lang.Class<?> wildcardClass88 = intListList87.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0016");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem26.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem26.TwoPointer(intArray38, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem9.Hashmap(intArray38, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem45.Hashmap(intArray49, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem45.TwoPointer(intArray57, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem62.Hashmap(intArray66, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem62.TwoPointer(intArray74, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem45.Hashmap(intArray74, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem9.Hashmap(intArray74, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.TwoPointer(intArray74, (int) (byte) 10);
        java.lang.Class<?> wildcardClass85 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0017");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        java.lang.Class<?> wildcardClass10 = intListList9.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0018");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem26.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem26.TwoPointer(intArray38, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem9.Hashmap(intArray38, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem45.Hashmap(intArray49, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem45.TwoPointer(intArray57, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem62.Hashmap(intArray66, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem62.TwoPointer(intArray74, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem45.Hashmap(intArray74, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem9.Hashmap(intArray74, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.TwoPointer(intArray74, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem85 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem86 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray93 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem86.TwoPointer(intArray93, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem85.TwoPointer(intArray93, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList99 = threeSumProblem0.TwoPointer(intArray93, (int) ' ');
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(intListList99);
    }

    @Test
    public void test0019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0019");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        java.lang.Class<?> wildcardClass14 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0020");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem51.Hashmap(intArray55, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem51.TwoPointer(intArray63, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem34.Hashmap(intArray63, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem17.BruteForce(intArray63, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem72.Hashmap(intArray76, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem81 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem81.BruteForce(intArray84, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem72.TwoPointer(intArray84, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem17.Hashmap(intArray84, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem0.Hashmap(intArray84, (int) (byte) 100);
        java.lang.Class<?> wildcardClass93 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0021");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        java.lang.Class<?> wildcardClass17 = intListList16.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0022");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem26.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem26.TwoPointer(intArray38, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem9.Hashmap(intArray38, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem45.Hashmap(intArray49, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem45.TwoPointer(intArray57, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem62.Hashmap(intArray66, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem62.TwoPointer(intArray74, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem45.Hashmap(intArray74, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem9.Hashmap(intArray74, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.TwoPointer(intArray74, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem85 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray92 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem85.TwoPointer(intArray92, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.Hashmap(intArray92, (int) ' ');
        java.lang.Class<?> wildcardClass97 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0023");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem26.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem26.TwoPointer(intArray38, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem9.Hashmap(intArray38, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem0.BruteForce(intArray38, 10);
        java.lang.Class<?> wildcardClass47 = intArray38.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0024");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem26.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem26.TwoPointer(intArray38, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem9.Hashmap(intArray38, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem0.BruteForce(intArray38, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem47.Hashmap(intArray51, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem47.TwoPointer(intArray59, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem64.Hashmap(intArray68, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem64.TwoPointer(intArray76, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem47.Hashmap(intArray76, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.BruteForce(intArray76, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem85 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem86 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray93 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem86.TwoPointer(intArray93, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem85.TwoPointer(intArray93, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList99 = threeSumProblem0.BruteForce(intArray93, (int) '#');
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(intListList99);
    }

    @Test
    public void test0025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0025");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, 10);
        java.lang.Class<?> wildcardClass13 = intArray8.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0026");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem18.TwoPointer(intArray25, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem17.TwoPointer(intArray25, (int) (byte) 0);
        int[] intArray34 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray34, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray34, (int) ' ');
        java.lang.Class<?> wildcardClass39 = intListList38.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0027");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem26.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem26.TwoPointer(intArray38, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem9.Hashmap(intArray38, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem0.BruteForce(intArray38, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem47.Hashmap(intArray51, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem47.TwoPointer(intArray59, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem64.Hashmap(intArray68, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem64.TwoPointer(intArray76, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem47.Hashmap(intArray76, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.BruteForce(intArray76, 10);
        java.lang.Class<?> wildcardClass85 = intListList84.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0028");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        java.lang.Class<?> wildcardClass12 = intArray9.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0029");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem26.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem26.TwoPointer(intArray38, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem9.Hashmap(intArray38, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem0.BruteForce(intArray38, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem47.Hashmap(intArray51, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem47.TwoPointer(intArray59, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem64.Hashmap(intArray68, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem64.TwoPointer(intArray76, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem47.Hashmap(intArray76, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.BruteForce(intArray76, (int) '#');
        java.lang.Class<?> wildcardClass85 = intArray76.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0030");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem26.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem26.TwoPointer(intArray38, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem9.Hashmap(intArray38, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem0.BruteForce(intArray38, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem47.Hashmap(intArray51, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem47.TwoPointer(intArray59, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem64.Hashmap(intArray68, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem64.TwoPointer(intArray76, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem47.Hashmap(intArray76, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.BruteForce(intArray76, 10);
        int[] intArray91 = new int[] { (byte) 100, (short) 0, (-1), (short) 100, 'a', (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem0.BruteForce(intArray91, (int) (short) 0);
        java.lang.Class<?> wildcardClass94 = intArray91.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[100, 0, -1, 100, 97, -1]");
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0031");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        int[] intArray20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem0.Hashmap(intArray20, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"a\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
    }

    @Test
    public void test0032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0032");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem42.TwoPointer(intArray51, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.BruteForce(intArray51, (int) (byte) 100);
        int[] intArray63 = new int[] { '#', 10, (byte) 0, 10, ' ' };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem0.Hashmap(intArray63, (int) (byte) -1);
        java.lang.Class<?> wildcardClass66 = intListList65.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 10, 10, 32, 35]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test0033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0033");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList7 = threeSumProblem2.BruteForce(intArray5, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem1.Hashmap(intArray5, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem11.BruteForce(intArray14, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem10.Hashmap(intArray14, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem10.TwoPointer(intArray22, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem28.BruteForce(intArray31, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem27.Hashmap(intArray31, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem27.TwoPointer(intArray39, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem10.Hashmap(intArray39, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem47.BruteForce(intArray50, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem46.Hashmap(intArray50, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem46.TwoPointer(intArray58, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem63.Hashmap(intArray67, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem72.BruteForce(intArray75, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem63.TwoPointer(intArray75, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem46.Hashmap(intArray75, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem10.Hashmap(intArray75, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem1.TwoPointer(intArray75, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.TwoPointer(intArray75, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem88 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray91 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem88.BruteForce(intArray91, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.BruteForce(intArray91, (-1));
        java.lang.Class<?> wildcardClass96 = intArray91.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList7);
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0034");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem20.TwoPointer(intArray32, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem37.TwoPointer(intArray49, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem54.Hashmap(intArray58, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem54.TwoPointer(intArray66, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem37.Hashmap(intArray66, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem20.BruteForce(intArray66, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem76.BruteForce(intArray79, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem75.Hashmap(intArray79, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem84 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem84.BruteForce(intArray87, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem75.TwoPointer(intArray87, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem20.Hashmap(intArray87, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.Hashmap(intArray87, (int) ' ');
        java.lang.Class<?> wildcardClass96 = intListList95.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0035");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem42.TwoPointer(intArray51, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.BruteForce(intArray51, (int) (byte) 100);
        java.lang.Class<?> wildcardClass58 = intListList57.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0036");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem20.TwoPointer(intArray32, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem37.TwoPointer(intArray49, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem54.Hashmap(intArray58, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem54.TwoPointer(intArray66, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem37.Hashmap(intArray66, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem20.BruteForce(intArray66, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem76.BruteForce(intArray79, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem75.Hashmap(intArray79, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem84 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem84.BruteForce(intArray87, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem75.TwoPointer(intArray87, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem20.Hashmap(intArray87, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.Hashmap(intArray87, (int) ' ');
        java.lang.Class<?> wildcardClass96 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0037");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem18.TwoPointer(intArray25, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem17.TwoPointer(intArray25, (int) (byte) 0);
        int[] intArray34 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray34, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray34, (int) ' ');
        java.lang.Class<?> wildcardClass39 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0038");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.BruteForce(intArray29, 0);
        java.lang.Class<?> wildcardClass34 = intListList33.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0039");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem51.Hashmap(intArray55, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem51.TwoPointer(intArray63, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem69.BruteForce(intArray72, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem68.Hashmap(intArray72, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem77.BruteForce(intArray80, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem68.TwoPointer(intArray80, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem51.Hashmap(intArray80, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem34.BruteForce(intArray80, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem0.Hashmap(intArray80, (int) (byte) 0);
        java.lang.Class<?> wildcardClass91 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0040");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem0.Hashmap(intArray29, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem36.Hashmap(intArray40, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem36.TwoPointer(intArray48, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem53.Hashmap(intArray57, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem53.TwoPointer(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem36.Hashmap(intArray65, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.Hashmap(intArray65, 0);
        java.lang.Class<?> wildcardClass74 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0041");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem26.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem26.TwoPointer(intArray38, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem9.Hashmap(intArray38, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem0.BruteForce(intArray38, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem47.Hashmap(intArray51, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem47.TwoPointer(intArray59, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem64.Hashmap(intArray68, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem64.TwoPointer(intArray76, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem47.Hashmap(intArray76, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.BruteForce(intArray76, 10);
        java.lang.Class<?> wildcardClass85 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0042");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem17.Hashmap(intArray46, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem0.BruteForce(intArray46, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem55.Hashmap(intArray59, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem55.TwoPointer(intArray67, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.Hashmap(intArray67, 0);
        java.lang.Class<?> wildcardClass74 = intArray67.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0043");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        java.lang.Class<?> wildcardClass42 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0044");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        java.lang.Class<?> wildcardClass20 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0045");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        java.lang.Class<?> wildcardClass17 = intArray12.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0046");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem26.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem26.TwoPointer(intArray38, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem9.Hashmap(intArray38, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem0.BruteForce(intArray38, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem47.Hashmap(intArray51, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem47.TwoPointer(intArray59, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem64.Hashmap(intArray68, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem64.TwoPointer(intArray76, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem47.Hashmap(intArray76, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.BruteForce(intArray76, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem85 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray92 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem85.TwoPointer(intArray92, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.BruteForce(intArray92, (int) (byte) 1);
        java.lang.Class<?> wildcardClass97 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0047");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        java.lang.Class<?> wildcardClass9 = intListList8.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0048");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList7 = threeSumProblem2.BruteForce(intArray5, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem1.Hashmap(intArray5, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem1.TwoPointer(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem18.Hashmap(intArray22, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem18.TwoPointer(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem1.Hashmap(intArray30, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem37.TwoPointer(intArray49, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem54.Hashmap(intArray58, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem54.TwoPointer(intArray66, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem37.Hashmap(intArray66, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem1.Hashmap(intArray66, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem0.TwoPointer(intArray66, (int) '#');
        int[] intArray79 = new int[] { 10, (byte) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem0.BruteForce(intArray79, (int) (short) 100);
        java.lang.Class<?> wildcardClass82 = intArray79.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList7);
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[10, 0]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0049");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem20.TwoPointer(intArray32, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem37.TwoPointer(intArray49, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem20.Hashmap(intArray49, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem56.Hashmap(intArray60, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem56.TwoPointer(intArray68, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem73.Hashmap(intArray77, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem82 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem82.BruteForce(intArray85, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem73.TwoPointer(intArray85, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem56.Hashmap(intArray85, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem20.Hashmap(intArray85, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.BruteForce(intArray85, (int) (byte) 1);
        java.lang.Class<?> wildcardClass96 = intArray85.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0050");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList7 = threeSumProblem2.BruteForce(intArray5, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem1.Hashmap(intArray5, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem1.TwoPointer(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem18.Hashmap(intArray22, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem18.TwoPointer(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem1.Hashmap(intArray30, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem37.TwoPointer(intArray49, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem54.Hashmap(intArray58, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem54.TwoPointer(intArray66, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem37.Hashmap(intArray66, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem1.Hashmap(intArray66, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem0.TwoPointer(intArray66, (int) '#');
        int[] intArray79 = new int[] { 10, (byte) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem0.BruteForce(intArray79, (int) (short) 100);
        java.lang.Class<?> wildcardClass82 = intListList81.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList7);
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[10, 0]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0051");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList7 = threeSumProblem2.BruteForce(intArray5, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem1.Hashmap(intArray5, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem11.BruteForce(intArray14, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem10.Hashmap(intArray14, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem10.TwoPointer(intArray22, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem28.BruteForce(intArray31, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem27.Hashmap(intArray31, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem27.TwoPointer(intArray39, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem10.Hashmap(intArray39, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem47.BruteForce(intArray50, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem46.Hashmap(intArray50, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem46.TwoPointer(intArray58, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem63.Hashmap(intArray67, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem72.BruteForce(intArray75, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem63.TwoPointer(intArray75, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem46.Hashmap(intArray75, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem10.Hashmap(intArray75, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem1.TwoPointer(intArray75, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.TwoPointer(intArray75, (int) (byte) 10);
        java.lang.Class<?> wildcardClass88 = intListList87.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList7);
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0052");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        int[] intArray26 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem9.Hashmap(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem30.TwoPointer(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem29.TwoPointer(intArray37, (int) (byte) 0);
        int[] intArray46 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem29.Hashmap(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem9.Hashmap(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.Hashmap(intArray46, (int) '4');
        java.lang.Class<?> wildcardClass53 = intArray46.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0053");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem42.TwoPointer(intArray51, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.BruteForce(intArray51, (int) (byte) 100);
        java.lang.Class<?> wildcardClass58 = intArray51.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0054");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem26.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem26.TwoPointer(intArray38, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem9.Hashmap(intArray38, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem45.Hashmap(intArray49, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem45.TwoPointer(intArray57, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem62.Hashmap(intArray66, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem62.TwoPointer(intArray74, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem45.Hashmap(intArray74, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem9.Hashmap(intArray74, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.TwoPointer(intArray74, (int) (byte) 10);
        java.lang.Class<?> wildcardClass85 = intArray74.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0055");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem14.Hashmap(intArray18, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem23.BruteForce(intArray26, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem14.TwoPointer(intArray26, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem0.BruteForce(intArray26, (int) ' ');
        java.lang.Class<?> wildcardClass33 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0056");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        java.lang.Class<?> wildcardClass14 = intArray9.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0057");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem42.TwoPointer(intArray51, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.BruteForce(intArray51, (int) (byte) 100);
        int[] intArray63 = new int[] { '#', 10, (byte) 0, 10, ' ' };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem0.Hashmap(intArray63, (int) (byte) -1);
        int[] intArray66 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem0.BruteForce(intArray66, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 10, 10, 32, 35]");
        org.junit.Assert.assertNotNull(intListList65);
    }

    @Test
    public void test0058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0058");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem26.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem26.TwoPointer(intArray38, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem9.Hashmap(intArray38, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem0.BruteForce(intArray38, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem47.Hashmap(intArray51, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem47.TwoPointer(intArray59, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem64.Hashmap(intArray68, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem64.TwoPointer(intArray76, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem47.Hashmap(intArray76, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.BruteForce(intArray76, (int) '#');
        java.lang.Class<?> wildcardClass85 = intListList84.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0059");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem26.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem26.TwoPointer(intArray38, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem9.Hashmap(intArray38, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem45.Hashmap(intArray49, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem45.TwoPointer(intArray57, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem62.Hashmap(intArray66, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem62.TwoPointer(intArray74, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem45.Hashmap(intArray74, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem9.Hashmap(intArray74, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.TwoPointer(intArray74, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem85 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray92 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem85.TwoPointer(intArray92, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.Hashmap(intArray92, (int) ' ');
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList99 = threeSumProblem0.Hashmap(intArray97, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"a\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
    }

    @Test
    public void test0060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0060");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem0.Hashmap(intArray45, (int) (byte) 10);
        java.lang.Class<?> wildcardClass50 = intListList49.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0061");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        int[] intArray26 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem9.Hashmap(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem30.TwoPointer(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem29.TwoPointer(intArray37, (int) (byte) 0);
        int[] intArray46 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem29.Hashmap(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem9.Hashmap(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.Hashmap(intArray46, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray62 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem53.BruteForce(intArray62, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem53.Hashmap(intArray68, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray82 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem73.BruteForce(intArray82, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem53.BruteForce(intArray82, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.BruteForce(intArray82, (int) (byte) -1);
        java.lang.Class<?> wildcardClass89 = intArray82.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0062");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray37, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem0.Hashmap(intArray45, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem50.BruteForce(intArray53, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.TwoPointer(intArray53, (int) ' ');
        java.lang.Class<?> wildcardClass58 = intListList57.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0063");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList7 = threeSumProblem2.BruteForce(intArray5, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem1.Hashmap(intArray5, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem11.BruteForce(intArray14, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem10.Hashmap(intArray14, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem10.TwoPointer(intArray22, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem28.BruteForce(intArray31, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem27.Hashmap(intArray31, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem27.TwoPointer(intArray39, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem10.Hashmap(intArray39, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem47.BruteForce(intArray50, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem46.Hashmap(intArray50, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem46.TwoPointer(intArray58, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem63.Hashmap(intArray67, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem72.BruteForce(intArray75, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem63.TwoPointer(intArray75, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem46.Hashmap(intArray75, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem10.Hashmap(intArray75, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem1.TwoPointer(intArray75, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.TwoPointer(intArray75, (int) (byte) 10);
        int[] intArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem0.Hashmap(intArray88, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"a\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList7);
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
    }

    @Test
    public void test0064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0064");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList7 = threeSumProblem2.BruteForce(intArray5, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem1.Hashmap(intArray5, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem1.TwoPointer(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem18.Hashmap(intArray22, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem18.TwoPointer(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem1.Hashmap(intArray30, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem37.TwoPointer(intArray49, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem54.Hashmap(intArray58, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem54.TwoPointer(intArray66, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem37.Hashmap(intArray66, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem1.Hashmap(intArray66, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem0.TwoPointer(intArray66, (int) '#');
        java.lang.Class<?> wildcardClass77 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList7);
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0065");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem14.Hashmap(intArray18, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem23.Hashmap(intArray27, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem23.TwoPointer(intArray35, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem40.Hashmap(intArray44, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem40.TwoPointer(intArray52, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem23.Hashmap(intArray52, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem14.BruteForce(intArray52, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem0.Hashmap(intArray52, 100);
        java.lang.Class<?> wildcardClass63 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0066");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem14.TwoPointer(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem13.TwoPointer(intArray21, (int) (byte) 0);
        int[] intArray30 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem13.Hashmap(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem0.Hashmap(intArray30, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem35.Hashmap(intArray39, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem44.BruteForce(intArray47, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem35.TwoPointer(intArray47, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem53.BruteForce(intArray56, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem52.Hashmap(intArray56, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem61.BruteForce(intArray64, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem52.TwoPointer(intArray64, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem70.BruteForce(intArray73, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem69.Hashmap(intArray73, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem78.BruteForce(intArray81, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem69.TwoPointer(intArray81, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem52.Hashmap(intArray81, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem35.BruteForce(intArray81, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem0.BruteForce(intArray81, (int) (byte) 0);
        java.lang.Class<?> wildcardClass92 = intArray81.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0067");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.Hashmap(intArray21, 0);
        java.lang.Class<?> wildcardClass28 = intArray21.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0068");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem42.Hashmap(intArray46, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem42.TwoPointer(intArray54, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem59.Hashmap(intArray63, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem59.TwoPointer(intArray71, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem42.Hashmap(intArray71, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem0.TwoPointer(intArray71, (int) (byte) 10);
        java.lang.Class<?> wildcardClass80 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0069");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        java.lang.Class<?> wildcardClass13 = intArray8.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0070");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem0.Hashmap(intArray45, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray59 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem50.BruteForce(intArray59, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem50.Hashmap(intArray65, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray79 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem70.BruteForce(intArray79, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem50.TwoPointer(intArray79, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.Hashmap(intArray79, (-1));
        java.lang.Class<?> wildcardClass86 = intArray79.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0071");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem0.BruteForce(intArray17, (int) (short) 1);
        java.lang.Class<?> wildcardClass24 = intListList23.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0072");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem18.Hashmap(intArray22, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem18.TwoPointer(intArray30, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem35.Hashmap(intArray39, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem44.BruteForce(intArray47, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem35.TwoPointer(intArray47, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem18.Hashmap(intArray47, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem9.BruteForce(intArray47, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem56.Hashmap(intArray60, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem56.TwoPointer(intArray68, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem73.Hashmap(intArray77, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem82 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem82.BruteForce(intArray85, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem73.TwoPointer(intArray85, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem56.Hashmap(intArray85, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem9.BruteForce(intArray85, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.BruteForce(intArray85, (int) (short) -1);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.BruteForce(intArray96, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
    }

    @Test
    public void test0073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0073");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem18.TwoPointer(intArray25, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem17.TwoPointer(intArray25, (int) (byte) 0);
        int[] intArray34 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray34, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray34, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem39.Hashmap(intArray43, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem48.Hashmap(intArray52, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem39.BruteForce(intArray52, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem60.TwoPointer(intArray67, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem59.TwoPointer(intArray67, (int) (byte) 0);
        int[] intArray76 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem59.Hashmap(intArray76, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem39.BruteForce(intArray76, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem81 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem81.BruteForce(intArray84, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem39.Hashmap(intArray84, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem89 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray92 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem89.BruteForce(intArray92, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem39.TwoPointer(intArray92, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.TwoPointer(intArray92, (int) (byte) 100);
        java.lang.Class<?> wildcardClass99 = intListList98.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0074");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem35.TwoPointer(intArray42, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem34.TwoPointer(intArray42, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem0.Hashmap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem49.TwoPointer(intArray58, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem63.Hashmap(intArray67, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem72.BruteForce(intArray75, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem63.TwoPointer(intArray75, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem49.BruteForce(intArray75, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem0.BruteForce(intArray75, (int) (short) -1);
        java.lang.Class<?> wildcardClass84 = intListList83.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0075");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray37, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem42.Hashmap(intArray46, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem51.Hashmap(intArray55, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem42.BruteForce(intArray55, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem0.TwoPointer(intArray55, (int) ' ');
        java.lang.Class<?> wildcardClass64 = intListList63.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0076");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem0.Hashmap(intArray29, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem36.Hashmap(intArray40, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem36.TwoPointer(intArray48, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem53.Hashmap(intArray57, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem53.TwoPointer(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem36.Hashmap(intArray65, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.Hashmap(intArray65, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray83 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem74.BruteForce(intArray83, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.BruteForce(intArray83, 100);
        java.lang.Class<?> wildcardClass88 = intListList87.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0077");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem17.Hashmap(intArray46, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem0.BruteForce(intArray46, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem55.Hashmap(intArray59, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem55.TwoPointer(intArray67, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.Hashmap(intArray67, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem75.TwoPointer(intArray82, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem74.TwoPointer(intArray82, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.Hashmap(intArray82, (int) 'a');
        java.lang.Class<?> wildcardClass89 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0078");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem26.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem26.TwoPointer(intArray38, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem9.Hashmap(intArray38, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem45.Hashmap(intArray49, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem45.TwoPointer(intArray57, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem62.Hashmap(intArray66, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem62.TwoPointer(intArray74, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem45.Hashmap(intArray74, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem9.Hashmap(intArray74, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.TwoPointer(intArray74, (int) (byte) 10);
        java.lang.Class<?> wildcardClass85 = intListList84.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0079");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem17.Hashmap(intArray46, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem0.BruteForce(intArray46, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray64 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem55.BruteForce(intArray64, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem67.BruteForce(intArray70, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem55.Hashmap(intArray70, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem0.TwoPointer(intArray70, 100);
        java.lang.Class<?> wildcardClass77 = intArray70.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0080");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.Hashmap(intArray21, 0);
        java.lang.Class<?> wildcardClass28 = intListList27.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0081");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem17.Hashmap(intArray46, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem0.BruteForce(intArray46, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray64 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem55.BruteForce(intArray64, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem67.BruteForce(intArray70, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem55.Hashmap(intArray70, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem0.TwoPointer(intArray70, 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem78.BruteForce(intArray81, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem77.Hashmap(intArray81, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem86 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem86.BruteForce(intArray89, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem77.TwoPointer(intArray89, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.TwoPointer(intArray89, 0);
        java.lang.Class<?> wildcardClass96 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0082");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem0.BruteForce(intArray17, (int) (short) 1);
        java.lang.Class<?> wildcardClass24 = intArray17.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0083");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList7 = threeSumProblem2.BruteForce(intArray5, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem1.Hashmap(intArray5, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem1.TwoPointer(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem18.Hashmap(intArray22, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem18.TwoPointer(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem1.Hashmap(intArray30, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem37.TwoPointer(intArray49, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem54.Hashmap(intArray58, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem54.TwoPointer(intArray66, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem37.Hashmap(intArray66, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem1.Hashmap(intArray66, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem0.TwoPointer(intArray66, (int) '#');
        java.lang.Class<?> wildcardClass77 = intListList76.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList7);
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0084");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        int[] intArray12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem0.Hashmap(intArray12, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"a\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
    }

    @Test
    public void test0085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0085");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.BruteForce(intArray29, 0);
        java.lang.Class<?> wildcardClass34 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0086");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        int[] intArray26 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem9.Hashmap(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem30.TwoPointer(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem29.TwoPointer(intArray37, (int) (byte) 0);
        int[] intArray46 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem29.Hashmap(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem9.Hashmap(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.Hashmap(intArray46, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray62 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem53.BruteForce(intArray62, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem53.Hashmap(intArray68, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray82 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem73.BruteForce(intArray82, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem53.BruteForce(intArray82, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.BruteForce(intArray82, (int) (byte) -1);
        int[] intArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem0.TwoPointer(intArray89, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"a\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
    }

    @Test
    public void test0087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0087");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem51.Hashmap(intArray55, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem51.TwoPointer(intArray63, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem69.BruteForce(intArray72, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem68.Hashmap(intArray72, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem77.BruteForce(intArray80, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem68.TwoPointer(intArray80, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem51.Hashmap(intArray80, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem34.BruteForce(intArray80, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem0.Hashmap(intArray80, (int) (byte) 100);
        java.lang.Class<?> wildcardClass91 = intArray80.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0088");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem26.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem26.TwoPointer(intArray38, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem9.Hashmap(intArray38, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem0.BruteForce(intArray38, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem47.Hashmap(intArray51, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem47.TwoPointer(intArray59, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem64.Hashmap(intArray68, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem64.TwoPointer(intArray76, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem47.Hashmap(intArray76, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.BruteForce(intArray76, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem85 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray92 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem85.TwoPointer(intArray92, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.BruteForce(intArray92, (int) (byte) 1);
        java.lang.Class<?> wildcardClass97 = intListList96.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0089");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem42.TwoPointer(intArray51, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.BruteForce(intArray51, (int) (byte) 100);
        int[] intArray63 = new int[] { '#', 10, (byte) 0, 10, ' ' };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem0.Hashmap(intArray63, (int) (byte) -1);
        java.lang.Class<?> wildcardClass66 = intArray63.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 10, 10, 32, 35]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test0090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0090");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList7 = threeSumProblem2.BruteForce(intArray5, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem1.Hashmap(intArray5, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem11.BruteForce(intArray14, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem10.Hashmap(intArray14, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem10.TwoPointer(intArray22, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem28.BruteForce(intArray31, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem27.Hashmap(intArray31, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem27.TwoPointer(intArray39, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem10.Hashmap(intArray39, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem1.BruteForce(intArray39, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem48.Hashmap(intArray52, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem48.TwoPointer(intArray60, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem66.BruteForce(intArray69, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem65.Hashmap(intArray69, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem65.TwoPointer(intArray77, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem48.Hashmap(intArray77, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem1.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.TwoPointer(intArray77, (int) (byte) -1);
        java.lang.Class<?> wildcardClass88 = intListList87.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList7);
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0091");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem51.Hashmap(intArray55, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem51.TwoPointer(intArray63, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem69.BruteForce(intArray72, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem68.Hashmap(intArray72, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem77.BruteForce(intArray80, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem68.TwoPointer(intArray80, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem51.Hashmap(intArray80, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem34.BruteForce(intArray80, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem0.Hashmap(intArray80, (int) (byte) 0);
        java.lang.Class<?> wildcardClass91 = intArray80.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0092");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem18.TwoPointer(intArray25, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem17.TwoPointer(intArray25, (int) (byte) 0);
        int[] intArray34 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray34, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem38.TwoPointer(intArray45, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem37.TwoPointer(intArray45, (int) (byte) 0);
        int[] intArray54 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem37.Hashmap(intArray54, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem17.Hashmap(intArray54, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem17.Hashmap(intArray62, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem0.TwoPointer(intArray62, (int) (byte) -1);
        java.lang.Class<?> wildcardClass69 = intListList68.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0093");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem13.Hashmap(intArray17, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem22.BruteForce(intArray25, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem13.TwoPointer(intArray25, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem30.TwoPointer(intArray42, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem13.Hashmap(intArray42, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem0.Hashmap(intArray42, (int) (byte) -1);
        java.lang.Class<?> wildcardClass51 = intArray42.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test0094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0094");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem13.Hashmap(intArray17, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem23.TwoPointer(intArray30, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem22.TwoPointer(intArray30, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem13.BruteForce(intArray30, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.BruteForce(intArray30, (int) (byte) -1);
        java.lang.Class<?> wildcardClass39 = intArray30.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0095");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList7 = threeSumProblem2.BruteForce(intArray5, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem1.Hashmap(intArray5, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem11.BruteForce(intArray14, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem10.Hashmap(intArray14, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem10.TwoPointer(intArray22, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem28.BruteForce(intArray31, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem27.Hashmap(intArray31, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem27.TwoPointer(intArray39, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem10.Hashmap(intArray39, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem47.BruteForce(intArray50, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem46.Hashmap(intArray50, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem46.TwoPointer(intArray58, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem63.Hashmap(intArray67, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem72.BruteForce(intArray75, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem63.TwoPointer(intArray75, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem46.Hashmap(intArray75, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem10.Hashmap(intArray75, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem1.TwoPointer(intArray75, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.TwoPointer(intArray75, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem88 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray91 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem88.BruteForce(intArray91, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.BruteForce(intArray91, (-1));
        java.lang.Class<?> wildcardClass96 = intListList95.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList7);
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0096");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem0.Hashmap(intArray29, (int) 'a');
        java.lang.Class<?> wildcardClass36 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0097");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        java.lang.Class<?> wildcardClass16 = intArray13.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0098");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem20.TwoPointer(intArray32, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray32, (int) (byte) -1);
        java.lang.Class<?> wildcardClass39 = intArray32.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0099");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem17.Hashmap(intArray46, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem0.BruteForce(intArray46, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem55.Hashmap(intArray59, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem55.TwoPointer(intArray67, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.Hashmap(intArray67, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem75.TwoPointer(intArray82, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem74.TwoPointer(intArray82, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.Hashmap(intArray82, (int) 'a');
        java.lang.Class<?> wildcardClass89 = intListList88.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0100");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem20.TwoPointer(intArray29, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem44.BruteForce(intArray47, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem43.Hashmap(intArray47, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem43.TwoPointer(intArray55, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem61.BruteForce(intArray64, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem60.Hashmap(intArray64, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem69.BruteForce(intArray72, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem60.TwoPointer(intArray72, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem43.Hashmap(intArray72, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem34.BruteForce(intArray72, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem20.Hashmap(intArray72, 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.Hashmap(intArray72, (int) (byte) 10);
        java.lang.Class<?> wildcardClass85 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0101");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem18.TwoPointer(intArray25, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem17.TwoPointer(intArray25, (int) (byte) 0);
        int[] intArray34 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray34, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem38.TwoPointer(intArray45, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem37.TwoPointer(intArray45, (int) (byte) 0);
        int[] intArray54 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem37.Hashmap(intArray54, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem17.Hashmap(intArray54, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem17.Hashmap(intArray62, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem0.TwoPointer(intArray62, (int) (byte) -1);
        java.lang.Class<?> wildcardClass69 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0102");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem18.TwoPointer(intArray25, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem17.TwoPointer(intArray25, (int) (byte) 0);
        int[] intArray34 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray34, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray34, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem40.TwoPointer(intArray47, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem39.TwoPointer(intArray47, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem0.BruteForce(intArray47, 100);
        java.lang.Class<?> wildcardClass54 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0103");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem42.TwoPointer(intArray51, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.BruteForce(intArray51, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem58.Hashmap(intArray62, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem67.BruteForce(intArray70, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem58.TwoPointer(intArray70, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem0.TwoPointer(intArray70, (int) ' ');
        java.lang.Class<?> wildcardClass77 = intListList76.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0104");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem0.Hashmap(intArray29, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem36.Hashmap(intArray40, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem36.TwoPointer(intArray48, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem53.Hashmap(intArray57, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem53.TwoPointer(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem36.Hashmap(intArray65, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.Hashmap(intArray65, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray83 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem74.BruteForce(intArray83, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.BruteForce(intArray83, 100);
        java.lang.Class<?> wildcardClass88 = intArray83.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0105");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem13.BruteForce(intArray16, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem12.Hashmap(intArray16, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem12.TwoPointer(intArray24, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem29.Hashmap(intArray33, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem29.TwoPointer(intArray41, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem47.BruteForce(intArray50, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem46.Hashmap(intArray50, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem46.TwoPointer(intArray58, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem29.Hashmap(intArray58, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem12.BruteForce(intArray58, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem67.Hashmap(intArray71, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem76.BruteForce(intArray79, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem67.TwoPointer(intArray79, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem12.Hashmap(intArray79, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.TwoPointer(intArray79, (int) (byte) -1);
        java.lang.Class<?> wildcardClass88 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0106");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem13.Hashmap(intArray17, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem23.BruteForce(intArray26, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem22.Hashmap(intArray26, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem13.BruteForce(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem34.TwoPointer(intArray41, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem33.TwoPointer(intArray41, (int) (byte) 0);
        int[] intArray50 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem33.Hashmap(intArray50, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem13.BruteForce(intArray50, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem13.Hashmap(intArray58, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem13.TwoPointer(intArray66, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem0.Hashmap(intArray66, (-1));
        java.lang.Class<?> wildcardClass73 = intArray66.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0107");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem18.Hashmap(intArray22, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem18.TwoPointer(intArray30, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem35.Hashmap(intArray39, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem44.BruteForce(intArray47, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem35.TwoPointer(intArray47, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem18.Hashmap(intArray47, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem9.BruteForce(intArray47, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem56.Hashmap(intArray60, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem56.TwoPointer(intArray68, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem73.Hashmap(intArray77, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem82 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem82.BruteForce(intArray85, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem73.TwoPointer(intArray85, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem56.Hashmap(intArray85, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem9.BruteForce(intArray85, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.BruteForce(intArray85, (int) (short) -1);
        java.lang.Class<?> wildcardClass96 = intArray85.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0108");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem42.TwoPointer(intArray51, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.BruteForce(intArray51, (int) (byte) 100);
        int[] intArray63 = new int[] { '#', 10, (byte) 0, 10, ' ' };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem0.Hashmap(intArray63, (int) (byte) -1);
        java.lang.Class<?> wildcardClass66 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 10, 10, 32, 35]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test0109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0109");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem18.Hashmap(intArray22, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem18.TwoPointer(intArray30, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem35.Hashmap(intArray39, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem44.BruteForce(intArray47, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem35.TwoPointer(intArray47, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem18.Hashmap(intArray47, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem9.BruteForce(intArray47, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem56.Hashmap(intArray60, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem56.TwoPointer(intArray68, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem73.Hashmap(intArray77, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem82 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem82.BruteForce(intArray85, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem73.TwoPointer(intArray85, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem56.Hashmap(intArray85, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem9.BruteForce(intArray85, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.BruteForce(intArray85, (int) (short) -1);
        java.lang.Class<?> wildcardClass96 = intListList95.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0110");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem20.TwoPointer(intArray32, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem37.TwoPointer(intArray49, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem20.Hashmap(intArray49, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem56.Hashmap(intArray60, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem56.TwoPointer(intArray68, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem73.Hashmap(intArray77, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem82 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem82.BruteForce(intArray85, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem73.TwoPointer(intArray85, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem56.Hashmap(intArray85, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem20.Hashmap(intArray85, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.BruteForce(intArray85, (int) (byte) 1);
        java.lang.Class<?> wildcardClass96 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0111");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem42.TwoPointer(intArray51, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.BruteForce(intArray51, (int) (byte) 100);
        java.lang.Class<?> wildcardClass58 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0112");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, 10);
        java.lang.Class<?> wildcardClass13 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0113");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, (int) (byte) 0);
        int[] intArray27 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.Hashmap(intArray27, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem31.TwoPointer(intArray38, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem30.TwoPointer(intArray38, (int) (byte) 0);
        int[] intArray47 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem30.Hashmap(intArray47, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem10.Hashmap(intArray47, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem58.BruteForce(intArray61, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem52.TwoPointer(intArray61, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem10.BruteForce(intArray61, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem0.TwoPointer(intArray61, (int) (byte) 1);
        java.lang.Class<?> wildcardClass70 = intListList69.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0114");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem26.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem26.TwoPointer(intArray38, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem9.Hashmap(intArray38, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem0.BruteForce(intArray38, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem47.Hashmap(intArray51, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem47.TwoPointer(intArray59, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem64.Hashmap(intArray68, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem64.TwoPointer(intArray76, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem47.Hashmap(intArray76, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.BruteForce(intArray76, 10);
        int[] intArray91 = new int[] { (byte) 100, (short) 0, (-1), (short) 100, 'a', (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem0.BruteForce(intArray91, (int) (short) 0);
        java.lang.Class<?> wildcardClass94 = intListList93.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[100, 0, -1, 100, 97, -1]");
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0115");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.TwoPointer(intArray29, (int) ' ');
        int[] intArray34 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem0.Hashmap(intArray34, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"a\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
    }

    @Test
    public void test0116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0116");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem0.Hashmap(intArray29, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray45 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem36.BruteForce(intArray45, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem36.Hashmap(intArray51, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray65 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem56.BruteForce(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem36.TwoPointer(intArray65, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem0.Hashmap(intArray65, (int) (byte) -1);
        java.lang.Class<?> wildcardClass72 = intArray65.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0117");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem26.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem26.TwoPointer(intArray38, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem9.Hashmap(intArray38, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem0.BruteForce(intArray38, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem47.Hashmap(intArray51, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem47.TwoPointer(intArray59, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem64.Hashmap(intArray68, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem64.TwoPointer(intArray76, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem47.Hashmap(intArray76, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.BruteForce(intArray76, 10);
        int[] intArray91 = new int[] { (byte) 100, (short) 0, (-1), (short) 100, 'a', (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem0.BruteForce(intArray91, (int) (short) 0);
        int[] intArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.Hashmap(intArray94, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"a\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[100, 0, -1, 100, 97, -1]");
        org.junit.Assert.assertNotNull(intListList93);
    }

    @Test
    public void test0118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0118");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem17.Hashmap(intArray46, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem0.BruteForce(intArray46, (int) (byte) 0);
        java.lang.Class<?> wildcardClass55 = intArray46.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test0119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0119");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList7 = threeSumProblem2.BruteForce(intArray5, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem1.Hashmap(intArray5, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem11.BruteForce(intArray14, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem10.Hashmap(intArray14, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem10.TwoPointer(intArray22, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem28.BruteForce(intArray31, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem27.Hashmap(intArray31, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem27.TwoPointer(intArray39, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem10.Hashmap(intArray39, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem47.BruteForce(intArray50, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem46.Hashmap(intArray50, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem46.TwoPointer(intArray58, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem63.Hashmap(intArray67, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem72.BruteForce(intArray75, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem63.TwoPointer(intArray75, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem46.Hashmap(intArray75, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem10.Hashmap(intArray75, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem1.TwoPointer(intArray75, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.TwoPointer(intArray75, (int) (byte) 10);
        java.lang.Class<?> wildcardClass88 = intArray75.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList7);
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0120");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem17.Hashmap(intArray46, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem0.BruteForce(intArray46, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem55.Hashmap(intArray59, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem55.TwoPointer(intArray67, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.Hashmap(intArray67, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem75.TwoPointer(intArray82, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem74.TwoPointer(intArray82, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.Hashmap(intArray82, (int) 'a');
        java.lang.Class<?> wildcardClass89 = intArray82.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0121");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray37, (int) '4');
        java.lang.Class<?> wildcardClass42 = intArray37.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0122");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.BruteForce(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.TwoPointer(intArray21, (-1));
        java.lang.Class<?> wildcardClass28 = intArray21.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0123");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem2.TwoPointer(intArray9, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem1.TwoPointer(intArray9, (int) (byte) 0);
        int[] intArray18 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem1.Hashmap(intArray18, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem22.TwoPointer(intArray29, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem21.TwoPointer(intArray29, (int) (byte) 0);
        int[] intArray38 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem21.Hashmap(intArray38, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem1.Hashmap(intArray38, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem1.Hashmap(intArray46, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray60 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem51.BruteForce(intArray60, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem51.Hashmap(intArray66, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        int[] intArray80 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem71.BruteForce(intArray80, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem51.TwoPointer(intArray80, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem1.Hashmap(intArray80, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.Hashmap(intArray80, (int) (short) 10);
        java.lang.Class<?> wildcardClass89 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0124");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem20.TwoPointer(intArray32, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray32, (int) (byte) -1);
        java.lang.Class<?> wildcardClass39 = intListList38.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0125");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList7 = threeSumProblem2.BruteForce(intArray5, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem1.Hashmap(intArray5, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem11.BruteForce(intArray14, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem10.Hashmap(intArray14, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem10.TwoPointer(intArray22, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem28.BruteForce(intArray31, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem27.Hashmap(intArray31, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem27.TwoPointer(intArray39, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem10.Hashmap(intArray39, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem47.BruteForce(intArray50, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem46.Hashmap(intArray50, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem46.TwoPointer(intArray58, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem63.Hashmap(intArray67, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem72.BruteForce(intArray75, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem63.TwoPointer(intArray75, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem46.Hashmap(intArray75, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem10.Hashmap(intArray75, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem1.TwoPointer(intArray75, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.TwoPointer(intArray75, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem88 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray91 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem88.BruteForce(intArray91, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.BruteForce(intArray91, (-1));
        java.lang.Class<?> wildcardClass96 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList7);
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0126");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem2.TwoPointer(intArray9, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem1.TwoPointer(intArray9, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem14.Hashmap(intArray18, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem24.TwoPointer(intArray31, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem23.TwoPointer(intArray31, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem14.BruteForce(intArray31, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem1.BruteForce(intArray31, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray31, (int) (byte) 100);
        java.lang.Class<?> wildcardClass42 = intArray31.getClass();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0127");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        int[] intArray26 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem9.Hashmap(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem30.TwoPointer(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem29.TwoPointer(intArray37, (int) (byte) 0);
        int[] intArray46 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem29.Hashmap(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem9.Hashmap(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.Hashmap(intArray46, (int) '4');
        java.lang.Class<?> wildcardClass53 = intListList52.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0128");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem51.Hashmap(intArray55, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem51.TwoPointer(intArray63, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem69.BruteForce(intArray72, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem68.Hashmap(intArray72, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem77.BruteForce(intArray80, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem68.TwoPointer(intArray80, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem51.Hashmap(intArray80, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem34.BruteForce(intArray80, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem0.Hashmap(intArray80, (int) (byte) 0);
        java.lang.Class<?> wildcardClass91 = intListList90.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0129");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.BruteForce(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.TwoPointer(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem28.Hashmap(intArray32, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.BruteForce(intArray32, (int) (byte) 1);
        java.lang.Class<?> wildcardClass39 = intListList38.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0130");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem18.Hashmap(intArray22, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem9.BruteForce(intArray22, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem30.TwoPointer(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem29.TwoPointer(intArray37, (int) (byte) 0);
        int[] intArray46 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem29.Hashmap(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem9.BruteForce(intArray46, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.TwoPointer(intArray46, (int) (short) 1);
        java.lang.Class<?> wildcardClass53 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0131");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, (int) (byte) 0);
        int[] intArray27 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.Hashmap(intArray27, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem31.TwoPointer(intArray38, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem30.TwoPointer(intArray38, (int) (byte) 0);
        int[] intArray47 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem30.Hashmap(intArray47, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem10.Hashmap(intArray47, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem10.Hashmap(intArray55, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem61.BruteForce(intArray64, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem60.Hashmap(intArray64, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem10.Hashmap(intArray64, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem0.BruteForce(intArray64, 0);
        java.lang.Class<?> wildcardClass73 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0132");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem13.Hashmap(intArray17, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem22.BruteForce(intArray25, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem13.TwoPointer(intArray25, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem30.TwoPointer(intArray42, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem13.Hashmap(intArray42, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem0.Hashmap(intArray42, (int) (byte) -1);
        java.lang.Class<?> wildcardClass51 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test0133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0133");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem18.Hashmap(intArray22, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem9.BruteForce(intArray22, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem30.TwoPointer(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem29.TwoPointer(intArray37, (int) (byte) 0);
        int[] intArray46 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem29.Hashmap(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem9.BruteForce(intArray46, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.TwoPointer(intArray46, (int) (short) 1);
        java.lang.Class<?> wildcardClass53 = intArray46.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0134");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem13.Hashmap(intArray17, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem22.BruteForce(intArray25, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem13.TwoPointer(intArray25, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem30.TwoPointer(intArray42, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem13.Hashmap(intArray42, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem0.Hashmap(intArray42, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem0.TwoPointer(intArray54, (int) (short) -1);
        int[] intArray59 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem0.TwoPointer(intArray59, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"a\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
    }

    @Test
    public void test0135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0135");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.TwoPointer(intArray29, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.TwoPointer(intArray46, (int) (short) 1);
        int[] intArray53 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem0.TwoPointer(intArray53, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"a\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
    }

    @Test
    public void test0136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0136");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem29.Hashmap(intArray33, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.BruteForce(intArray33, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem41.TwoPointer(intArray48, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem40.TwoPointer(intArray48, (int) (byte) 0);
        int[] intArray57 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem40.Hashmap(intArray57, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem20.BruteForce(intArray57, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem0.Hashmap(intArray57, (int) (short) 1);
        java.lang.Class<?> wildcardClass64 = intListList63.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0137");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem0.BruteForce(intArray17, (int) (short) 1);
        int[] intArray24 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem0.Hashmap(intArray24, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"a\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
    }

    @Test
    public void test0138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0138");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList7 = threeSumProblem2.BruteForce(intArray5, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem1.Hashmap(intArray5, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem1.TwoPointer(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem18.Hashmap(intArray22, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem18.TwoPointer(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem1.Hashmap(intArray30, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem37.TwoPointer(intArray49, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem54.Hashmap(intArray58, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem54.TwoPointer(intArray66, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem37.Hashmap(intArray66, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem1.Hashmap(intArray66, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem0.TwoPointer(intArray66, (int) '#');
        java.lang.Class<?> wildcardClass77 = intArray66.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList7);
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0139");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList7 = threeSumProblem2.BruteForce(intArray5, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem1.Hashmap(intArray5, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem11.BruteForce(intArray14, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem10.Hashmap(intArray14, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem1.BruteForce(intArray14, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem22.TwoPointer(intArray29, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem21.TwoPointer(intArray29, (int) (byte) 0);
        int[] intArray38 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem21.Hashmap(intArray38, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem1.BruteForce(intArray38, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem1.Hashmap(intArray46, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem1.TwoPointer(intArray54, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem0.TwoPointer(intArray54, 0);
        java.lang.Class<?> wildcardClass61 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList7);
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0140");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem17.Hashmap(intArray46, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem0.BruteForce(intArray46, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem55.Hashmap(intArray59, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem55.TwoPointer(intArray67, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.Hashmap(intArray67, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem75.TwoPointer(intArray82, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem74.TwoPointer(intArray82, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.TwoPointer(intArray82, (int) (short) 100);
        java.lang.Class<?> wildcardClass89 = intArray82.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0141");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem0.Hashmap(intArray29, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem36.Hashmap(intArray40, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem36.TwoPointer(intArray48, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem53.Hashmap(intArray57, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem53.TwoPointer(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem36.Hashmap(intArray65, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.Hashmap(intArray65, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem75.BruteForce(intArray78, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem74.Hashmap(intArray78, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.TwoPointer(intArray78, 0);
        java.lang.Class<?> wildcardClass85 = intListList84.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0142");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem0.Hashmap(intArray29, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem36.Hashmap(intArray40, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem36.TwoPointer(intArray48, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem53.Hashmap(intArray57, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem53.TwoPointer(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem36.Hashmap(intArray65, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.Hashmap(intArray65, 0);
        java.lang.Class<?> wildcardClass74 = intListList73.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0143");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem17.Hashmap(intArray46, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem0.BruteForce(intArray46, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray64 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem55.BruteForce(intArray64, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem67.BruteForce(intArray70, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem55.Hashmap(intArray70, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem0.TwoPointer(intArray70, 100);
        java.lang.Class<?> wildcardClass77 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0144");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem0.Hashmap(intArray45, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray59 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem50.BruteForce(intArray59, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem50.Hashmap(intArray65, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray79 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem70.BruteForce(intArray79, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem50.TwoPointer(intArray79, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.Hashmap(intArray79, (-1));
        java.lang.Class<?> wildcardClass86 = intListList85.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0145");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem18.TwoPointer(intArray25, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem17.TwoPointer(intArray25, (int) (byte) 0);
        int[] intArray34 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray34, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray34, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem40.TwoPointer(intArray47, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem39.TwoPointer(intArray47, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem0.BruteForce(intArray47, 100);
        java.lang.Class<?> wildcardClass54 = intListList53.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0146");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.BruteForce(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.TwoPointer(intArray21, (-1));
        java.lang.Class<?> wildcardClass28 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0147");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem42.TwoPointer(intArray51, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.BruteForce(intArray51, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem58.Hashmap(intArray62, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem67.BruteForce(intArray70, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem58.TwoPointer(intArray70, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem0.TwoPointer(intArray70, (int) ' ');
        java.lang.Class<?> wildcardClass77 = intArray70.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0148");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem3 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem3.BruteForce(intArray6, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem2.Hashmap(intArray6, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem11.Hashmap(intArray15, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem11.TwoPointer(intArray23, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem28.Hashmap(intArray32, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem28.TwoPointer(intArray40, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem11.Hashmap(intArray40, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem47.Hashmap(intArray51, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem47.TwoPointer(intArray59, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem64.Hashmap(intArray68, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem64.TwoPointer(intArray76, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem47.Hashmap(intArray76, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem11.Hashmap(intArray76, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem2.TwoPointer(intArray76, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem1.TwoPointer(intArray76, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem89 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray92 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem89.BruteForce(intArray92, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem1.BruteForce(intArray92, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.TwoPointer(intArray92, (int) (byte) 1);
        java.lang.Class<?> wildcardClass99 = intListList98.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0149");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        java.lang.Class<?> wildcardClass13 = intListList12.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0150");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem14.Hashmap(intArray18, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem23.BruteForce(intArray26, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem14.TwoPointer(intArray26, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem0.BruteForce(intArray26, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem33.BruteForce(intArray36, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem33.TwoPointer(intArray42, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem47.Hashmap(intArray51, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem47.TwoPointer(intArray59, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem33.BruteForce(intArray59, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem0.Hashmap(intArray59, (int) (byte) -1);
        java.lang.Class<?> wildcardClass68 = intListList67.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0151");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem17.Hashmap(intArray46, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem0.BruteForce(intArray46, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem55.Hashmap(intArray59, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem55.TwoPointer(intArray67, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.Hashmap(intArray67, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem75.TwoPointer(intArray82, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem74.TwoPointer(intArray82, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.Hashmap(intArray82, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem89 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem90 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray93 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem90.BruteForce(intArray93, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem89.BruteForce(intArray93, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList99 = threeSumProblem0.BruteForce(intArray93, (int) '#');
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(intListList99);
    }

    @Test
    public void test0152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0152");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray10 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem1.BruteForce(intArray10, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem13.BruteForce(intArray16, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem1.Hashmap(intArray16, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray30 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem21.BruteForce(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem1.BruteForce(intArray30, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem35.Hashmap(intArray39, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem44.BruteForce(intArray47, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem35.TwoPointer(intArray47, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem53.BruteForce(intArray56, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem52.Hashmap(intArray56, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem61.BruteForce(intArray64, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem52.TwoPointer(intArray64, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem70.BruteForce(intArray73, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem69.Hashmap(intArray73, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem78.BruteForce(intArray81, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem69.TwoPointer(intArray81, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem52.Hashmap(intArray81, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem35.BruteForce(intArray81, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem1.Hashmap(intArray81, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem0.Hashmap(intArray81, (int) ' ');
        java.lang.Class<?> wildcardClass94 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0153");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem34.TwoPointer(intArray41, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem0.TwoPointer(intArray41, 1);
        java.lang.Class<?> wildcardClass46 = intListList45.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0154");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList7 = threeSumProblem2.BruteForce(intArray5, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem1.Hashmap(intArray5, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem1.TwoPointer(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem18.BruteForce(intArray22, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem1.TwoPointer(intArray22, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem29.Hashmap(intArray33, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem1.BruteForce(intArray33, (int) (byte) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray49 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem40.BruteForce(intArray49, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem40.Hashmap(intArray55, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray69 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem60.BruteForce(intArray69, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem40.BruteForce(intArray69, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem74.TwoPointer(intArray81, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem40.TwoPointer(intArray81, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem1.TwoPointer(intArray81, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem0.BruteForce(intArray81, 10);
        java.lang.Class<?> wildcardClass90 = intArray81.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList7);
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0155");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem13.Hashmap(intArray17, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem22.BruteForce(intArray25, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem13.TwoPointer(intArray25, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem30.TwoPointer(intArray42, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem13.Hashmap(intArray42, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem0.Hashmap(intArray42, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray60 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem51.BruteForce(intArray60, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem0.Hashmap(intArray60, (int) (short) 0);
        java.lang.Class<?> wildcardClass65 = intArray60.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0156");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem17.TwoPointer(intArray24, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem16.TwoPointer(intArray24, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.BruteForce(intArray24, (int) (short) 100);
        java.lang.Class<?> wildcardClass31 = intArray24.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0157");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem18.Hashmap(intArray22, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem9.BruteForce(intArray22, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem30.TwoPointer(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem29.TwoPointer(intArray37, (int) (byte) 0);
        int[] intArray46 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem29.Hashmap(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem9.BruteForce(intArray46, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.TwoPointer(intArray46, (int) (short) 1);
        java.lang.Class<?> wildcardClass53 = intListList52.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0158");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.BruteForce(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.TwoPointer(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem28.Hashmap(intArray32, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.BruteForce(intArray32, (int) (byte) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray48 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem39.BruteForce(intArray48, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem39.Hashmap(intArray54, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray68 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem59.BruteForce(intArray68, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem39.BruteForce(intArray68, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray80 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem73.TwoPointer(intArray80, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem39.TwoPointer(intArray80, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem0.TwoPointer(intArray80, (int) 'a');
        java.lang.Class<?> wildcardClass87 = intArray80.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0159");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem42.TwoPointer(intArray51, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.BruteForce(intArray51, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem58.Hashmap(intArray62, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem67.BruteForce(intArray70, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem58.TwoPointer(intArray70, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem0.TwoPointer(intArray70, (int) ' ');
        java.lang.Class<?> wildcardClass77 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0160");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem26.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem26.TwoPointer(intArray38, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem9.Hashmap(intArray38, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem0.BruteForce(intArray38, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem47.Hashmap(intArray51, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem47.TwoPointer(intArray59, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem64.Hashmap(intArray68, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem64.TwoPointer(intArray76, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem47.Hashmap(intArray76, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.BruteForce(intArray76, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem85 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray92 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem85.TwoPointer(intArray92, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.BruteForce(intArray92, (int) (byte) 1);
        java.lang.Class<?> wildcardClass97 = intArray92.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0161");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem18.TwoPointer(intArray25, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem17.TwoPointer(intArray25, (int) (byte) 0);
        int[] intArray34 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray34, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.TwoPointer(intArray34, 0);
        int[] intArray39 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.TwoPointer(intArray39, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"a\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
    }

    @Test
    public void test0162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0162");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem34.TwoPointer(intArray41, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem0.TwoPointer(intArray41, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem47.BruteForce(intArray50, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem46.Hashmap(intArray50, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem46.TwoPointer(intArray58, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem64.TwoPointer(intArray71, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem63.TwoPointer(intArray71, (int) (byte) 0);
        int[] intArray80 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem63.Hashmap(intArray80, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem46.Hashmap(intArray80, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem0.BruteForce(intArray80, (int) (short) 1);
        java.lang.Class<?> wildcardClass87 = intArray80.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0163");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem29.Hashmap(intArray33, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.BruteForce(intArray33, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray33, (-1));
        java.lang.Class<?> wildcardClass42 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0164");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray10 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem1.BruteForce(intArray10, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem13.BruteForce(intArray16, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem1.Hashmap(intArray16, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        int[] intArray30 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem21.BruteForce(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem1.BruteForce(intArray30, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem35.Hashmap(intArray39, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem44.BruteForce(intArray47, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem35.TwoPointer(intArray47, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem53.BruteForce(intArray56, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem52.Hashmap(intArray56, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem61.BruteForce(intArray64, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem52.TwoPointer(intArray64, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem70.BruteForce(intArray73, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem69.Hashmap(intArray73, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem78.BruteForce(intArray81, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem69.TwoPointer(intArray81, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem52.Hashmap(intArray81, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem35.BruteForce(intArray81, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem1.Hashmap(intArray81, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem0.Hashmap(intArray81, (int) ' ');
        java.lang.Class<?> wildcardClass94 = intListList93.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0165");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem17.Hashmap(intArray46, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem53.Hashmap(intArray57, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem53.TwoPointer(intArray65, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem70.Hashmap(intArray74, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem79 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem79.BruteForce(intArray82, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem70.TwoPointer(intArray82, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem53.Hashmap(intArray82, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem17.Hashmap(intArray82, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem16.TwoPointer(intArray82, (int) '#');
        int[] intArray95 = new int[] { 10, (byte) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem16.BruteForce(intArray95, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList99 = threeSumProblem0.TwoPointer(intArray95, (int) (byte) 100);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intArray95);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray95), "[0, 10]");
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(intListList99);
    }

    @Test
    public void test0166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0166");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        java.lang.Class<?> wildcardClass20 = intListList19.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0167");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem18.TwoPointer(intArray25, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem17.TwoPointer(intArray25, (int) (byte) 0);
        int[] intArray34 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray34, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem38.TwoPointer(intArray45, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem37.TwoPointer(intArray45, (int) (byte) 0);
        int[] intArray54 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem37.Hashmap(intArray54, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem17.Hashmap(intArray54, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem17.Hashmap(intArray62, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem0.TwoPointer(intArray62, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem70.BruteForce(intArray73, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem69.Hashmap(intArray73, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem78.BruteForce(intArray81, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem69.TwoPointer(intArray81, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem86 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem87 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray90 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem87.BruteForce(intArray90, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem86.BruteForce(intArray90, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem69.TwoPointer(intArray90, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.BruteForce(intArray90, (int) 'a');
        java.lang.Class<?> wildcardClass99 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0168");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem42.Hashmap(intArray46, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem51.Hashmap(intArray55, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem42.BruteForce(intArray55, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem0.Hashmap(intArray55, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem64.Hashmap(intArray68, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem74.TwoPointer(intArray81, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem73.TwoPointer(intArray81, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem64.BruteForce(intArray81, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem0.Hashmap(intArray81, (int) (byte) 1);
        int[] intArray90 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem0.TwoPointer(intArray90, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"a\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
    }

    @Test
    public void test0169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0169");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem17.Hashmap(intArray46, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem0.BruteForce(intArray46, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem55.Hashmap(intArray59, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem55.TwoPointer(intArray67, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.Hashmap(intArray67, 0);
        java.lang.Class<?> wildcardClass74 = intListList73.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0170");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem0.Hashmap(intArray45, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray59 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem50.BruteForce(intArray59, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem50.Hashmap(intArray65, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray79 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem70.BruteForce(intArray79, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem50.TwoPointer(intArray79, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.Hashmap(intArray79, (-1));
        int[] intArray86 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.Hashmap(intArray86, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"a\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
    }

    @Test
    public void test0171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0171");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem0.Hashmap(intArray29, (int) 'a');
        java.lang.Class<?> wildcardClass36 = intListList35.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0172");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, (int) (byte) 0);
        int[] intArray27 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.Hashmap(intArray27, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem31.TwoPointer(intArray38, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem30.TwoPointer(intArray38, (int) (byte) 0);
        int[] intArray47 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem30.Hashmap(intArray47, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem10.Hashmap(intArray47, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem10.Hashmap(intArray55, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem61.BruteForce(intArray64, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem60.Hashmap(intArray64, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem10.Hashmap(intArray64, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem0.BruteForce(intArray64, 0);
        int[] intArray77 = new int[] { (byte) 1, 100, '#', '4' };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem0.Hashmap(intArray77, (int) (short) 10);
        int[] intArray80 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem0.TwoPointer(intArray80, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"a\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[1, 35, 52, 100]");
        org.junit.Assert.assertNotNull(intListList79);
    }

    @Test
    public void test0173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0173");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem35.TwoPointer(intArray42, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem34.TwoPointer(intArray42, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem0.Hashmap(intArray42, (int) (short) 100);
        java.lang.Class<?> wildcardClass49 = intListList48.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test0174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0174");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem18.Hashmap(intArray22, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem18.TwoPointer(intArray30, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem35.Hashmap(intArray39, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem44.BruteForce(intArray47, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem35.TwoPointer(intArray47, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem18.Hashmap(intArray47, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem9.BruteForce(intArray47, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem56.Hashmap(intArray60, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem56.TwoPointer(intArray68, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem73.Hashmap(intArray77, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem82 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem82.BruteForce(intArray85, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem73.TwoPointer(intArray85, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem56.Hashmap(intArray85, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem9.BruteForce(intArray85, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.BruteForce(intArray85, (int) (short) -1);
        java.lang.Class<?> wildcardClass96 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0175");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem17.Hashmap(intArray46, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem0.BruteForce(intArray46, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem55.Hashmap(intArray59, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem55.TwoPointer(intArray67, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.Hashmap(intArray67, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem75.TwoPointer(intArray82, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem74.TwoPointer(intArray82, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.Hashmap(intArray82, (int) 'a');
        int[] intArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem0.Hashmap(intArray89, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"a\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
    }

    @Test
    public void test0176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0176");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.BruteForce(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.TwoPointer(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem28.Hashmap(intArray32, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.BruteForce(intArray32, (int) (byte) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray48 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem39.BruteForce(intArray48, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem39.Hashmap(intArray54, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray68 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem59.BruteForce(intArray68, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem39.BruteForce(intArray68, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray80 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem73.TwoPointer(intArray80, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem39.TwoPointer(intArray80, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem0.TwoPointer(intArray80, (int) 'a');
        java.lang.Class<?> wildcardClass87 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0177");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray26 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem17.BruteForce(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray46 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem37.BruteForce(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem17.TwoPointer(intArray46, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem51.Hashmap(intArray55, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem51.TwoPointer(intArray63, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem17.TwoPointer(intArray63, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem0.Hashmap(intArray63, (int) 'a');
        java.lang.Class<?> wildcardClass72 = intArray63.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0178");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = intListList8.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0179");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem18.TwoPointer(intArray25, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem17.TwoPointer(intArray25, (int) (byte) 0);
        int[] intArray34 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray34, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.TwoPointer(intArray34, 0);
        java.lang.Class<?> wildcardClass39 = intArray34.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0180");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.Hashmap(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem28.BruteForce(intArray31, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem0.TwoPointer(intArray31, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem36.TwoPointer(intArray45, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem50.Hashmap(intArray54, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem50.TwoPointer(intArray62, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem36.BruteForce(intArray62, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem0.Hashmap(intArray62, (int) (short) 0);
        java.lang.Class<?> wildcardClass71 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test0181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0181");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem6.TwoPointer(intArray13, (int) (short) 1);
        int[] intArray19 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem6.TwoPointer(intArray19, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem23.TwoPointer(intArray30, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem22.TwoPointer(intArray30, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem6.BruteForce(intArray30, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray30, (-1));
        java.lang.Class<?> wildcardClass39 = intArray30.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0182");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem14.TwoPointer(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem13.TwoPointer(intArray21, (int) (byte) 0);
        int[] intArray30 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem13.Hashmap(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem0.Hashmap(intArray30, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem35.Hashmap(intArray39, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem44.Hashmap(intArray48, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem53.BruteForce(intArray56, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem44.TwoPointer(intArray56, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem35.Hashmap(intArray56, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem0.BruteForce(intArray56, (int) (byte) 10);
        java.lang.Class<?> wildcardClass65 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0183");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        int[] intArray17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray17, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
    }

    @Test
    public void test0184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0184");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem0.Hashmap(intArray45, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem50.Hashmap(intArray54, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem0.Hashmap(intArray54, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem61.BruteForce(intArray64, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem67.BruteForce(intArray70, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem61.TwoPointer(intArray70, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem76.BruteForce(intArray79, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem75.Hashmap(intArray79, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem84 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem84.BruteForce(intArray87, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem75.TwoPointer(intArray87, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem61.BruteForce(intArray87, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.BruteForce(intArray87, (int) 'a');
        java.lang.Class<?> wildcardClass96 = intArray87.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0185");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem42.TwoPointer(intArray51, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.BruteForce(intArray51, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem58.Hashmap(intArray62, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray75 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem68.TwoPointer(intArray75, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem67.TwoPointer(intArray75, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem58.BruteForce(intArray75, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem0.TwoPointer(intArray75, (int) (short) -1);
        java.lang.Class<?> wildcardClass84 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0186");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        java.lang.Class<?> wildcardClass20 = intArray15.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0187");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem0.Hashmap(intArray29, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem36.Hashmap(intArray40, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem36.TwoPointer(intArray48, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem53.Hashmap(intArray57, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem53.TwoPointer(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem36.Hashmap(intArray65, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.Hashmap(intArray65, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray83 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem74.BruteForce(intArray83, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem86 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem86.BruteForce(intArray89, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem74.Hashmap(intArray89, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.Hashmap(intArray89, (int) ' ');
        java.lang.Class<?> wildcardClass96 = intListList95.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0188");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray43 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem34.BruteForce(intArray43, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem34.Hashmap(intArray49, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray63 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem54.BruteForce(intArray63, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem34.BruteForce(intArray63, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem0.BruteForce(intArray63, (int) (short) 1);
        java.lang.Class<?> wildcardClass70 = intArray63.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0189");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.TwoPointer(intArray29, (int) ' ');
        java.lang.Class<?> wildcardClass34 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0190");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem35.TwoPointer(intArray42, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem34.TwoPointer(intArray42, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem0.Hashmap(intArray42, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem49.TwoPointer(intArray58, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem63.Hashmap(intArray67, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem72.BruteForce(intArray75, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem63.TwoPointer(intArray75, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem49.BruteForce(intArray75, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem0.BruteForce(intArray75, (int) (short) -1);
        java.lang.Class<?> wildcardClass84 = intArray75.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0191");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, (int) (byte) 0);
        int[] intArray27 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.Hashmap(intArray27, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem31.TwoPointer(intArray38, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem30.TwoPointer(intArray38, (int) (byte) 0);
        int[] intArray47 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem30.Hashmap(intArray47, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem10.Hashmap(intArray47, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem58.BruteForce(intArray61, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem52.TwoPointer(intArray61, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem10.BruteForce(intArray61, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem0.TwoPointer(intArray61, (int) (byte) 1);
        java.lang.Class<?> wildcardClass70 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0192");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem23.BruteForce(intArray26, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem17.TwoPointer(intArray26, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem31.Hashmap(intArray35, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem40.Hashmap(intArray44, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem40.TwoPointer(intArray52, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem58.BruteForce(intArray61, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem57.Hashmap(intArray61, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem66.BruteForce(intArray69, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem57.TwoPointer(intArray69, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem40.Hashmap(intArray69, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem31.BruteForce(intArray69, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem17.Hashmap(intArray69, 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem80 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray87 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem80.TwoPointer(intArray87, (int) (short) 1);
        int[] intArray93 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem80.TwoPointer(intArray93, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem17.BruteForce(intArray93, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList99 = threeSumProblem0.BruteForce(intArray93, (int) 'a');
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(intListList99);
    }

    @Test
    public void test0193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0193");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem14.TwoPointer(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem13.TwoPointer(intArray21, (int) (byte) 0);
        int[] intArray30 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem13.Hashmap(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem0.Hashmap(intArray30, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem35.Hashmap(intArray39, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem44.Hashmap(intArray48, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem53.BruteForce(intArray56, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem44.TwoPointer(intArray56, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem35.Hashmap(intArray56, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem0.BruteForce(intArray56, (int) (byte) 10);
        java.lang.Class<?> wildcardClass65 = intListList64.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0194");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem20.TwoPointer(intArray29, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem44.BruteForce(intArray47, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem43.Hashmap(intArray47, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem43.TwoPointer(intArray55, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem61.BruteForce(intArray64, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem60.Hashmap(intArray64, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem69.BruteForce(intArray72, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem60.TwoPointer(intArray72, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem43.Hashmap(intArray72, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem34.BruteForce(intArray72, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem20.Hashmap(intArray72, 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.Hashmap(intArray72, (int) (byte) 10);
        java.lang.Class<?> wildcardClass85 = intArray72.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0195");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        int[] intArray26 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem9.Hashmap(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem30.TwoPointer(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem29.TwoPointer(intArray37, (int) (byte) 0);
        int[] intArray46 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem29.Hashmap(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem9.Hashmap(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.Hashmap(intArray46, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray62 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem53.BruteForce(intArray62, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem53.Hashmap(intArray68, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray82 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem73.BruteForce(intArray82, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem53.BruteForce(intArray82, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.BruteForce(intArray82, (int) (byte) -1);
        java.lang.Class<?> wildcardClass89 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0196");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        int[] intArray23 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem14.BruteForce(intArray23, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.BruteForce(intArray23, (int) '4');
        java.lang.Class<?> wildcardClass28 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0197");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem13.Hashmap(intArray17, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem22.BruteForce(intArray25, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem13.TwoPointer(intArray25, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem30.TwoPointer(intArray42, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem13.Hashmap(intArray42, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem0.Hashmap(intArray42, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem52.TwoPointer(intArray59, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem51.TwoPointer(intArray59, (int) (byte) 0);
        int[] intArray65 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem51.TwoPointer(intArray65, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem69.TwoPointer(intArray76, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem68.TwoPointer(intArray76, (int) (byte) 0);
        int[] intArray85 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem68.Hashmap(intArray85, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem51.TwoPointer(intArray85, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem0.Hashmap(intArray85, (int) (byte) -1);
        java.lang.Class<?> wildcardClass92 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0198");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList7 = threeSumProblem2.BruteForce(intArray5, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem1.Hashmap(intArray5, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem11.BruteForce(intArray14, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem10.Hashmap(intArray14, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem10.TwoPointer(intArray22, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem28.BruteForce(intArray31, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem27.Hashmap(intArray31, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem27.TwoPointer(intArray39, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem10.Hashmap(intArray39, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem47.BruteForce(intArray50, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem46.Hashmap(intArray50, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem46.TwoPointer(intArray58, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem63.Hashmap(intArray67, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem72.BruteForce(intArray75, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem63.TwoPointer(intArray75, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem46.Hashmap(intArray75, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem10.Hashmap(intArray75, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem1.TwoPointer(intArray75, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.TwoPointer(intArray75, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem88 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray91 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem88.BruteForce(intArray91, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.BruteForce(intArray91, (-1));
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.Hashmap(intArray96, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"a\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList7);
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
    }

    @Test
    public void test0199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0199");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem20.TwoPointer(intArray32, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem37.TwoPointer(intArray49, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem54.Hashmap(intArray58, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem54.TwoPointer(intArray66, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem37.Hashmap(intArray66, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem20.BruteForce(intArray66, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem76.BruteForce(intArray79, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem75.Hashmap(intArray79, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem84 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem84.BruteForce(intArray87, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem75.TwoPointer(intArray87, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem20.Hashmap(intArray87, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.Hashmap(intArray87, (int) ' ');
        java.lang.Class<?> wildcardClass96 = intArray87.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0200");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem0.Hashmap(intArray29, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem36.Hashmap(intArray40, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem36.TwoPointer(intArray48, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem53.Hashmap(intArray57, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem53.TwoPointer(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem36.Hashmap(intArray65, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.Hashmap(intArray65, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray83 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem74.BruteForce(intArray83, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem86 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem86.BruteForce(intArray89, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem74.Hashmap(intArray89, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.Hashmap(intArray89, (int) ' ');
        java.lang.Class<?> wildcardClass96 = intArray89.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0201");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.BruteForce(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.TwoPointer(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem28.Hashmap(intArray32, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem28.BruteForce(intArray41, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem49.TwoPointer(intArray56, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem48.TwoPointer(intArray56, (int) (byte) 0);
        int[] intArray65 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem48.Hashmap(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem28.BruteForce(intArray65, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem70.TwoPointer(intArray77, (int) (short) 1);
        int[] intArray83 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem70.TwoPointer(intArray83, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem28.Hashmap(intArray83, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem0.BruteForce(intArray83, (-1));
        java.lang.Class<?> wildcardClass90 = intListList89.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0202");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem17.Hashmap(intArray46, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem0.BruteForce(intArray46, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray64 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem55.BruteForce(intArray64, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem67.BruteForce(intArray70, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem55.Hashmap(intArray70, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem0.TwoPointer(intArray70, 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem78.BruteForce(intArray81, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem77.Hashmap(intArray81, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem86 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem86.BruteForce(intArray89, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem77.TwoPointer(intArray89, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.TwoPointer(intArray89, 0);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.Hashmap(intArray96, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"a\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
    }

    @Test
    public void test0203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0203");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, (int) (byte) 0);
        int[] intArray27 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.Hashmap(intArray27, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem31.TwoPointer(intArray38, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem30.TwoPointer(intArray38, (int) (byte) 0);
        int[] intArray47 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem30.Hashmap(intArray47, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem10.Hashmap(intArray47, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem10.Hashmap(intArray55, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem61.BruteForce(intArray64, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem60.Hashmap(intArray64, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem10.Hashmap(intArray64, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem0.BruteForce(intArray64, 0);
        int[] intArray77 = new int[] { (byte) 1, 100, '#', '4' };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem0.Hashmap(intArray77, (int) (short) 10);
        java.lang.Class<?> wildcardClass80 = intArray77.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[1, 35, 52, 100]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0204");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.TwoPointer(intArray29, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem35.TwoPointer(intArray42, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem34.TwoPointer(intArray42, (int) (byte) 0);
        int[] intArray51 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem34.Hashmap(intArray51, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem55.TwoPointer(intArray62, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem54.TwoPointer(intArray62, (int) (byte) 0);
        int[] intArray71 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem54.Hashmap(intArray71, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem34.Hashmap(intArray71, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem76.BruteForce(intArray79, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem34.Hashmap(intArray79, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.Hashmap(intArray79, (int) (byte) 100);
        java.lang.Class<?> wildcardClass86 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0205");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        int[] intArray17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray17, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
    }

    @Test
    public void test0206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0206");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem34.BruteForce(intArray37, (int) '#');
        int[] intArray43 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem34.BruteForce(intArray43, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem34.Hashmap(intArray49, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        int[] intArray63 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem54.BruteForce(intArray63, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem34.BruteForce(intArray63, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem0.BruteForce(intArray63, (int) (short) 1);
        java.lang.Class<?> wildcardClass70 = intListList69.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0207");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem0.Hashmap(intArray29, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem36.Hashmap(intArray40, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem36.TwoPointer(intArray48, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem53.Hashmap(intArray57, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem53.TwoPointer(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem36.Hashmap(intArray65, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.Hashmap(intArray65, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem75.BruteForce(intArray78, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem74.Hashmap(intArray78, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem83 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem84 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem84.BruteForce(intArray87, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem83.Hashmap(intArray87, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem74.BruteForce(intArray87, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.BruteForce(intArray87, 100);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.Hashmap(intArray96, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"a\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
    }

    @Test
    public void test0208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0208");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.TwoPointer(intArray29, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.TwoPointer(intArray46, (int) (short) 1);
        java.lang.Class<?> wildcardClass53 = intArray46.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0209");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem17.Hashmap(intArray46, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem0.BruteForce(intArray46, (int) (byte) 0);
        int[] intArray55 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.TwoPointer(intArray55, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"a\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
    }

    @Test
    public void test0210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0210");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem6.TwoPointer(intArray13, (int) (short) 1);
        int[] intArray19 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem6.TwoPointer(intArray19, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem23.TwoPointer(intArray30, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem22.TwoPointer(intArray30, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem6.BruteForce(intArray30, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem39.TwoPointer(intArray48, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem53.Hashmap(intArray57, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem53.TwoPointer(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem39.BruteForce(intArray65, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.Hashmap(intArray65, (int) 'a');
        java.lang.Class<?> wildcardClass74 = intListList73.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0211");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem14.Hashmap(intArray18, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem23.BruteForce(intArray26, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem14.TwoPointer(intArray26, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem0.BruteForce(intArray26, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray36 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem33.BruteForce(intArray36, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem33.TwoPointer(intArray42, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem47.Hashmap(intArray51, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem47.TwoPointer(intArray59, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem33.BruteForce(intArray59, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem0.Hashmap(intArray59, (int) (byte) -1);
        java.lang.Class<?> wildcardClass68 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(wildcardClass68);
    }

    @Test
    public void test0212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0212");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test0213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0213");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        int[] intArray26 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem9.Hashmap(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem30.TwoPointer(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem29.TwoPointer(intArray37, (int) (byte) 0);
        int[] intArray46 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem29.Hashmap(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem9.Hashmap(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.Hashmap(intArray46, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray62 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem53.BruteForce(intArray62, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem53.Hashmap(intArray68, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray82 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem73.BruteForce(intArray82, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem53.BruteForce(intArray82, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.BruteForce(intArray82, (int) (byte) -1);
        java.lang.Class<?> wildcardClass89 = intListList88.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0214");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem14.Hashmap(intArray18, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem23.Hashmap(intArray27, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem23.TwoPointer(intArray35, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem40.Hashmap(intArray44, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem40.TwoPointer(intArray52, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem23.Hashmap(intArray52, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem14.BruteForce(intArray52, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem0.Hashmap(intArray52, 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem63.TwoPointer(intArray70, (int) (short) 1);
        int[] intArray76 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem63.TwoPointer(intArray76, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem0.BruteForce(intArray76, (int) (short) 1);
        java.lang.Class<?> wildcardClass81 = intListList80.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0215");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem14.TwoPointer(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem13.TwoPointer(intArray21, (int) (byte) 0);
        int[] intArray30 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem13.Hashmap(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem0.Hashmap(intArray30, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem35.Hashmap(intArray39, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem44.BruteForce(intArray47, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem35.TwoPointer(intArray47, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem53.BruteForce(intArray56, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem52.Hashmap(intArray56, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem61.BruteForce(intArray64, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem52.TwoPointer(intArray64, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem70.BruteForce(intArray73, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem69.Hashmap(intArray73, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem78.BruteForce(intArray81, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem69.TwoPointer(intArray81, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem52.Hashmap(intArray81, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem35.BruteForce(intArray81, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem0.BruteForce(intArray81, (int) (byte) 0);
        java.lang.Class<?> wildcardClass92 = intListList91.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0216");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem34.BruteForce(intArray37, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem34.TwoPointer(intArray43, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem48.Hashmap(intArray52, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem48.TwoPointer(intArray60, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem34.BruteForce(intArray60, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem0.BruteForce(intArray60, (int) (byte) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem70.BruteForce(intArray73, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem69.Hashmap(intArray73, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem78.BruteForce(intArray81, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem69.TwoPointer(intArray81, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem86 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem87 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray90 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem87.BruteForce(intArray90, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem86.BruteForce(intArray90, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem69.TwoPointer(intArray90, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.Hashmap(intArray90, (int) (short) -1);
        java.lang.Class<?> wildcardClass99 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0217");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem17.Hashmap(intArray46, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem0.BruteForce(intArray46, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem55.Hashmap(intArray59, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem55.TwoPointer(intArray67, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.Hashmap(intArray67, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem75.BruteForce(intArray78, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem74.Hashmap(intArray78, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem83 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem84 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem84.BruteForce(intArray87, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem83.Hashmap(intArray87, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem74.BruteForce(intArray87, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.TwoPointer(intArray87, (int) (short) -1);
        java.lang.Class<?> wildcardClass96 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0218");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem17.Hashmap(intArray46, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem0.BruteForce(intArray46, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray64 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem55.BruteForce(intArray64, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem67.BruteForce(intArray70, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem55.Hashmap(intArray70, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem0.TwoPointer(intArray70, 100);
        int[] intArray77 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem0.Hashmap(intArray77, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"a\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
    }

    @Test
    public void test0219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0219");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem14.TwoPointer(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem13.TwoPointer(intArray21, (int) (byte) 0);
        int[] intArray30 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem13.Hashmap(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem0.Hashmap(intArray30, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem35.Hashmap(intArray39, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem44.Hashmap(intArray48, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem53.BruteForce(intArray56, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem44.TwoPointer(intArray56, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem35.Hashmap(intArray56, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem0.BruteForce(intArray56, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray72 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem65.TwoPointer(intArray72, (int) (short) 1);
        int[] intArray78 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem65.TwoPointer(intArray78, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem81 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem82 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray89 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem82.TwoPointer(intArray89, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem81.TwoPointer(intArray89, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem65.BruteForce(intArray89, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem0.BruteForce(intArray89, 10);
        java.lang.Class<?> wildcardClass98 = intListList97.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0220");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.Hashmap(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem28.BruteForce(intArray31, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem0.TwoPointer(intArray31, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem36.TwoPointer(intArray45, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem50.Hashmap(intArray54, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem50.TwoPointer(intArray62, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem36.BruteForce(intArray62, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem0.Hashmap(intArray62, (int) (short) 0);
        java.lang.Class<?> wildcardClass71 = intArray62.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test0221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0221");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem0.BruteForce(intArray17, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem25 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem25.BruteForce(intArray28, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem24.Hashmap(intArray28, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem34.BruteForce(intArray37, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem33.Hashmap(intArray37, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem33.TwoPointer(intArray45, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem50.Hashmap(intArray54, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem50.TwoPointer(intArray62, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem33.Hashmap(intArray62, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem24.BruteForce(intArray62, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem0.Hashmap(intArray62, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem73.Hashmap(intArray77, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem0.Hashmap(intArray77, 0);
        java.lang.Class<?> wildcardClass84 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0222");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList7 = threeSumProblem2.BruteForce(intArray5, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem1.Hashmap(intArray5, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem11.BruteForce(intArray14, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem10.Hashmap(intArray14, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem1.BruteForce(intArray14, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem22.TwoPointer(intArray29, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem21.TwoPointer(intArray29, (int) (byte) 0);
        int[] intArray38 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem21.Hashmap(intArray38, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem1.BruteForce(intArray38, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem1.Hashmap(intArray46, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem1.TwoPointer(intArray54, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem0.TwoPointer(intArray54, 0);
        java.lang.Class<?> wildcardClass61 = intListList60.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList7);
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0223");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList7 = threeSumProblem2.BruteForce(intArray5, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem1.Hashmap(intArray5, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem11.BruteForce(intArray14, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem10.Hashmap(intArray14, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem1.BruteForce(intArray14, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem22.TwoPointer(intArray29, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem21.TwoPointer(intArray29, (int) (byte) 0);
        int[] intArray38 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem21.Hashmap(intArray38, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem1.BruteForce(intArray38, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem1.Hashmap(intArray46, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem1.TwoPointer(intArray54, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem0.TwoPointer(intArray54, 0);
        int[] intArray61 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem0.TwoPointer(intArray61, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"a\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList7);
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
    }

    @Test
    public void test0224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0224");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem42.Hashmap(intArray46, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem51.Hashmap(intArray55, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem42.BruteForce(intArray55, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem0.Hashmap(intArray55, (int) '#');
        java.lang.Class<?> wildcardClass64 = intListList63.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0225");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, (int) (byte) 0);
        int[] intArray27 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.Hashmap(intArray27, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem31.TwoPointer(intArray38, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem30.TwoPointer(intArray38, (int) (byte) 0);
        int[] intArray47 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem30.Hashmap(intArray47, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem10.Hashmap(intArray47, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem10.Hashmap(intArray55, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem61.BruteForce(intArray64, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem60.Hashmap(intArray64, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem10.Hashmap(intArray64, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem0.BruteForce(intArray64, 0);
        int[] intArray77 = new int[] { (byte) 1, 100, '#', '4' };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem0.Hashmap(intArray77, (int) (short) 10);
        java.lang.Class<?> wildcardClass80 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[1, 35, 52, 100]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0226");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray37, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem42.Hashmap(intArray46, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem51.Hashmap(intArray55, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem42.BruteForce(intArray55, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem63.TwoPointer(intArray70, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem62.TwoPointer(intArray70, (int) (byte) 0);
        int[] intArray79 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem62.Hashmap(intArray79, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem42.BruteForce(intArray79, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem84 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem84.BruteForce(intArray87, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem42.Hashmap(intArray87, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem0.Hashmap(intArray87, 0);
        java.lang.Class<?> wildcardClass94 = intListList93.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0227");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, (int) (byte) 0);
        int[] intArray27 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.Hashmap(intArray27, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem0.BruteForce(intArray27, (int) (byte) 100);
        java.lang.Class<?> wildcardClass32 = intArray27.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test0228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0228");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem14.TwoPointer(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem13.TwoPointer(intArray21, (int) (byte) 0);
        int[] intArray30 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem13.Hashmap(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem0.Hashmap(intArray30, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem35.Hashmap(intArray39, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem44.BruteForce(intArray47, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem35.TwoPointer(intArray47, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem53.BruteForce(intArray56, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem52.Hashmap(intArray56, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem61.BruteForce(intArray64, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem52.TwoPointer(intArray64, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem70.BruteForce(intArray73, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem69.Hashmap(intArray73, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem78.BruteForce(intArray81, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem69.TwoPointer(intArray81, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem52.Hashmap(intArray81, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem35.BruteForce(intArray81, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem0.BruteForce(intArray81, (int) (byte) 0);
        java.lang.Class<?> wildcardClass92 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0229");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem14.TwoPointer(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem13.TwoPointer(intArray21, (int) (byte) 0);
        int[] intArray30 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem13.Hashmap(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem0.Hashmap(intArray30, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem35.Hashmap(intArray39, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem44.Hashmap(intArray48, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem53.BruteForce(intArray56, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem44.TwoPointer(intArray56, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem35.Hashmap(intArray56, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem0.BruteForce(intArray56, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem65.TwoPointer(intArray74, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem79 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem80 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem80.BruteForce(intArray83, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem79.Hashmap(intArray83, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem88 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray91 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem88.BruteForce(intArray91, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem79.TwoPointer(intArray91, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem65.BruteForce(intArray91, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList99 = threeSumProblem0.TwoPointer(intArray91, (int) (short) 1);
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(intListList99);
    }

    @Test
    public void test0230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0230");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray37, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem42.TwoPointer(intArray49, (int) (short) 1);
        int[] intArray55 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem42.TwoPointer(intArray55, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem0.Hashmap(intArray55, 0);
        java.lang.Class<?> wildcardClass60 = intArray55.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test0231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0231");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem14.TwoPointer(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem13.TwoPointer(intArray21, (int) (byte) 0);
        int[] intArray30 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem13.Hashmap(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem0.Hashmap(intArray30, (int) '#');
        java.lang.Class<?> wildcardClass35 = intArray30.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0232");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem23.BruteForce(intArray26, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem17.TwoPointer(intArray26, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem31.Hashmap(intArray35, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem40.Hashmap(intArray44, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem40.TwoPointer(intArray52, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem58.BruteForce(intArray61, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem57.Hashmap(intArray61, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem66.BruteForce(intArray69, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem57.TwoPointer(intArray69, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem40.Hashmap(intArray69, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem31.BruteForce(intArray69, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem17.Hashmap(intArray69, 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem0.Hashmap(intArray69, 100);
        java.lang.Class<?> wildcardClass82 = intArray69.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0233");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem26.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem26.TwoPointer(intArray38, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem9.Hashmap(intArray38, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem0.BruteForce(intArray38, 10);
        java.lang.Class<?> wildcardClass47 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0234");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem42.Hashmap(intArray46, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem51.Hashmap(intArray55, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem42.BruteForce(intArray55, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem0.Hashmap(intArray55, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem64.Hashmap(intArray68, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem73.Hashmap(intArray77, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem64.BruteForce(intArray77, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.BruteForce(intArray77, (int) (short) 1);
        java.lang.Class<?> wildcardClass86 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0235");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem23.BruteForce(intArray26, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem17.TwoPointer(intArray26, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem31.Hashmap(intArray35, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem31.TwoPointer(intArray43, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem17.BruteForce(intArray43, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem0.Hashmap(intArray43, 10);
        java.lang.Class<?> wildcardClass52 = intListList51.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0236");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray26 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem17.BruteForce(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray46 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem37.BruteForce(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem17.TwoPointer(intArray46, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem51.Hashmap(intArray55, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem51.TwoPointer(intArray63, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem17.TwoPointer(intArray63, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem0.Hashmap(intArray63, (int) 'a');
        java.lang.Class<?> wildcardClass72 = intListList71.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0237");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem14.Hashmap(intArray18, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem24.TwoPointer(intArray31, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem23.TwoPointer(intArray31, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem14.BruteForce(intArray31, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem0.TwoPointer(intArray31, (int) (short) 1);
        java.lang.Class<?> wildcardClass40 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0238");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem13.Hashmap(intArray17, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem22.BruteForce(intArray25, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem13.TwoPointer(intArray25, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem30.TwoPointer(intArray42, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem13.Hashmap(intArray42, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem0.Hashmap(intArray42, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray60 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem51.BruteForce(intArray60, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem0.Hashmap(intArray60, (int) (short) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray72 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem65.TwoPointer(intArray72, (int) (short) 1);
        int[] intArray78 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem65.TwoPointer(intArray78, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem81 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem82 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray89 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem82.TwoPointer(intArray89, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem81.TwoPointer(intArray89, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem65.BruteForce(intArray89, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem0.BruteForce(intArray89, (int) (byte) 1);
        java.lang.Class<?> wildcardClass98 = intListList97.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0239");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem34.TwoPointer(intArray41, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem0.TwoPointer(intArray41, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem46.TwoPointer(intArray53, (int) (short) 1);
        int[] intArray59 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem46.TwoPointer(intArray59, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem0.BruteForce(intArray59, 0);
        java.lang.Class<?> wildcardClass64 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0240");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem11.BruteForce(intArray14, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem10.Hashmap(intArray14, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem19.Hashmap(intArray23, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem28.BruteForce(intArray31, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem19.TwoPointer(intArray31, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem36.Hashmap(intArray40, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem36.TwoPointer(intArray48, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem19.Hashmap(intArray48, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem10.BruteForce(intArray48, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem58.BruteForce(intArray61, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem57.Hashmap(intArray61, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem66.BruteForce(intArray69, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem57.TwoPointer(intArray69, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem75.BruteForce(intArray78, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem74.Hashmap(intArray78, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem83 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem83.BruteForce(intArray86, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem74.TwoPointer(intArray86, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem57.Hashmap(intArray86, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem10.BruteForce(intArray86, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem9.TwoPointer(intArray86, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.TwoPointer(intArray86, (int) '#');
        java.lang.Class<?> wildcardClass99 = intArray86.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0241");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem0.Hashmap(intArray29, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem36.Hashmap(intArray40, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem36.TwoPointer(intArray48, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem53.Hashmap(intArray57, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem53.TwoPointer(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem36.Hashmap(intArray65, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.Hashmap(intArray65, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem75.BruteForce(intArray78, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem74.Hashmap(intArray78, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.TwoPointer(intArray78, 0);
        java.lang.Class<?> wildcardClass85 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0242");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem34.BruteForce(intArray37, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem34.TwoPointer(intArray43, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem48.Hashmap(intArray52, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem48.TwoPointer(intArray60, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem34.BruteForce(intArray60, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem0.BruteForce(intArray60, (int) (byte) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem70.BruteForce(intArray73, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem69.Hashmap(intArray73, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem78.BruteForce(intArray81, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem69.TwoPointer(intArray81, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem86 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem87 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray90 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem87.BruteForce(intArray90, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem86.BruteForce(intArray90, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem69.TwoPointer(intArray90, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.Hashmap(intArray90, (int) (short) -1);
        java.lang.Class<?> wildcardClass99 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0243");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.BruteForce(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.TwoPointer(intArray21, (-1));
        int[] intArray28 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.TwoPointer(intArray28, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"a\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
    }

    @Test
    public void test0244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0244");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        int[] intArray23 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem14.BruteForce(intArray23, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.BruteForce(intArray23, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray37 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem28.BruteForce(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem28.Hashmap(intArray43, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem48.Hashmap(intArray52, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem58.BruteForce(intArray61, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem57.Hashmap(intArray61, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem48.BruteForce(intArray61, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem69.TwoPointer(intArray76, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem68.TwoPointer(intArray76, (int) (byte) 0);
        int[] intArray85 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem68.Hashmap(intArray85, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem48.BruteForce(intArray85, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem28.Hashmap(intArray85, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem0.Hashmap(intArray85, (int) ' ');
        java.lang.Class<?> wildcardClass94 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0245");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem20.TwoPointer(intArray32, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray32, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem41.TwoPointer(intArray48, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem40.TwoPointer(intArray48, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem53.Hashmap(intArray57, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem63.TwoPointer(intArray70, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem62.TwoPointer(intArray70, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem53.BruteForce(intArray70, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem40.BruteForce(intArray70, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem39.Hashmap(intArray70, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem0.BruteForce(intArray70, 1);
        java.lang.Class<?> wildcardClass83 = intListList82.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0246");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem26.BruteForce(intArray30, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem9.TwoPointer(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem9.BruteForce(intArray41, (int) (byte) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        int[] intArray57 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem48.BruteForce(intArray57, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem48.Hashmap(intArray63, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        int[] intArray77 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem68.BruteForce(intArray77, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem48.BruteForce(intArray77, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem82 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray89 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem82.TwoPointer(intArray89, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem48.TwoPointer(intArray89, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem9.TwoPointer(intArray89, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem0.BruteForce(intArray89, 10);
        java.lang.Class<?> wildcardClass98 = intArray89.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0247");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray37, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem0.Hashmap(intArray45, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem50.BruteForce(intArray53, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.TwoPointer(intArray53, (int) ' ');
        java.lang.Class<?> wildcardClass58 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0248");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem0.Hashmap(intArray45, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem50.Hashmap(intArray54, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem0.Hashmap(intArray54, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem61.BruteForce(intArray64, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem67.BruteForce(intArray70, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem61.TwoPointer(intArray70, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem76.BruteForce(intArray79, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem75.Hashmap(intArray79, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem84 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem84.BruteForce(intArray87, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem75.TwoPointer(intArray87, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem61.BruteForce(intArray87, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.BruteForce(intArray87, (int) 'a');
        java.lang.Class<?> wildcardClass96 = intListList95.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0249");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem0.Hashmap(intArray45, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem50.Hashmap(intArray54, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem0.Hashmap(intArray54, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem61.Hashmap(intArray65, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray78 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem71.TwoPointer(intArray78, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem70.TwoPointer(intArray78, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem61.BruteForce(intArray78, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem0.Hashmap(intArray78, (int) (byte) 1);
        java.lang.Class<?> wildcardClass87 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0250");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.BruteForce(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.TwoPointer(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem28.Hashmap(intArray32, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.BruteForce(intArray32, (int) (byte) 1);
        java.lang.Class<?> wildcardClass39 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0251");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray37, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem42.Hashmap(intArray46, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem51.Hashmap(intArray55, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem42.BruteForce(intArray55, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem0.TwoPointer(intArray55, (int) ' ');
        int[] intArray64 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem0.Hashmap(intArray64, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"a\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
    }

    @Test
    public void test0252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0252");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem0.BruteForce(intArray17, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem25 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem25.BruteForce(intArray28, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem24.Hashmap(intArray28, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem34.BruteForce(intArray37, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem33.Hashmap(intArray37, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem33.TwoPointer(intArray45, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem50.Hashmap(intArray54, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem50.TwoPointer(intArray62, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem33.Hashmap(intArray62, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem24.BruteForce(intArray62, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem0.Hashmap(intArray62, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem73.Hashmap(intArray77, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem0.Hashmap(intArray77, 0);
        java.lang.Class<?> wildcardClass84 = intArray77.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0253");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray34 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem20.TwoPointer(intArray34, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem38.TwoPointer(intArray45, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem37.TwoPointer(intArray45, (int) (byte) 0);
        int[] intArray54 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem37.Hashmap(intArray54, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem20.TwoPointer(intArray54, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem0.Hashmap(intArray54, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem61.TwoPointer(intArray68, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem0.Hashmap(intArray68, (int) 'a');
        java.lang.Class<?> wildcardClass73 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0254");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray26 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem17.BruteForce(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray46 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem37.BruteForce(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem17.BruteForce(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.Hashmap(intArray46, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem55.TwoPointer(intArray62, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem54.TwoPointer(intArray62, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem67.Hashmap(intArray71, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray84 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem77.TwoPointer(intArray84, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem76.TwoPointer(intArray84, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem67.BruteForce(intArray84, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem54.BruteForce(intArray84, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem53.Hashmap(intArray84, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.Hashmap(intArray84, 1);
        java.lang.Class<?> wildcardClass97 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0255");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem0.Hashmap(intArray45, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem50.Hashmap(intArray54, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem0.Hashmap(intArray54, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray69 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem62.TwoPointer(intArray69, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem61.TwoPointer(intArray69, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem75.TwoPointer(intArray82, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem74.TwoPointer(intArray82, (int) (byte) 0);
        int[] intArray91 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem74.Hashmap(intArray91, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem61.Hashmap(intArray91, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem0.BruteForce(intArray91, (int) 'a');
        java.lang.Class<?> wildcardClass98 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0256");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray26 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem17.BruteForce(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray46 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem37.BruteForce(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem17.BruteForce(intArray46, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem51.TwoPointer(intArray60, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem66.BruteForce(intArray69, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem65.Hashmap(intArray69, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem65.TwoPointer(intArray77, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem51.BruteForce(intArray77, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem17.BruteForce(intArray77, (int) (byte) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.TwoPointer(intArray77, 0);
        java.lang.Class<?> wildcardClass88 = intArray77.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0257");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem13.Hashmap(intArray17, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem22.BruteForce(intArray25, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem13.TwoPointer(intArray25, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem30.TwoPointer(intArray42, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem13.Hashmap(intArray42, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem0.Hashmap(intArray42, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem0.TwoPointer(intArray54, (int) (short) -1);
        java.lang.Class<?> wildcardClass59 = intListList58.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0258");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        java.lang.Class<?> wildcardClass9 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0259");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem6.TwoPointer(intArray13, (int) (short) 1);
        int[] intArray19 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem6.TwoPointer(intArray19, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem23.TwoPointer(intArray30, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem22.TwoPointer(intArray30, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem6.BruteForce(intArray30, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem39.TwoPointer(intArray48, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem53.Hashmap(intArray57, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem53.TwoPointer(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem39.BruteForce(intArray65, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.Hashmap(intArray65, (int) 'a');
        java.lang.Class<?> wildcardClass74 = intArray65.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0260");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem2.TwoPointer(intArray9, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem1.TwoPointer(intArray9, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem14.Hashmap(intArray18, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem24.TwoPointer(intArray31, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem23.TwoPointer(intArray31, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem14.BruteForce(intArray31, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem1.BruteForce(intArray31, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray31, (int) (byte) 100);
        java.lang.Class<?> wildcardClass42 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0261");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem0.Hashmap(intArray45, (int) (byte) 10);
        java.lang.Class<?> wildcardClass50 = intArray45.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0262");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem0.Hashmap(intArray29, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem36.Hashmap(intArray40, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem36.TwoPointer(intArray48, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem53.Hashmap(intArray57, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem53.TwoPointer(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem36.Hashmap(intArray65, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.Hashmap(intArray65, 0);
        int[] intArray74 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem0.BruteForce(intArray74, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
    }

    @Test
    public void test0263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0263");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem18.TwoPointer(intArray25, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem17.TwoPointer(intArray25, (int) (byte) 0);
        int[] intArray34 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray34, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray34, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem40.TwoPointer(intArray47, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem39.TwoPointer(intArray47, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem0.BruteForce(intArray47, 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem54.BruteForce(intArray58, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem0.Hashmap(intArray58, 10);
        int[] intArray65 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem0.Hashmap(intArray65, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"a\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
    }

    @Test
    public void test0264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0264");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem26.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem26.TwoPointer(intArray38, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem9.Hashmap(intArray38, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem0.BruteForce(intArray38, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem47.Hashmap(intArray51, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem47.TwoPointer(intArray59, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem64.Hashmap(intArray68, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem64.TwoPointer(intArray76, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem47.Hashmap(intArray76, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.BruteForce(intArray76, (int) '#');
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.Hashmap(intArray85, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"a\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
    }

    @Test
    public void test0265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0265");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.BruteForce(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.TwoPointer(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem28.Hashmap(intArray32, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem28.BruteForce(intArray41, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem49.TwoPointer(intArray56, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem48.TwoPointer(intArray56, (int) (byte) 0);
        int[] intArray65 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem48.Hashmap(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem28.BruteForce(intArray65, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem70.BruteForce(intArray73, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem28.Hashmap(intArray73, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem78.BruteForce(intArray81, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem28.TwoPointer(intArray81, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.TwoPointer(intArray81, (int) (short) 0);
        java.lang.Class<?> wildcardClass88 = intListList87.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0266");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem0.Hashmap(intArray29, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem36.Hashmap(intArray40, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem36.TwoPointer(intArray48, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem53.Hashmap(intArray57, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem53.TwoPointer(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem36.Hashmap(intArray65, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.Hashmap(intArray65, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem75.BruteForce(intArray78, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem74.Hashmap(intArray78, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem83 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem84 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem84.BruteForce(intArray87, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem83.Hashmap(intArray87, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem74.BruteForce(intArray87, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.BruteForce(intArray87, 100);
        java.lang.Class<?> wildcardClass96 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0267");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray19 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem12.TwoPointer(intArray19, (int) (short) 1);
        int[] intArray25 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem12.TwoPointer(intArray25, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray36 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem29.TwoPointer(intArray36, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem28.TwoPointer(intArray36, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem12.BruteForce(intArray36, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem6.Hashmap(intArray36, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray54 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem45.BruteForce(intArray54, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem45.Hashmap(intArray60, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem66.BruteForce(intArray69, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem65.Hashmap(intArray69, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem65.TwoPointer(intArray77, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem45.Hashmap(intArray77, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem6.BruteForce(intArray77, (int) (byte) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.Hashmap(intArray77, (int) 'a');
        java.lang.Class<?> wildcardClass88 = intArray77.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0268");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem14.Hashmap(intArray18, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem23.Hashmap(intArray27, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem23.TwoPointer(intArray35, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem40.Hashmap(intArray44, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem40.TwoPointer(intArray52, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem23.Hashmap(intArray52, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem14.BruteForce(intArray52, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem0.Hashmap(intArray52, 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem63.TwoPointer(intArray70, (int) (short) 1);
        int[] intArray76 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem63.TwoPointer(intArray76, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem0.BruteForce(intArray76, (int) (short) 1);
        java.lang.Class<?> wildcardClass81 = intArray76.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0269");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem11.BruteForce(intArray14, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem10.Hashmap(intArray14, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem19.Hashmap(intArray23, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.BruteForce(intArray23, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem31.TwoPointer(intArray38, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem30.TwoPointer(intArray38, (int) (byte) 0);
        int[] intArray47 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem30.Hashmap(intArray47, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem10.BruteForce(intArray47, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem10.Hashmap(intArray55, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem10.TwoPointer(intArray63, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem9.TwoPointer(intArray63, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem0.Hashmap(intArray63, (int) '#');
        int[] intArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem0.Hashmap(intArray72, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"a\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
    }

    @Test
    public void test0270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0270");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        int[] intArray23 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem14.BruteForce(intArray23, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.BruteForce(intArray23, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem28.Hashmap(intArray32, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem28.TwoPointer(intArray40, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray54 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem45.BruteForce(intArray54, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem45.Hashmap(intArray60, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray74 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem65.BruteForce(intArray74, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem45.BruteForce(intArray74, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem28.Hashmap(intArray74, (int) ' ');
        int[] intArray84 = new int[] { (byte) 0, (byte) 10, 10 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem28.BruteForce(intArray84, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.Hashmap(intArray84, 1);
        int[] intArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem0.BruteForce(intArray89, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 10, 10]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
    }

    @Test
    public void test0271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0271");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem14.TwoPointer(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem13.TwoPointer(intArray21, (int) (byte) 0);
        int[] intArray30 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem13.Hashmap(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem0.Hashmap(intArray30, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem35.TwoPointer(intArray44, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray58 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem49.BruteForce(intArray58, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem35.BruteForce(intArray58, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem0.TwoPointer(intArray58, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem66.TwoPointer(intArray73, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem65.TwoPointer(intArray73, (int) (byte) 0);
        int[] intArray82 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem65.Hashmap(intArray82, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem0.TwoPointer(intArray82, (int) (short) 100);
        java.lang.Class<?> wildcardClass87 = intArray82.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0272");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem0.Hashmap(intArray29, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem36.Hashmap(intArray40, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem36.TwoPointer(intArray48, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem53.Hashmap(intArray57, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem53.TwoPointer(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem36.Hashmap(intArray65, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.Hashmap(intArray65, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray83 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem74.BruteForce(intArray83, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.BruteForce(intArray83, 100);
        java.lang.Class<?> wildcardClass88 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0273");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem29.Hashmap(intArray33, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.BruteForce(intArray33, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem41.TwoPointer(intArray48, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem40.TwoPointer(intArray48, (int) (byte) 0);
        int[] intArray57 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem40.Hashmap(intArray57, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem20.BruteForce(intArray57, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem62.Hashmap(intArray66, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray75 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem72.BruteForce(intArray75, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem71.Hashmap(intArray75, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem62.BruteForce(intArray75, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem20.TwoPointer(intArray75, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.TwoPointer(intArray75, (int) (short) 10);
        java.lang.Class<?> wildcardClass86 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0274");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem20.TwoPointer(intArray32, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem37.TwoPointer(intArray49, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem20.Hashmap(intArray49, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem56.Hashmap(intArray60, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem56.TwoPointer(intArray68, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem73.Hashmap(intArray77, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem82 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem82.BruteForce(intArray85, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem73.TwoPointer(intArray85, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem56.Hashmap(intArray85, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem20.Hashmap(intArray85, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.BruteForce(intArray85, (int) (byte) 1);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.BruteForce(intArray96, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
    }

    @Test
    public void test0275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0275");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.Hashmap(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem28.BruteForce(intArray31, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem0.TwoPointer(intArray31, (int) (short) 100);
        java.lang.Class<?> wildcardClass36 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test0276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0276");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem34.BruteForce(intArray37, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem34.TwoPointer(intArray43, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem48.Hashmap(intArray52, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem48.TwoPointer(intArray60, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem34.BruteForce(intArray60, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem0.BruteForce(intArray60, (int) (byte) 1);
        java.lang.Class<?> wildcardClass69 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0277");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray26 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem17.BruteForce(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray46 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem37.BruteForce(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem17.BruteForce(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.Hashmap(intArray46, (int) ' ');
        int[] intArray53 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem0.TwoPointer(intArray53, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"a\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
    }

    @Test
    public void test0278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0278");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        java.lang.Class<?> wildcardClass10 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0279");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem26.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem26.TwoPointer(intArray38, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem9.Hashmap(intArray38, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem0.BruteForce(intArray38, 10);
        java.lang.Class<?> wildcardClass47 = intListList46.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0280");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem30.TwoPointer(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem29.TwoPointer(intArray37, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem20.BruteForce(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem0.TwoPointer(intArray37, (int) (byte) 10);
        java.lang.Class<?> wildcardClass46 = intListList45.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0281");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem17.TwoPointer(intArray24, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem16.TwoPointer(intArray24, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.BruteForce(intArray24, (int) (short) 100);
        java.lang.Class<?> wildcardClass31 = intListList30.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0282");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem0.BruteForce(intArray17, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem25 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem25.BruteForce(intArray28, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem24.Hashmap(intArray28, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem34.BruteForce(intArray37, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem33.Hashmap(intArray37, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem33.TwoPointer(intArray45, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem50.Hashmap(intArray54, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem50.TwoPointer(intArray62, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem33.Hashmap(intArray62, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem24.BruteForce(intArray62, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem0.Hashmap(intArray62, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem73.Hashmap(intArray77, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem0.Hashmap(intArray77, 0);
        java.lang.Class<?> wildcardClass84 = intListList83.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0283");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.TwoPointer(intArray29, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem35.TwoPointer(intArray42, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem34.TwoPointer(intArray42, (int) (byte) 0);
        int[] intArray51 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem34.Hashmap(intArray51, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem55.TwoPointer(intArray62, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem54.TwoPointer(intArray62, (int) (byte) 0);
        int[] intArray71 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem54.Hashmap(intArray71, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem34.Hashmap(intArray71, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem76.BruteForce(intArray79, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem34.Hashmap(intArray79, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.Hashmap(intArray79, (int) (byte) 100);
        int[] intArray86 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.Hashmap(intArray86, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"a\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
    }

    @Test
    public void test0284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0284");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray37, (int) '4');
        int[] intArray42 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem0.Hashmap(intArray42, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"a\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
    }

    @Test
    public void test0285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0285");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem14.Hashmap(intArray18, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem23.Hashmap(intArray27, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem14.BruteForce(intArray27, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem35.TwoPointer(intArray42, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem34.TwoPointer(intArray42, (int) (byte) 0);
        int[] intArray51 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem34.Hashmap(intArray51, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem14.BruteForce(intArray51, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem56.Hashmap(intArray60, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem66.BruteForce(intArray69, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem65.Hashmap(intArray69, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem56.BruteForce(intArray69, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem14.TwoPointer(intArray69, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem0.TwoPointer(intArray69, (int) (byte) 1);
        java.lang.Class<?> wildcardClass80 = intListList79.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0286");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem34.TwoPointer(intArray41, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem33.TwoPointer(intArray41, (int) (byte) 0);
        int[] intArray50 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem33.Hashmap(intArray50, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem20.Hashmap(intArray50, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem55.Hashmap(intArray59, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem64.Hashmap(intArray68, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem64.TwoPointer(intArray76, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem55.Hashmap(intArray76, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem20.BruteForce(intArray76, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem0.TwoPointer(intArray76, (int) (byte) 100);
        java.lang.Class<?> wildcardClass87 = intListList86.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0287");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem20.TwoPointer(intArray32, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem37.TwoPointer(intArray49, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem54.Hashmap(intArray58, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem54.TwoPointer(intArray66, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem37.Hashmap(intArray66, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem20.BruteForce(intArray66, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem76.BruteForce(intArray79, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem75.Hashmap(intArray79, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem84 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem84.BruteForce(intArray87, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem75.TwoPointer(intArray87, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem20.Hashmap(intArray87, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.Hashmap(intArray87, (int) ' ');
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.BruteForce(intArray96, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
    }

    @Test
    public void test0288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0288");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem17.Hashmap(intArray46, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray62 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem53.BruteForce(intArray62, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem53.Hashmap(intArray68, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray82 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem73.BruteForce(intArray82, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem53.TwoPointer(intArray82, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem17.Hashmap(intArray82, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem0.BruteForce(intArray82, 1);
        java.lang.Class<?> wildcardClass91 = intListList90.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0289");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        java.lang.Class<?> wildcardClass16 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0290");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray37, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem42.Hashmap(intArray46, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem51.Hashmap(intArray55, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem42.BruteForce(intArray55, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem0.TwoPointer(intArray55, (int) ' ');
        java.lang.Class<?> wildcardClass64 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0291");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem0.Hashmap(intArray45, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem50.BruteForce(intArray53, (int) '#');
        int[] intArray59 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem50.BruteForce(intArray59, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem50.Hashmap(intArray65, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem70.BruteForce(intArray73, (int) '#');
        int[] intArray79 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem70.BruteForce(intArray79, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem50.TwoPointer(intArray79, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.Hashmap(intArray79, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem86 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem87 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray90 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem87.BruteForce(intArray90, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem86.BruteForce(intArray90, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.BruteForce(intArray90, (int) (byte) 10);
        java.lang.Class<?> wildcardClass97 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0292");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem51.Hashmap(intArray55, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem51.TwoPointer(intArray63, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem34.Hashmap(intArray63, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem17.BruteForce(intArray63, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem72.Hashmap(intArray76, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem81 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem81.BruteForce(intArray84, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem72.TwoPointer(intArray84, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem17.Hashmap(intArray84, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem0.Hashmap(intArray84, (int) (byte) 100);
        java.lang.Class<?> wildcardClass93 = intListList92.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0293");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem34.TwoPointer(intArray41, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem0.TwoPointer(intArray41, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem46.TwoPointer(intArray53, (int) (short) 1);
        int[] intArray59 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem46.TwoPointer(intArray59, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem0.BruteForce(intArray59, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem70.BruteForce(intArray73, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem64.TwoPointer(intArray73, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem79 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem79.BruteForce(intArray82, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem78.Hashmap(intArray82, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem87 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray90 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem87.BruteForce(intArray90, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem78.TwoPointer(intArray90, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem64.BruteForce(intArray90, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.BruteForce(intArray90, 0);
        java.lang.Class<?> wildcardClass99 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0294");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem34.TwoPointer(intArray41, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem0.TwoPointer(intArray41, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem46.TwoPointer(intArray53, (int) (short) 1);
        int[] intArray59 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem46.TwoPointer(intArray59, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem0.BruteForce(intArray59, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem70.BruteForce(intArray73, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem64.TwoPointer(intArray73, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem79 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem79.BruteForce(intArray82, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem78.Hashmap(intArray82, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem87 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray90 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem87.BruteForce(intArray90, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem78.TwoPointer(intArray90, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem64.BruteForce(intArray90, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.BruteForce(intArray90, 0);
        java.lang.Class<?> wildcardClass99 = intListList98.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0295");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem14.Hashmap(intArray18, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem23.Hashmap(intArray27, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem23.TwoPointer(intArray35, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem40.Hashmap(intArray44, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem40.TwoPointer(intArray52, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem23.Hashmap(intArray52, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem14.BruteForce(intArray52, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem0.Hashmap(intArray52, 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem63.TwoPointer(intArray70, (int) (short) 1);
        int[] intArray76 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem63.TwoPointer(intArray76, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem0.BruteForce(intArray76, (int) (short) 1);
        java.lang.Class<?> wildcardClass81 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test0296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0296");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem11.BruteForce(intArray14, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem10.Hashmap(intArray14, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem19.Hashmap(intArray23, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.BruteForce(intArray23, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem31.TwoPointer(intArray38, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem30.TwoPointer(intArray38, (int) (byte) 0);
        int[] intArray47 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem30.Hashmap(intArray47, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem10.BruteForce(intArray47, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem10.Hashmap(intArray55, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem10.TwoPointer(intArray63, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem9.TwoPointer(intArray63, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem0.Hashmap(intArray63, (int) '#');
        int[] intArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem0.TwoPointer(intArray72, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"a\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
    }

    @Test
    public void test0297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0297");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem7 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray14 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem7.TwoPointer(intArray14, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem6.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem19.Hashmap(intArray23, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem28.BruteForce(intArray31, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem19.TwoPointer(intArray31, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem36.Hashmap(intArray40, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem36.TwoPointer(intArray48, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem19.Hashmap(intArray48, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem6.Hashmap(intArray48, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem6.TwoPointer(intArray60, (int) (short) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem0.Hashmap(intArray60, (int) '#');
        java.lang.Class<?> wildcardClass67 = intArray60.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test0298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0298");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray26 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem17.BruteForce(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray46 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem37.BruteForce(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem17.BruteForce(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.Hashmap(intArray46, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem53.Hashmap(intArray57, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem62.Hashmap(intArray66, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem53.BruteForce(intArray66, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem0.BruteForce(intArray66, 1);
        java.lang.Class<?> wildcardClass75 = intListList74.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test0299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0299");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem6.TwoPointer(intArray13, (int) (short) 1);
        int[] intArray19 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem6.TwoPointer(intArray19, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem23.TwoPointer(intArray30, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem22.TwoPointer(intArray30, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem6.BruteForce(intArray30, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray30, (-1));
        java.lang.Class<?> wildcardClass39 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0300");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.BruteForce(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.TwoPointer(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem28.Hashmap(intArray32, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem28.BruteForce(intArray41, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem49.TwoPointer(intArray56, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem48.TwoPointer(intArray56, (int) (byte) 0);
        int[] intArray65 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem48.Hashmap(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem28.BruteForce(intArray65, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem70.BruteForce(intArray73, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem28.Hashmap(intArray73, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem78.BruteForce(intArray81, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem28.TwoPointer(intArray81, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.TwoPointer(intArray81, (int) (short) 0);
        int[] intArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem0.Hashmap(intArray88, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"a\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
    }

    @Test
    public void test0301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0301");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray26 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem17.BruteForce(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray46 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem37.BruteForce(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem17.BruteForce(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.Hashmap(intArray46, (int) ' ');
        int[] intArray53 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem0.Hashmap(intArray53, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"a\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
    }

    @Test
    public void test0302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0302");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray10 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem1.BruteForce(intArray10, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem13.BruteForce(intArray16, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem1.Hashmap(intArray16, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem22.BruteForce(intArray25, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem21.Hashmap(intArray25, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem21.BruteForce(intArray34, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem42.TwoPointer(intArray49, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem41.TwoPointer(intArray49, (int) (byte) 0);
        int[] intArray58 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem41.Hashmap(intArray58, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem21.BruteForce(intArray58, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem63.Hashmap(intArray67, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem72.Hashmap(intArray76, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem63.BruteForce(intArray76, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem21.TwoPointer(intArray76, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem1.TwoPointer(intArray76, (int) (short) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.BruteForce(intArray76, (int) 'a');
        java.lang.Class<?> wildcardClass89 = intListList88.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0303");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem20.TwoPointer(intArray32, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem37.TwoPointer(intArray49, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem20.Hashmap(intArray49, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray65 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem56.BruteForce(intArray65, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem56.Hashmap(intArray71, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray85 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem76.BruteForce(intArray85, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem56.TwoPointer(intArray85, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem20.Hashmap(intArray85, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem0.Hashmap(intArray85, (int) (short) 100);
        java.lang.Class<?> wildcardClass94 = intArray85.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0304");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem17.Hashmap(intArray46, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem53.Hashmap(intArray57, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem53.TwoPointer(intArray65, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem70.Hashmap(intArray74, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem79 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem79.BruteForce(intArray82, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem70.TwoPointer(intArray82, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem53.Hashmap(intArray82, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem17.Hashmap(intArray82, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem16.TwoPointer(intArray82, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem0.BruteForce(intArray82, (int) (short) 1);
        java.lang.Class<?> wildcardClass95 = intListList94.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0305");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem13.BruteForce(intArray16, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem12.Hashmap(intArray16, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem22.BruteForce(intArray25, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem21.Hashmap(intArray25, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem21.TwoPointer(intArray33, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem38.Hashmap(intArray42, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem47.BruteForce(intArray50, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem38.TwoPointer(intArray50, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem21.Hashmap(intArray50, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem12.BruteForce(intArray50, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem59.Hashmap(intArray63, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem59.TwoPointer(intArray71, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem77.BruteForce(intArray80, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem76.Hashmap(intArray80, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem85 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray88 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem85.BruteForce(intArray88, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem76.TwoPointer(intArray88, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem59.Hashmap(intArray88, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem12.BruteForce(intArray88, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.TwoPointer(intArray88, (int) (byte) 100);
        java.lang.Class<?> wildcardClass99 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0306");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.Hashmap(intArray21, 0);
        java.lang.Class<?> wildcardClass28 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0307");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem14.Hashmap(intArray18, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem23.Hashmap(intArray27, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem23.TwoPointer(intArray35, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem40.Hashmap(intArray44, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem40.TwoPointer(intArray52, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem23.Hashmap(intArray52, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem14.BruteForce(intArray52, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem0.Hashmap(intArray52, 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem63.TwoPointer(intArray70, (int) (short) 1);
        int[] intArray76 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem63.TwoPointer(intArray76, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem0.BruteForce(intArray76, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem81 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem81.BruteForce(intArray84, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.Hashmap(intArray84, 10);
        java.lang.Class<?> wildcardClass89 = intListList88.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0308");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        java.lang.Class<?> wildcardClass12 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0309");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem20.TwoPointer(intArray29, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem44.BruteForce(intArray47, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem43.Hashmap(intArray47, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem43.TwoPointer(intArray55, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem61.BruteForce(intArray64, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem60.Hashmap(intArray64, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem69.BruteForce(intArray72, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem60.TwoPointer(intArray72, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem43.Hashmap(intArray72, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem34.BruteForce(intArray72, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem20.Hashmap(intArray72, 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.Hashmap(intArray72, (int) (byte) 10);
        java.lang.Class<?> wildcardClass85 = intListList84.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0310");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem34.TwoPointer(intArray41, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem0.TwoPointer(intArray41, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem46.TwoPointer(intArray53, (int) (short) 1);
        int[] intArray59 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem46.TwoPointer(intArray59, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem0.Hashmap(intArray59, (int) (short) 1);
        java.lang.Class<?> wildcardClass64 = intArray59.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0311");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem26.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem26.TwoPointer(intArray38, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem9.Hashmap(intArray38, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem45.Hashmap(intArray49, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem45.TwoPointer(intArray57, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem62.Hashmap(intArray66, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem62.TwoPointer(intArray74, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem45.Hashmap(intArray74, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem9.Hashmap(intArray74, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.TwoPointer(intArray74, (int) (byte) 10);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.TwoPointer(intArray85, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"a\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
    }

    @Test
    public void test0312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0312");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem13.BruteForce(intArray16, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem12.Hashmap(intArray16, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem22.BruteForce(intArray25, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem21.Hashmap(intArray25, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem21.TwoPointer(intArray33, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem38.Hashmap(intArray42, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem47.BruteForce(intArray50, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem38.TwoPointer(intArray50, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem21.Hashmap(intArray50, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem12.BruteForce(intArray50, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem59.Hashmap(intArray63, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem59.TwoPointer(intArray71, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem77.BruteForce(intArray80, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem76.Hashmap(intArray80, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem85 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray88 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem85.BruteForce(intArray88, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem76.TwoPointer(intArray88, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem59.Hashmap(intArray88, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem12.BruteForce(intArray88, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.TwoPointer(intArray88, (int) (byte) 100);
        java.lang.Class<?> wildcardClass99 = intArray88.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0313");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem51.Hashmap(intArray55, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem51.TwoPointer(intArray63, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem69.BruteForce(intArray72, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem68.Hashmap(intArray72, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem77.BruteForce(intArray80, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem68.TwoPointer(intArray80, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem51.Hashmap(intArray80, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem34.BruteForce(intArray80, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem0.Hashmap(intArray80, (int) (byte) 0);
        int[] intArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem0.TwoPointer(intArray91, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"a\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
    }

    @Test
    public void test0314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0314");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem30.TwoPointer(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem29.TwoPointer(intArray37, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem20.BruteForce(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem0.TwoPointer(intArray37, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem46.TwoPointer(intArray55, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem0.Hashmap(intArray55, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem63.TwoPointer(intArray70, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem62.TwoPointer(intArray70, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem0.TwoPointer(intArray70, (int) ' ');
        java.lang.Class<?> wildcardClass77 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test0315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0315");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray26 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem17.BruteForce(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray46 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem37.BruteForce(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem17.TwoPointer(intArray46, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem51.Hashmap(intArray55, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem51.TwoPointer(intArray63, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem17.TwoPointer(intArray63, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem0.Hashmap(intArray63, (int) 'a');
        java.lang.Class<?> wildcardClass72 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0316");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem13.Hashmap(intArray17, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem23.BruteForce(intArray26, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem22.Hashmap(intArray26, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem13.BruteForce(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem34.TwoPointer(intArray41, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem33.TwoPointer(intArray41, (int) (byte) 0);
        int[] intArray50 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem33.Hashmap(intArray50, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem13.BruteForce(intArray50, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem13.Hashmap(intArray58, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem13.TwoPointer(intArray66, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem0.Hashmap(intArray66, (-1));
        java.lang.Class<?> wildcardClass73 = intListList72.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0317");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem23.BruteForce(intArray26, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem17.TwoPointer(intArray26, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem31.Hashmap(intArray35, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem40.Hashmap(intArray44, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem40.TwoPointer(intArray52, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem58.BruteForce(intArray61, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem57.Hashmap(intArray61, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem66.BruteForce(intArray69, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem57.TwoPointer(intArray69, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem40.Hashmap(intArray69, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem31.BruteForce(intArray69, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem17.Hashmap(intArray69, 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem0.Hashmap(intArray69, 100);
        java.lang.Class<?> wildcardClass82 = intListList81.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0318");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem30.TwoPointer(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem29.TwoPointer(intArray37, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem20.BruteForce(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem0.TwoPointer(intArray37, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem47.BruteForce(intArray50, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem46.Hashmap(intArray50, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem55.Hashmap(intArray59, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem46.BruteForce(intArray59, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem67.TwoPointer(intArray74, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem66.TwoPointer(intArray74, (int) (byte) 0);
        int[] intArray83 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem66.Hashmap(intArray83, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem46.BruteForce(intArray83, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem0.TwoPointer(intArray83, (int) (byte) 1);
        java.lang.Class<?> wildcardClass90 = intArray83.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0319");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem34.TwoPointer(intArray41, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem0.TwoPointer(intArray41, 1);
        java.lang.Class<?> wildcardClass46 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test0320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0320");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem17.Hashmap(intArray46, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem53.Hashmap(intArray57, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem53.TwoPointer(intArray65, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem70.Hashmap(intArray74, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem79 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem79.BruteForce(intArray82, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem70.TwoPointer(intArray82, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem53.Hashmap(intArray82, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem17.Hashmap(intArray82, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem16.TwoPointer(intArray82, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem0.BruteForce(intArray82, (int) (short) 1);
        java.lang.Class<?> wildcardClass95 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0321");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem23.BruteForce(intArray26, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem17.TwoPointer(intArray26, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem31.Hashmap(intArray35, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem40.Hashmap(intArray44, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem40.TwoPointer(intArray52, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem58.BruteForce(intArray61, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem57.Hashmap(intArray61, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem66.BruteForce(intArray69, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem57.TwoPointer(intArray69, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem40.Hashmap(intArray69, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem31.BruteForce(intArray69, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem17.Hashmap(intArray69, 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem0.Hashmap(intArray69, 100);
        java.lang.Class<?> wildcardClass82 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0322");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem51.Hashmap(intArray55, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem51.TwoPointer(intArray63, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem69.BruteForce(intArray72, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem68.Hashmap(intArray72, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem77.BruteForce(intArray80, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem68.TwoPointer(intArray80, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem51.Hashmap(intArray80, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem34.BruteForce(intArray80, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem0.Hashmap(intArray80, (int) (byte) 100);
        java.lang.Class<?> wildcardClass91 = intListList90.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0323");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem13.Hashmap(intArray17, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem22.BruteForce(intArray25, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem13.TwoPointer(intArray25, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem30.TwoPointer(intArray42, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem13.Hashmap(intArray42, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem0.Hashmap(intArray42, (int) (byte) -1);
        int[] intArray51 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem0.BruteForce(intArray51, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
    }

    @Test
    public void test0324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0324");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem29.Hashmap(intArray33, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.BruteForce(intArray33, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray33, (-1));
        int[] intArray45 = new int[] { (short) 10, (short) 100, (byte) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem0.BruteForce(intArray45, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem49.TwoPointer(intArray56, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem48.TwoPointer(intArray56, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray69 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem62.TwoPointer(intArray69, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem61.TwoPointer(intArray69, (int) (byte) 0);
        int[] intArray78 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem61.Hashmap(intArray78, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem48.Hashmap(intArray78, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.Hashmap(intArray78, (int) (byte) -1);
        java.lang.Class<?> wildcardClass85 = intArray78.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[10, 100, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0325");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem29.Hashmap(intArray33, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.BruteForce(intArray33, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem41.TwoPointer(intArray48, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem40.TwoPointer(intArray48, (int) (byte) 0);
        int[] intArray57 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem40.Hashmap(intArray57, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem20.BruteForce(intArray57, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem0.Hashmap(intArray57, (int) (short) 1);
        java.lang.Class<?> wildcardClass64 = intArray57.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0326");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem18.TwoPointer(intArray25, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem17.TwoPointer(intArray25, (int) (byte) 0);
        int[] intArray34 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray34, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem38.TwoPointer(intArray45, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem37.TwoPointer(intArray45, (int) (byte) 0);
        int[] intArray54 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem37.Hashmap(intArray54, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem17.Hashmap(intArray54, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem17.Hashmap(intArray62, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem0.TwoPointer(intArray62, (int) (byte) -1);
        java.lang.Class<?> wildcardClass69 = intArray62.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0327");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem30.TwoPointer(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem29.TwoPointer(intArray37, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem20.BruteForce(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem0.TwoPointer(intArray37, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        int[] intArray55 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem46.BruteForce(intArray55, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem58.BruteForce(intArray61, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem46.Hashmap(intArray61, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem67.BruteForce(intArray70, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem66.Hashmap(intArray70, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem75.BruteForce(intArray78, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem66.TwoPointer(intArray78, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem46.Hashmap(intArray78, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem0.TwoPointer(intArray78, (int) (short) -1);
        java.lang.Class<?> wildcardClass87 = intListList86.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0328");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem51.Hashmap(intArray55, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem51.TwoPointer(intArray63, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem69.BruteForce(intArray72, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem68.Hashmap(intArray72, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem77.BruteForce(intArray80, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem68.TwoPointer(intArray80, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem51.Hashmap(intArray80, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem34.BruteForce(intArray80, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem0.Hashmap(intArray80, (int) (byte) 100);
        java.lang.Class<?> wildcardClass91 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0329");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem34.TwoPointer(intArray41, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem0.TwoPointer(intArray41, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem46.TwoPointer(intArray53, (int) (short) 1);
        int[] intArray59 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem46.TwoPointer(intArray59, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem0.Hashmap(intArray59, (int) (short) 1);
        java.lang.Class<?> wildcardClass64 = intListList63.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0330");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.BruteForce(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.TwoPointer(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem28.Hashmap(intArray32, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem28.BruteForce(intArray41, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem49.TwoPointer(intArray56, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem48.TwoPointer(intArray56, (int) (byte) 0);
        int[] intArray65 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem48.Hashmap(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem28.BruteForce(intArray65, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem70.TwoPointer(intArray77, (int) (short) 1);
        int[] intArray83 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem70.TwoPointer(intArray83, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem28.Hashmap(intArray83, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem0.BruteForce(intArray83, (-1));
        java.lang.Class<?> wildcardClass90 = intArray83.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0331");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray25 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem16.BruteForce(intArray25, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem28.BruteForce(intArray31, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem16.Hashmap(intArray31, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray45 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem36.BruteForce(intArray45, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem16.BruteForce(intArray45, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem50.TwoPointer(intArray57, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem16.TwoPointer(intArray57, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem0.BruteForce(intArray57, (int) (short) 1);
        java.lang.Class<?> wildcardClass64 = intArray57.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0332");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem14.TwoPointer(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem13.TwoPointer(intArray21, (int) (byte) 0);
        int[] intArray30 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem13.Hashmap(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem0.Hashmap(intArray30, (int) '#');
        java.lang.Class<?> wildcardClass35 = intListList34.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test0333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0333");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        int[] intArray14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
    }

    @Test
    public void test0334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0334");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem19.TwoPointer(intArray26, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem18.TwoPointer(intArray26, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem31.Hashmap(intArray35, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem31.TwoPointer(intArray43, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem48.Hashmap(intArray52, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem48.TwoPointer(intArray60, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem31.Hashmap(intArray60, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem18.Hashmap(intArray60, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem69.BruteForce(intArray72, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem18.TwoPointer(intArray72, (int) (short) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem12.Hashmap(intArray72, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem0.TwoPointer(intArray72, 0);
        int[] intArray81 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem0.Hashmap(intArray81, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
    }

    @Test
    public void test0335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0335");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        int[] intArray23 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem14.BruteForce(intArray23, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.BruteForce(intArray23, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray37 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem28.BruteForce(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem46.TwoPointer(intArray53, (int) (short) 1);
        int[] intArray59 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem46.TwoPointer(intArray59, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem63.TwoPointer(intArray70, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem62.TwoPointer(intArray70, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem46.BruteForce(intArray70, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem40.Hashmap(intArray70, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem28.BruteForce(intArray70, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem0.TwoPointer(intArray70, 100);
        java.lang.Class<?> wildcardClass83 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0336");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
    }

    @Test
    public void test0337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0337");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.Hashmap(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem28.Hashmap(intArray32, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem37.TwoPointer(intArray49, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem28.Hashmap(intArray49, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem28.TwoPointer(intArray59, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem0.BruteForce(intArray59, (-1));
        java.lang.Class<?> wildcardClass66 = intListList65.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test0338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0338");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem7 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray14 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem7.TwoPointer(intArray14, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem6.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem20.TwoPointer(intArray27, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem19.TwoPointer(intArray27, (int) (byte) 0);
        int[] intArray36 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem19.Hashmap(intArray36, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem6.Hashmap(intArray36, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem47.BruteForce(intArray50, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem41.TwoPointer(intArray50, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray64 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem55.BruteForce(intArray64, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem41.BruteForce(intArray64, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem6.TwoPointer(intArray64, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem0.TwoPointer(intArray64, (int) (byte) 10);
        java.lang.Class<?> wildcardClass73 = intListList72.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray36), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0339");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray37, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem42.TwoPointer(intArray49, (int) (short) 1);
        int[] intArray55 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem42.TwoPointer(intArray55, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem0.Hashmap(intArray55, 0);
        java.lang.Class<?> wildcardClass60 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test0340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0340");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem26.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem26.TwoPointer(intArray38, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem9.Hashmap(intArray38, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem45.Hashmap(intArray49, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem45.TwoPointer(intArray57, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem62.Hashmap(intArray66, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem62.TwoPointer(intArray74, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem45.Hashmap(intArray74, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem9.Hashmap(intArray74, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.TwoPointer(intArray74, (int) (byte) 10);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.Hashmap(intArray85, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
    }

    @Test
    public void test0341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0341");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.TwoPointer(intArray29, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem35.TwoPointer(intArray42, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem34.TwoPointer(intArray42, (int) (byte) 0);
        int[] intArray51 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem34.Hashmap(intArray51, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem55.TwoPointer(intArray62, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem54.TwoPointer(intArray62, (int) (byte) 0);
        int[] intArray71 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem54.Hashmap(intArray71, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem34.Hashmap(intArray71, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem76.BruteForce(intArray79, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem34.Hashmap(intArray79, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.Hashmap(intArray79, (int) (byte) 100);
        java.lang.Class<?> wildcardClass86 = intArray79.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0342");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.Hashmap(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem28.Hashmap(intArray32, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem37.TwoPointer(intArray49, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem28.Hashmap(intArray49, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.TwoPointer(intArray49, (int) '4');
        java.lang.Class<?> wildcardClass58 = intListList57.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0343");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem29.Hashmap(intArray33, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.BruteForce(intArray33, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray33, (-1));
        java.lang.Class<?> wildcardClass42 = intListList41.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0344");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem29.Hashmap(intArray33, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.BruteForce(intArray33, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray33, (-1));
        int[] intArray45 = new int[] { (short) 10, (short) 100, (byte) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem0.BruteForce(intArray45, (int) ' ');
        java.lang.Class<?> wildcardClass48 = intListList47.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[10, 100, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0345");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray26 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem17.BruteForce(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray46 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem37.BruteForce(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem17.TwoPointer(intArray46, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem51.Hashmap(intArray55, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem51.TwoPointer(intArray63, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem17.TwoPointer(intArray63, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem0.Hashmap(intArray63, (int) 'a');
        int[] intArray72 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem0.TwoPointer(intArray72, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
    }

    @Test
    public void test0346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0346");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem14.Hashmap(intArray18, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem23.Hashmap(intArray27, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem14.BruteForce(intArray27, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem35.TwoPointer(intArray42, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem34.TwoPointer(intArray42, (int) (byte) 0);
        int[] intArray51 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem34.Hashmap(intArray51, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem14.BruteForce(intArray51, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem56.Hashmap(intArray60, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray69 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem66.BruteForce(intArray69, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem65.Hashmap(intArray69, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem56.BruteForce(intArray69, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem14.TwoPointer(intArray69, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem0.TwoPointer(intArray69, (int) (byte) 1);
        java.lang.Class<?> wildcardClass80 = intArray69.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0347");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem13.Hashmap(intArray17, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem22.BruteForce(intArray25, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem13.TwoPointer(intArray25, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem30.TwoPointer(intArray42, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem13.Hashmap(intArray42, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem0.Hashmap(intArray42, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem51.TwoPointer(intArray58, (int) (short) 1);
        int[] intArray64 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem51.TwoPointer(intArray64, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray75 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem68.TwoPointer(intArray75, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem67.TwoPointer(intArray75, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem51.BruteForce(intArray75, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem0.TwoPointer(intArray75, (int) (short) 1);
        java.lang.Class<?> wildcardClass84 = intArray75.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0348");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem14.TwoPointer(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem13.TwoPointer(intArray21, (int) (byte) 0);
        int[] intArray30 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem13.Hashmap(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem0.Hashmap(intArray30, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem35.TwoPointer(intArray44, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        int[] intArray58 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem49.BruteForce(intArray58, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem35.BruteForce(intArray58, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem0.TwoPointer(intArray58, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem66.TwoPointer(intArray73, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem65.TwoPointer(intArray73, (int) (byte) 0);
        int[] intArray82 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem65.Hashmap(intArray82, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem0.TwoPointer(intArray82, (int) (short) 100);
        java.lang.Class<?> wildcardClass87 = intListList86.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0349");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        java.lang.Class<?> wildcardClass20 = intListList19.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test0350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0350");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem11.BruteForce(intArray14, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem10.Hashmap(intArray14, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem19.Hashmap(intArray23, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.BruteForce(intArray23, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem31.TwoPointer(intArray38, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem30.TwoPointer(intArray38, (int) (byte) 0);
        int[] intArray47 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem30.Hashmap(intArray47, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem10.BruteForce(intArray47, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem10.Hashmap(intArray55, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem10.TwoPointer(intArray63, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem9.TwoPointer(intArray63, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem0.Hashmap(intArray63, (int) '#');
        java.lang.Class<?> wildcardClass72 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0351");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem17.Hashmap(intArray46, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem0.BruteForce(intArray46, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        int[] intArray64 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem55.BruteForce(intArray64, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem67.BruteForce(intArray70, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem55.Hashmap(intArray70, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem0.TwoPointer(intArray70, 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem78.BruteForce(intArray81, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem77.Hashmap(intArray81, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem86 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem86.BruteForce(intArray89, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem77.TwoPointer(intArray89, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.TwoPointer(intArray89, 0);
        java.lang.Class<?> wildcardClass96 = intArray89.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0352");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem42.Hashmap(intArray46, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem51.Hashmap(intArray55, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem42.BruteForce(intArray55, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem0.Hashmap(intArray55, (int) '#');
        java.lang.Class<?> wildcardClass64 = intArray55.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0353");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem23.BruteForce(intArray26, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem17.TwoPointer(intArray26, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem31.Hashmap(intArray35, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem31.TwoPointer(intArray43, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem17.BruteForce(intArray43, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem0.Hashmap(intArray43, 10);
        java.lang.Class<?> wildcardClass52 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0354");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem14.TwoPointer(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem13.TwoPointer(intArray21, (int) (byte) 0);
        int[] intArray30 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem13.Hashmap(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem0.Hashmap(intArray30, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem35.Hashmap(intArray39, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem44.BruteForce(intArray47, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem35.TwoPointer(intArray47, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem53.BruteForce(intArray56, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem52.Hashmap(intArray56, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem61.BruteForce(intArray64, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem52.TwoPointer(intArray64, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem70.BruteForce(intArray73, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem69.Hashmap(intArray73, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem78.BruteForce(intArray81, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem69.TwoPointer(intArray81, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem52.Hashmap(intArray81, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem35.BruteForce(intArray81, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem0.BruteForce(intArray81, (int) (byte) 0);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem0.TwoPointer(intArray92, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
    }

    @Test
    public void test0355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0355");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem18.TwoPointer(intArray25, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem17.TwoPointer(intArray25, (int) (byte) 0);
        int[] intArray34 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray34, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray34, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem40.TwoPointer(intArray47, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem39.TwoPointer(intArray47, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem0.BruteForce(intArray47, 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem54.Hashmap(intArray58, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem63.Hashmap(intArray67, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem54.BruteForce(intArray67, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem0.BruteForce(intArray67, (int) (byte) -1);
        java.lang.Class<?> wildcardClass76 = intArray67.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0356");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem42.TwoPointer(intArray51, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.BruteForce(intArray51, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem59.TwoPointer(intArray66, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem58.TwoPointer(intArray66, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem72.TwoPointer(intArray79, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem71.TwoPointer(intArray79, (int) (byte) 0);
        int[] intArray88 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem71.Hashmap(intArray88, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem58.Hashmap(intArray88, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem0.BruteForce(intArray88, (int) '4');
        java.lang.Class<?> wildcardClass95 = intArray88.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0357");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        int[] intArray20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem0.Hashmap(intArray20, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
    }

    @Test
    public void test0358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0358");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem34.TwoPointer(intArray41, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem0.TwoPointer(intArray41, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem46.TwoPointer(intArray53, (int) (short) 1);
        int[] intArray59 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem46.TwoPointer(intArray59, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem0.BruteForce(intArray59, 0);
        int[] intArray64 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem0.BruteForce(intArray64, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot read the array length because \"nums\" is null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
    }

    @Test
    public void test0359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0359");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem20.TwoPointer(intArray29, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem44.BruteForce(intArray47, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem43.Hashmap(intArray47, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem43.TwoPointer(intArray55, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem61.BruteForce(intArray64, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem60.Hashmap(intArray64, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem69.BruteForce(intArray72, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem60.TwoPointer(intArray72, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem43.Hashmap(intArray72, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem34.BruteForce(intArray72, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem20.Hashmap(intArray72, 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.Hashmap(intArray72, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem85 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray88 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem85.BruteForce(intArray88, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem0.BruteForce(intArray88, (int) '4');
        java.lang.Class<?> wildcardClass93 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0360");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem14.Hashmap(intArray18, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem23.Hashmap(intArray27, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem23.TwoPointer(intArray35, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem40.Hashmap(intArray44, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem40.TwoPointer(intArray52, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem23.Hashmap(intArray52, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem14.BruteForce(intArray52, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem0.Hashmap(intArray52, 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem63.TwoPointer(intArray70, (int) (short) 1);
        int[] intArray76 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem63.TwoPointer(intArray76, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem0.BruteForce(intArray76, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem81 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem82 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray89 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem82.TwoPointer(intArray89, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem81.TwoPointer(intArray89, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.TwoPointer(intArray89, (int) '#');
        java.lang.Class<?> wildcardClass96 = intListList95.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test0361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0361");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray37, (int) '4');
        java.lang.Class<?> wildcardClass42 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0362");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem42.Hashmap(intArray46, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem42.TwoPointer(intArray54, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem59.Hashmap(intArray63, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem59.TwoPointer(intArray71, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem42.Hashmap(intArray71, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem0.TwoPointer(intArray71, (int) (byte) 10);
        int[] intArray80 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem0.TwoPointer(intArray80, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
    }

    @Test
    public void test0363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0363");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem2.TwoPointer(intArray9, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem1.TwoPointer(intArray9, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem14.Hashmap(intArray18, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem24.TwoPointer(intArray31, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem23.TwoPointer(intArray31, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem14.BruteForce(intArray31, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem1.BruteForce(intArray31, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray31, (int) (byte) 100);
        java.lang.Class<?> wildcardClass42 = intListList41.getClass();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0364");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList7 = threeSumProblem2.BruteForce(intArray5, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem1.Hashmap(intArray5, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem1.TwoPointer(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem18.BruteForce(intArray22, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem1.TwoPointer(intArray22, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem29.Hashmap(intArray33, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem1.BruteForce(intArray33, (int) (byte) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray49 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem40.BruteForce(intArray49, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem40.Hashmap(intArray55, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        int[] intArray69 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem60.BruteForce(intArray69, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem40.BruteForce(intArray69, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem74.TwoPointer(intArray81, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem40.TwoPointer(intArray81, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem1.TwoPointer(intArray81, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem0.BruteForce(intArray81, 10);
        java.lang.Class<?> wildcardClass90 = intListList89.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList7);
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray69), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0365");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray26 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem17.BruteForce(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray46 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem37.BruteForce(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem17.BruteForce(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.Hashmap(intArray46, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem53.Hashmap(intArray57, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem62.Hashmap(intArray66, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem53.BruteForce(intArray66, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem0.BruteForce(intArray66, 1);
        java.lang.Class<?> wildcardClass75 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test0366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0366");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem17.TwoPointer(intArray24, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem16.TwoPointer(intArray24, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.BruteForce(intArray24, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem31.Hashmap(intArray35, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem31.TwoPointer(intArray43, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem48.BruteForce(intArray52, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem31.TwoPointer(intArray52, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem0.Hashmap(intArray52, (int) ' ');
        java.lang.Class<?> wildcardClass61 = intArray52.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0367");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        int[] intArray26 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem9.Hashmap(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem30.TwoPointer(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem29.TwoPointer(intArray37, (int) (byte) 0);
        int[] intArray46 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem29.Hashmap(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem9.Hashmap(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.Hashmap(intArray46, (int) '4');
        java.lang.Class<?> wildcardClass53 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0368");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem0.Hashmap(intArray45, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem50.Hashmap(intArray54, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem0.Hashmap(intArray54, (int) (byte) 0);
        java.lang.Class<?> wildcardClass61 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0369");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem18.TwoPointer(intArray25, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem17.TwoPointer(intArray25, (int) (byte) 0);
        int[] intArray34 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray34, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem38.TwoPointer(intArray45, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem37.TwoPointer(intArray45, (int) (byte) 0);
        int[] intArray54 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem37.Hashmap(intArray54, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem17.Hashmap(intArray54, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem17.Hashmap(intArray62, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem0.TwoPointer(intArray62, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem70.TwoPointer(intArray77, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem69.TwoPointer(intArray77, (int) (byte) 0);
        int[] intArray86 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem69.Hashmap(intArray86, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem0.BruteForce(intArray86, 0);
        java.lang.Class<?> wildcardClass91 = intArray86.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0370");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem42.TwoPointer(intArray51, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.BruteForce(intArray51, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem59.TwoPointer(intArray66, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem58.TwoPointer(intArray66, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem72.TwoPointer(intArray79, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem71.TwoPointer(intArray79, (int) (byte) 0);
        int[] intArray88 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem71.Hashmap(intArray88, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem58.Hashmap(intArray88, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem0.BruteForce(intArray88, (int) '4');
        java.lang.Class<?> wildcardClass95 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(wildcardClass95);
    }

    @Test
    public void test0371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0371");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem14.TwoPointer(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem13.TwoPointer(intArray21, (int) (byte) 0);
        int[] intArray30 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem13.Hashmap(intArray30, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem34.TwoPointer(intArray41, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem33.TwoPointer(intArray41, (int) (byte) 0);
        int[] intArray50 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem33.Hashmap(intArray50, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem13.Hashmap(intArray50, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem13.Hashmap(intArray58, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem63.Hashmap(intArray67, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem13.Hashmap(intArray67, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem0.Hashmap(intArray67, (-1));
        java.lang.Class<?> wildcardClass76 = intArray67.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0372");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem20.TwoPointer(intArray32, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray32, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem39.Hashmap(intArray43, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem48.Hashmap(intArray52, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem39.BruteForce(intArray52, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem60.TwoPointer(intArray67, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem59.TwoPointer(intArray67, (int) (byte) 0);
        int[] intArray76 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem59.Hashmap(intArray76, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem39.BruteForce(intArray76, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem81 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem81.BruteForce(intArray84, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem39.Hashmap(intArray84, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem89 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray92 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem89.BruteForce(intArray92, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem39.TwoPointer(intArray92, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.TwoPointer(intArray92, (int) (byte) 10);
        java.lang.Class<?> wildcardClass99 = intListList98.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0373");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray37, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem42.Hashmap(intArray46, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem51.Hashmap(intArray55, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem42.BruteForce(intArray55, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem0.TwoPointer(intArray55, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray73 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem64.BruteForce(intArray73, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem76.BruteForce(intArray79, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem64.Hashmap(intArray79, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.Hashmap(intArray79, (int) (byte) 100);
        java.lang.Class<?> wildcardClass86 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0374");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray19 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem10.BruteForce(intArray19, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem22.BruteForce(intArray25, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.Hashmap(intArray25, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem40.TwoPointer(intArray47, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem39.TwoPointer(intArray47, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem30.BruteForce(intArray47, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem10.TwoPointer(intArray47, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.TwoPointer(intArray47, (int) (byte) 10);
        java.lang.Class<?> wildcardClass58 = intArray47.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0375");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem42.Hashmap(intArray46, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem51.Hashmap(intArray55, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem42.BruteForce(intArray55, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem0.Hashmap(intArray55, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem64.Hashmap(intArray68, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem74.TwoPointer(intArray81, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem73.TwoPointer(intArray81, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem64.BruteForce(intArray81, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem0.Hashmap(intArray81, (int) (byte) 1);
        java.lang.Class<?> wildcardClass90 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0376");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray26 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem17.BruteForce(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray46 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem37.BruteForce(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem17.BruteForce(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.Hashmap(intArray46, (int) ' ');
        int[] intArray56 = new int[] { (byte) 0, (byte) 10, 10 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem0.BruteForce(intArray56, (int) (short) 100);
        java.lang.Class<?> wildcardClass59 = intListList58.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 10, 10]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0377");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.TwoPointer(intArray24, (int) (byte) -1);
        java.lang.Class<?> wildcardClass31 = intArray24.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0378");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem30.TwoPointer(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem29.TwoPointer(intArray37, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem20.BruteForce(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem0.TwoPointer(intArray37, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray50 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem47.BruteForce(intArray50, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem46.Hashmap(intArray50, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem55.Hashmap(intArray59, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem46.BruteForce(intArray59, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem67.TwoPointer(intArray74, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem66.TwoPointer(intArray74, (int) (byte) 0);
        int[] intArray83 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem66.Hashmap(intArray83, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem46.BruteForce(intArray83, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem0.TwoPointer(intArray83, (int) (byte) 1);
        java.lang.Class<?> wildcardClass90 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0379");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem18.TwoPointer(intArray25, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem17.TwoPointer(intArray25, (int) (byte) 0);
        int[] intArray34 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray34, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem38.TwoPointer(intArray45, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem37.TwoPointer(intArray45, (int) (byte) 0);
        int[] intArray54 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem37.Hashmap(intArray54, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem17.Hashmap(intArray54, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem17.Hashmap(intArray62, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem0.TwoPointer(intArray62, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem70.BruteForce(intArray73, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem69.Hashmap(intArray73, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem78.BruteForce(intArray81, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem69.TwoPointer(intArray81, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem86 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem87 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray90 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem87.BruteForce(intArray90, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem86.BruteForce(intArray90, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem69.TwoPointer(intArray90, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.BruteForce(intArray90, (int) 'a');
        java.lang.Class<?> wildcardClass99 = intArray90.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0380");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, (int) (byte) 0);
        int[] intArray27 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.Hashmap(intArray27, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem31.TwoPointer(intArray38, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem30.TwoPointer(intArray38, (int) (byte) 0);
        int[] intArray47 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem30.Hashmap(intArray47, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem10.Hashmap(intArray47, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem58.BruteForce(intArray61, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem52.TwoPointer(intArray61, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem10.BruteForce(intArray61, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem0.TwoPointer(intArray61, (int) (byte) 1);
        java.lang.Class<?> wildcardClass70 = intArray61.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0381");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem2.TwoPointer(intArray9, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem1.TwoPointer(intArray9, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem14.Hashmap(intArray18, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem24.TwoPointer(intArray31, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem23.TwoPointer(intArray31, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem14.BruteForce(intArray31, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem1.BruteForce(intArray31, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray31, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        int[] intArray51 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem42.BruteForce(intArray51, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem42.Hashmap(intArray57, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem62.Hashmap(intArray66, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem72.TwoPointer(intArray79, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem71.TwoPointer(intArray79, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem62.BruteForce(intArray79, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem42.TwoPointer(intArray79, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem0.BruteForce(intArray79, 0);
        java.lang.Class<?> wildcardClass90 = intArray79.getClass();
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test0382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0382");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem13.Hashmap(intArray17, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem22.BruteForce(intArray25, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem13.TwoPointer(intArray25, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem30.TwoPointer(intArray42, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem13.Hashmap(intArray42, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem0.Hashmap(intArray42, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        int[] intArray60 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem51.BruteForce(intArray60, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem0.Hashmap(intArray60, (int) (short) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray72 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem65.TwoPointer(intArray72, (int) (short) 1);
        int[] intArray78 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem65.TwoPointer(intArray78, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem81 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem82 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray89 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem82.TwoPointer(intArray89, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem81.TwoPointer(intArray89, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem65.BruteForce(intArray89, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem0.BruteForce(intArray89, (int) (byte) 1);
        java.lang.Class<?> wildcardClass98 = intArray89.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0383");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem14.Hashmap(intArray18, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem23.BruteForce(intArray26, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem14.TwoPointer(intArray26, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem0.BruteForce(intArray26, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem34.BruteForce(intArray37, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem33.Hashmap(intArray37, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem42.Hashmap(intArray46, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem33.BruteForce(intArray46, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem54.TwoPointer(intArray61, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem53.TwoPointer(intArray61, (int) (byte) 0);
        int[] intArray70 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem53.Hashmap(intArray70, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem33.BruteForce(intArray70, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem75.BruteForce(intArray78, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem33.Hashmap(intArray78, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.TwoPointer(intArray78, (-1));
        java.lang.Class<?> wildcardClass85 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0384");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem0.Hashmap(intArray45, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem50.Hashmap(intArray54, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem0.Hashmap(intArray54, (int) (byte) 0);
        java.lang.Class<?> wildcardClass61 = intArray54.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0385");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem29.Hashmap(intArray33, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.BruteForce(intArray33, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem41.TwoPointer(intArray48, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem40.TwoPointer(intArray48, (int) (byte) 0);
        int[] intArray57 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem40.Hashmap(intArray57, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem20.BruteForce(intArray57, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem0.Hashmap(intArray57, (int) (short) 1);
        java.lang.Class<?> wildcardClass64 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0386");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem17.Hashmap(intArray46, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem0.BruteForce(intArray46, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem55.Hashmap(intArray59, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem55.TwoPointer(intArray67, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.Hashmap(intArray67, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem75.BruteForce(intArray78, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem74.Hashmap(intArray78, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem83 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem84 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem84.BruteForce(intArray87, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem83.Hashmap(intArray87, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem74.BruteForce(intArray87, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.TwoPointer(intArray87, (int) (short) -1);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.BruteForce(intArray96, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
    }

    @Test
    public void test0387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0387");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem20.TwoPointer(intArray32, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem37.TwoPointer(intArray49, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem20.Hashmap(intArray49, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray65 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem56.BruteForce(intArray65, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem56.Hashmap(intArray71, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem76.BruteForce(intArray79, (int) '#');
        int[] intArray85 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem76.BruteForce(intArray85, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem56.TwoPointer(intArray85, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem20.Hashmap(intArray85, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem0.Hashmap(intArray85, (int) (short) 100);
        java.lang.Class<?> wildcardClass94 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0388");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        int[] intArray9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.Hashmap(intArray9, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
    }

    @Test
    public void test0389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0389");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem18.TwoPointer(intArray25, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem17.TwoPointer(intArray25, (int) (byte) 0);
        int[] intArray34 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray34, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray34, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem40.TwoPointer(intArray47, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem39.TwoPointer(intArray47, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem0.BruteForce(intArray47, 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem54.BruteForce(intArray58, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem0.Hashmap(intArray58, 10);
        java.lang.Class<?> wildcardClass65 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0390");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem6.TwoPointer(intArray13, (int) (short) 1);
        int[] intArray19 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem6.TwoPointer(intArray19, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem23.TwoPointer(intArray30, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem22.TwoPointer(intArray30, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem6.BruteForce(intArray30, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray48 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem39.BruteForce(intArray48, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem39.Hashmap(intArray54, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem59.Hashmap(intArray63, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem59.TwoPointer(intArray71, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem39.Hashmap(intArray71, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem0.BruteForce(intArray71, (int) (byte) 1);
        java.lang.Class<?> wildcardClass80 = intListList79.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0391");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        java.lang.Class<?> wildcardClass17 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0392");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem13.Hashmap(intArray17, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem22.BruteForce(intArray25, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem13.TwoPointer(intArray25, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem30.TwoPointer(intArray42, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem13.Hashmap(intArray42, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem0.Hashmap(intArray42, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem52.TwoPointer(intArray59, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem51.TwoPointer(intArray59, (int) (byte) 0);
        int[] intArray65 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem51.TwoPointer(intArray65, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem69.TwoPointer(intArray76, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem68.TwoPointer(intArray76, (int) (byte) 0);
        int[] intArray85 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem68.Hashmap(intArray85, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem51.TwoPointer(intArray85, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem0.Hashmap(intArray85, (int) (byte) -1);
        java.lang.Class<?> wildcardClass92 = intArray85.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0393");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem14.Hashmap(intArray18, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem23.Hashmap(intArray27, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem23.TwoPointer(intArray35, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem40.Hashmap(intArray44, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem40.TwoPointer(intArray52, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem23.Hashmap(intArray52, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem14.BruteForce(intArray52, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem0.Hashmap(intArray52, 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem63.TwoPointer(intArray70, (int) (short) 1);
        int[] intArray76 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem63.TwoPointer(intArray76, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem0.BruteForce(intArray76, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem81 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem81.BruteForce(intArray84, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.Hashmap(intArray84, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem89 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem90 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray93 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem90.BruteForce(intArray93, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem89.Hashmap(intArray93, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList99 = threeSumProblem0.Hashmap(intArray93, (int) (byte) 100);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intArray93);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray93), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(intListList99);
    }

    @Test
    public void test0394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0394");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        int[] intArray23 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem14.BruteForce(intArray23, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.BruteForce(intArray23, (int) '4');
        java.lang.Class<?> wildcardClass28 = intArray23.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0395");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        int[] intArray15 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem6.BruteForce(intArray15, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem6.Hashmap(intArray21, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray35 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem26.BruteForce(intArray35, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem6.TwoPointer(intArray35, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.TwoPointer(intArray35, (int) (short) 0);
        int[] intArray42 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem0.BruteForce(intArray42, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
    }

    @Test
    public void test0396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0396");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.TwoPointer(intArray24, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray40 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem31.BruteForce(intArray40, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem31.Hashmap(intArray46, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem51.Hashmap(intArray55, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem51.TwoPointer(intArray63, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem31.Hashmap(intArray63, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem0.Hashmap(intArray63, 100);
        java.lang.Class<?> wildcardClass72 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0397");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem29.Hashmap(intArray33, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.BruteForce(intArray33, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem41.TwoPointer(intArray48, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem40.TwoPointer(intArray48, (int) (byte) 0);
        int[] intArray57 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem40.Hashmap(intArray57, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem20.BruteForce(intArray57, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem0.Hashmap(intArray57, (int) (short) 1);
        int[] intArray64 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem0.BruteForce(intArray64, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
    }

    @Test
    public void test0398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0398");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem17.Hashmap(intArray46, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem0.BruteForce(intArray46, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem56.TwoPointer(intArray63, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem55.TwoPointer(intArray63, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem0.TwoPointer(intArray63, (int) (short) 1);
        java.lang.Class<?> wildcardClass70 = intArray63.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0399");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem14.Hashmap(intArray18, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem23.BruteForce(intArray26, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem14.TwoPointer(intArray26, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem0.BruteForce(intArray26, (int) ' ');
        int[] intArray33 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem0.Hashmap(intArray33, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
    }

    @Test
    public void test0400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0400");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        java.lang.Class<?> wildcardClass17 = intListList16.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0401");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList7 = threeSumProblem2.BruteForce(intArray5, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem1.Hashmap(intArray5, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem1.TwoPointer(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem19 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem19.BruteForce(intArray22, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem18.Hashmap(intArray22, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem18.TwoPointer(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem1.Hashmap(intArray30, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem37.TwoPointer(intArray49, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem54.Hashmap(intArray58, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem54.TwoPointer(intArray66, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem37.Hashmap(intArray66, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem1.Hashmap(intArray66, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem0.TwoPointer(intArray66, (int) '#');
        int[] intArray79 = new int[] { 10, (byte) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem0.BruteForce(intArray79, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem82 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem83 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem83.BruteForce(intArray86, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem82.Hashmap(intArray86, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem0.TwoPointer(intArray86, (int) (short) -1);
        java.lang.Class<?> wildcardClass93 = intArray86.getClass();
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList7);
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[10, 0]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0402");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray26 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem17.BruteForce(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray46 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem37.BruteForce(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem17.BruteForce(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.Hashmap(intArray46, (int) ' ');
        java.lang.Class<?> wildcardClass53 = intArray46.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0403");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem14.Hashmap(intArray18, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem23.BruteForce(intArray26, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem14.TwoPointer(intArray26, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem0.BruteForce(intArray26, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem34.BruteForce(intArray37, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem33.Hashmap(intArray37, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem42.Hashmap(intArray46, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem33.BruteForce(intArray46, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem54.TwoPointer(intArray61, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem53.TwoPointer(intArray61, (int) (byte) 0);
        int[] intArray70 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem53.Hashmap(intArray70, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem33.BruteForce(intArray70, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem75.BruteForce(intArray78, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem33.Hashmap(intArray78, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem83 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray86 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem83.BruteForce(intArray86, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem33.TwoPointer(intArray86, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem0.BruteForce(intArray86, (int) '4');
        java.lang.Class<?> wildcardClass93 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0404");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem0.Hashmap(intArray29, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem36.Hashmap(intArray40, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem36.TwoPointer(intArray48, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem53.Hashmap(intArray57, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem53.TwoPointer(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem36.Hashmap(intArray65, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.Hashmap(intArray65, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        int[] intArray83 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem74.BruteForce(intArray83, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.BruteForce(intArray83, 100);
        int[] intArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem0.Hashmap(intArray88, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
    }

    @Test
    public void test0405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0405");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.TwoPointer(intArray29, (int) ' ');
        int[] intArray34 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem0.Hashmap(intArray34, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
    }

    @Test
    public void test0406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0406");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem42.Hashmap(intArray46, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem42.TwoPointer(intArray54, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray68 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem59.BruteForce(intArray68, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem59.Hashmap(intArray74, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem79 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray88 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem79.BruteForce(intArray88, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem59.BruteForce(intArray88, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem42.Hashmap(intArray88, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.Hashmap(intArray88, (int) '4');
        java.lang.Class<?> wildcardClass97 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0407");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem23.BruteForce(intArray26, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem17.TwoPointer(intArray26, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem31.Hashmap(intArray35, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem31.TwoPointer(intArray43, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem17.BruteForce(intArray43, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem0.Hashmap(intArray43, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem53.TwoPointer(intArray60, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem52.TwoPointer(intArray60, (int) (byte) 0);
        int[] intArray66 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem52.TwoPointer(intArray66, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem70.TwoPointer(intArray77, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem69.TwoPointer(intArray77, (int) (byte) 0);
        int[] intArray86 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem69.Hashmap(intArray86, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem52.TwoPointer(intArray86, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem0.Hashmap(intArray86, (int) (short) 100);
        java.lang.Class<?> wildcardClass93 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0408");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        int[] intArray23 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem14.BruteForce(intArray23, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.BruteForce(intArray23, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem28.BruteForce(intArray31, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem34.BruteForce(intArray37, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem28.TwoPointer(intArray37, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem42.Hashmap(intArray46, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem42.TwoPointer(intArray54, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem28.BruteForce(intArray54, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem61.BruteForce(intArray64, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem67.BruteForce(intArray70, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem61.TwoPointer(intArray70, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem76.BruteForce(intArray79, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem75.Hashmap(intArray79, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem84 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem84.BruteForce(intArray87, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem75.TwoPointer(intArray87, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem61.BruteForce(intArray87, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem28.Hashmap(intArray87, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem0.Hashmap(intArray87, (int) (short) 100);
        java.lang.Class<?> wildcardClass98 = intListList97.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0409");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, (int) (byte) 0);
        int[] intArray27 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.Hashmap(intArray27, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem39.Hashmap(intArray43, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem30.BruteForce(intArray43, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem10.Hashmap(intArray43, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem0.TwoPointer(intArray43, (int) (short) 10);
        java.lang.Class<?> wildcardClass54 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0410");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem16.BruteForce(intArray19, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem10.TwoPointer(intArray19, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem0.BruteForce(intArray19, (int) '4');
        int[] intArray26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem0.TwoPointer(intArray26, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
    }

    @Test
    public void test0411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0411");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, (int) (byte) 0);
        int[] intArray27 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.Hashmap(intArray27, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem31.TwoPointer(intArray38, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem30.TwoPointer(intArray38, (int) (byte) 0);
        int[] intArray47 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem30.Hashmap(intArray47, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem10.Hashmap(intArray47, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem58.BruteForce(intArray61, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem52.TwoPointer(intArray61, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem10.BruteForce(intArray61, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem0.TwoPointer(intArray61, (int) (byte) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem70.Hashmap(intArray74, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem79 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem79.BruteForce(intArray82, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem70.TwoPointer(intArray82, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.BruteForce(intArray82, (int) (byte) 0);
        java.lang.Class<?> wildcardClass89 = intArray82.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0412");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem18.TwoPointer(intArray25, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem17.TwoPointer(intArray25, (int) (byte) 0);
        int[] intArray34 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray34, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray34, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem39.Hashmap(intArray43, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem48.Hashmap(intArray52, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem48.TwoPointer(intArray60, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem39.Hashmap(intArray60, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem67.Hashmap(intArray71, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem77.BruteForce(intArray80, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem76.Hashmap(intArray80, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem85 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray88 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem85.BruteForce(intArray88, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem76.TwoPointer(intArray88, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem67.Hashmap(intArray88, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem39.TwoPointer(intArray88, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.BruteForce(intArray88, (int) (byte) 1);
        java.lang.Class<?> wildcardClass99 = intListList98.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0413");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray26 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem17.BruteForce(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray46 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem37.BruteForce(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem17.BruteForce(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.Hashmap(intArray46, (int) ' ');
        int[] intArray56 = new int[] { (byte) 0, (byte) 10, 10 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem0.BruteForce(intArray56, (int) (short) 100);
        java.lang.Class<?> wildcardClass59 = intArray56.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[0, 10, 10]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test0414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0414");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray25 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem16.BruteForce(intArray25, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem28.BruteForce(intArray31, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem16.Hashmap(intArray31, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray45 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem36.BruteForce(intArray45, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem16.BruteForce(intArray45, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem50.TwoPointer(intArray57, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem16.TwoPointer(intArray57, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem0.BruteForce(intArray57, (int) (short) 1);
        java.lang.Class<?> wildcardClass64 = intListList63.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0415");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.Hashmap(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem28.Hashmap(intArray32, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem37.TwoPointer(intArray49, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem28.Hashmap(intArray49, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.TwoPointer(intArray49, (int) '4');
        java.lang.Class<?> wildcardClass58 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0416");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.BruteForce(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.TwoPointer(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem28.Hashmap(intArray32, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.BruteForce(intArray32, (int) (byte) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        int[] intArray48 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem39.BruteForce(intArray48, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem39.Hashmap(intArray54, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray68 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem59.BruteForce(intArray68, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem39.BruteForce(intArray68, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray80 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem73.TwoPointer(intArray80, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem39.TwoPointer(intArray80, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem0.TwoPointer(intArray80, (int) 'a');
        java.lang.Class<?> wildcardClass87 = intListList86.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0417");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.BruteForce(intArray4, (int) (short) 1);
        java.lang.Class<?> wildcardClass9 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0418");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem17.Hashmap(intArray46, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem0.BruteForce(intArray46, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem55.Hashmap(intArray59, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem55.TwoPointer(intArray67, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.Hashmap(intArray67, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray78 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem75.BruteForce(intArray78, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem74.Hashmap(intArray78, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem83 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem84 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray87 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem84.BruteForce(intArray87, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem83.Hashmap(intArray87, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem74.BruteForce(intArray87, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem0.TwoPointer(intArray87, (int) (short) -1);
        int[] intArray96 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.TwoPointer(intArray96, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray78), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intArray87);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray87), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
    }

    @Test
    public void test0419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0419");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem0.BruteForce(intArray17, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray33 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem24.BruteForce(intArray33, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem24.Hashmap(intArray39, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem44.Hashmap(intArray48, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem54.TwoPointer(intArray61, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem53.TwoPointer(intArray61, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem44.BruteForce(intArray61, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem24.TwoPointer(intArray61, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem70.BruteForce(intArray73, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem76.BruteForce(intArray79, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem70.TwoPointer(intArray79, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem24.Hashmap(intArray79, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.Hashmap(intArray79, (int) '4');
        int[] intArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem0.Hashmap(intArray88, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
    }

    @Test
    public void test0420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0420");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray5 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList7 = threeSumProblem2.BruteForce(intArray5, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem1.Hashmap(intArray5, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray14 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem11.BruteForce(intArray14, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem10.Hashmap(intArray14, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem1.BruteForce(intArray14, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem22.TwoPointer(intArray29, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem21.TwoPointer(intArray29, (int) (byte) 0);
        int[] intArray38 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem21.Hashmap(intArray38, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem1.BruteForce(intArray38, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem1.Hashmap(intArray46, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem1.TwoPointer(intArray54, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem0.TwoPointer(intArray54, 0);
        int[] intArray61 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem0.Hashmap(intArray61, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray5), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList7);
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
    }

    @Test
    public void test0421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0421");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem0.BruteForce(intArray17, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray33 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem24.BruteForce(intArray33, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem24.Hashmap(intArray39, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem44.Hashmap(intArray48, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem54.TwoPointer(intArray61, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem53.TwoPointer(intArray61, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem44.BruteForce(intArray61, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem24.TwoPointer(intArray61, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem70.BruteForce(intArray73, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem76.BruteForce(intArray79, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem70.TwoPointer(intArray79, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem24.Hashmap(intArray79, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.Hashmap(intArray79, (int) '4');
        java.lang.Class<?> wildcardClass88 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0422");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem14.TwoPointer(intArray21, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem13.TwoPointer(intArray21, (int) (byte) 0);
        int[] intArray30 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem13.Hashmap(intArray30, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem0.Hashmap(intArray30, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem36.TwoPointer(intArray43, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem35.TwoPointer(intArray43, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem49.TwoPointer(intArray56, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem48.TwoPointer(intArray56, (int) (byte) 0);
        int[] intArray65 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem48.Hashmap(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem35.Hashmap(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem0.TwoPointer(intArray65, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray80 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem73.TwoPointer(intArray80, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem72.TwoPointer(intArray80, (int) (byte) 0);
        int[] intArray86 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem72.TwoPointer(intArray86, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem0.BruteForce(intArray86, (int) (short) 100);
        java.lang.Class<?> wildcardClass91 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[0]");
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0423");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem13.TwoPointer(intArray20, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem12.TwoPointer(intArray20, (int) (byte) 0);
        int[] intArray29 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem12.Hashmap(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem33.TwoPointer(intArray40, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem32.TwoPointer(intArray40, (int) (byte) 0);
        int[] intArray49 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem32.Hashmap(intArray49, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem12.Hashmap(intArray49, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem12.Hashmap(intArray57, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        int[] intArray71 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem62.BruteForce(intArray71, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem62.Hashmap(intArray77, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem82 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem82.BruteForce(intArray85, (int) '#');
        int[] intArray91 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem82.BruteForce(intArray91, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem62.TwoPointer(intArray91, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem12.Hashmap(intArray91, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList99 = threeSumProblem0.BruteForce(intArray91, (int) (byte) -1);
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intArray91);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray91), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(intListList99);
    }

    @Test
    public void test0424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0424");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.BruteForce(intArray29, 0);
        java.lang.Class<?> wildcardClass34 = intArray29.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0425");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem42.Hashmap(intArray46, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem42.TwoPointer(intArray54, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        int[] intArray68 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem59.BruteForce(intArray68, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem59.Hashmap(intArray74, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem79 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem79.BruteForce(intArray82, (int) '#');
        int[] intArray88 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem79.BruteForce(intArray88, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem59.BruteForce(intArray88, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem42.Hashmap(intArray88, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.Hashmap(intArray88, (int) '4');
        java.lang.Class<?> wildcardClass97 = intArray88.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intArray88);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray88), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0426");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem27.BruteForce(intArray30, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem26.Hashmap(intArray30, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem26.TwoPointer(intArray38, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem9.Hashmap(intArray38, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem0.BruteForce(intArray38, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem47.Hashmap(intArray51, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem47.TwoPointer(intArray59, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem64.Hashmap(intArray68, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem64.TwoPointer(intArray76, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem47.Hashmap(intArray76, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem0.BruteForce(intArray76, 10);
        java.lang.Class<?> wildcardClass85 = intArray76.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test0427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0427");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem17.Hashmap(intArray46, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray62 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem53.BruteForce(intArray62, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem53.Hashmap(intArray68, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray82 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem73.BruteForce(intArray82, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem53.TwoPointer(intArray82, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem17.Hashmap(intArray82, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem0.BruteForce(intArray82, 1);
        java.lang.Class<?> wildcardClass91 = intArray82.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0428");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem17.Hashmap(intArray46, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem0.BruteForce(intArray46, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem61.BruteForce(intArray64, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem55.TwoPointer(intArray64, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem0.Hashmap(intArray64, (int) (short) 10);
        java.lang.Class<?> wildcardClass71 = intListList70.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test0429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0429");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem9.TwoPointer(intArray17, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem0.BruteForce(intArray17, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        int[] intArray33 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem24.BruteForce(intArray33, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem24.Hashmap(intArray39, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem44.Hashmap(intArray48, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem54.TwoPointer(intArray61, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem53.TwoPointer(intArray61, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem44.BruteForce(intArray61, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem24.TwoPointer(intArray61, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem70.BruteForce(intArray73, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem76.BruteForce(intArray79, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem70.TwoPointer(intArray79, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem24.Hashmap(intArray79, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.Hashmap(intArray79, (int) '4');
        java.lang.Class<?> wildcardClass88 = intListList87.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0430");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, (int) (byte) 0);
        int[] intArray27 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.Hashmap(intArray27, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem31.TwoPointer(intArray38, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem30.TwoPointer(intArray38, (int) (byte) 0);
        int[] intArray47 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem30.Hashmap(intArray47, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem10.Hashmap(intArray47, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem10.Hashmap(intArray55, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem61.BruteForce(intArray64, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem60.Hashmap(intArray64, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem10.Hashmap(intArray64, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem0.BruteForce(intArray64, 0);
        int[] intArray77 = new int[] { (byte) 1, 100, '#', '4' };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem0.Hashmap(intArray77, (int) (short) 10);
        java.lang.Class<?> wildcardClass80 = intListList79.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[1, 35, 52, 100]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test0431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0431");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem13.Hashmap(intArray17, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray30 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem23.TwoPointer(intArray30, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem22.TwoPointer(intArray30, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem13.BruteForce(intArray30, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.BruteForce(intArray30, (int) (byte) -1);
        java.lang.Class<?> wildcardClass39 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray30), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test0432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0432");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        java.lang.Class<?> wildcardClass17 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0433");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem42.TwoPointer(intArray51, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.BruteForce(intArray51, (int) (byte) 100);
        int[] intArray63 = new int[] { '#', 10, (byte) 0, 10, ' ' };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem0.Hashmap(intArray63, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem67.BruteForce(intArray70, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem66.BruteForce(intArray70, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem0.TwoPointer(intArray70, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem78.BruteForce(intArray81, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem77.Hashmap(intArray81, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.TwoPointer(intArray81, 0);
        int[] intArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem0.Hashmap(intArray88, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 10, 10, 32, 35]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
    }

    @Test
    public void test0434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0434");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.Hashmap(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem28.Hashmap(intArray32, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem28.BruteForce(intArray41, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem49.TwoPointer(intArray56, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem48.TwoPointer(intArray56, (int) (byte) 0);
        int[] intArray65 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem48.Hashmap(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem28.BruteForce(intArray65, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem70.BruteForce(intArray73, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem28.Hashmap(intArray73, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem78.BruteForce(intArray81, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem28.TwoPointer(intArray81, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.TwoPointer(intArray81, (int) (short) 0);
        java.lang.Class<?> wildcardClass88 = intListList87.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0435");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem42.TwoPointer(intArray51, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.BruteForce(intArray51, (int) (byte) 100);
        int[] intArray63 = new int[] { '#', 10, (byte) 0, 10, ' ' };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem0.Hashmap(intArray63, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem67.BruteForce(intArray70, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem66.BruteForce(intArray70, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem0.TwoPointer(intArray70, 10);
        int[] intArray77 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem0.BruteForce(intArray77, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 10, 10, 32, 35]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
    }

    @Test
    public void test0436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0436");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem14.Hashmap(intArray18, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem23.Hashmap(intArray27, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem23.TwoPointer(intArray35, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem40.Hashmap(intArray44, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem40.TwoPointer(intArray52, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem23.Hashmap(intArray52, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem14.BruteForce(intArray52, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem0.Hashmap(intArray52, 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem63.TwoPointer(intArray70, (int) (short) 1);
        int[] intArray76 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem63.TwoPointer(intArray76, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem0.BruteForce(intArray76, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem81 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem81.BruteForce(intArray84, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.Hashmap(intArray84, 10);
        java.lang.Class<?> wildcardClass89 = intArray84.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0437");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.TwoPointer(intArray29, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem35.TwoPointer(intArray42, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem34.TwoPointer(intArray42, (int) (byte) 0);
        int[] intArray51 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem34.Hashmap(intArray51, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem55.TwoPointer(intArray62, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem54.TwoPointer(intArray62, (int) (byte) 0);
        int[] intArray71 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem54.Hashmap(intArray71, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem34.Hashmap(intArray71, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem76.BruteForce(intArray79, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem82 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray85 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem82.BruteForce(intArray85, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem76.TwoPointer(intArray85, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem34.BruteForce(intArray85, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem0.Hashmap(intArray85, (-1));
        java.lang.Class<?> wildcardClass94 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray85), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0438");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, (int) (byte) 0);
        int[] intArray27 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.Hashmap(intArray27, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem39.Hashmap(intArray43, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem30.BruteForce(intArray43, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem10.Hashmap(intArray43, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem0.TwoPointer(intArray43, (int) (short) 10);
        java.lang.Class<?> wildcardClass54 = intArray43.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test0439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0439");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray33 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem30.BruteForce(intArray33, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem29.Hashmap(intArray33, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.BruteForce(intArray33, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem41.TwoPointer(intArray48, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem40.TwoPointer(intArray48, (int) (byte) 0);
        int[] intArray57 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem40.Hashmap(intArray57, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem20.BruteForce(intArray57, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem0.Hashmap(intArray57, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        int[] intArray73 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem64.BruteForce(intArray73, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray79 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem76.BruteForce(intArray79, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem64.Hashmap(intArray79, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.BruteForce(intArray79, (-1));
        java.lang.Class<?> wildcardClass86 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray33), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0440");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        int[] intArray15 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem6.BruteForce(intArray15, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem6.Hashmap(intArray21, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray35 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem26.BruteForce(intArray35, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem6.TwoPointer(intArray35, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.TwoPointer(intArray35, (int) (short) 0);
        java.lang.Class<?> wildcardClass42 = intArray35.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0441");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem17.Hashmap(intArray46, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem0.BruteForce(intArray46, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem55.Hashmap(intArray59, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem55.TwoPointer(intArray67, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.Hashmap(intArray67, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem75 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray82 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem75.TwoPointer(intArray82, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem74.TwoPointer(intArray82, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.Hashmap(intArray82, (int) 'a');
        int[] intArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem0.TwoPointer(intArray89, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
    }

    @Test
    public void test0442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0442");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem51.Hashmap(intArray55, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem51.TwoPointer(intArray63, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem34.Hashmap(intArray63, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem17.BruteForce(intArray63, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem72.Hashmap(intArray76, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem81 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem81.BruteForce(intArray84, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem72.TwoPointer(intArray84, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem17.Hashmap(intArray84, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem0.Hashmap(intArray84, (int) (byte) 100);
        java.lang.Class<?> wildcardClass93 = intArray84.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test0443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0443");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem14.Hashmap(intArray18, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem24.TwoPointer(intArray31, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem23.TwoPointer(intArray31, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem14.BruteForce(intArray31, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem0.TwoPointer(intArray31, (int) (short) 1);
        java.lang.Class<?> wildcardClass40 = intListList39.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test0444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0444");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem0.Hashmap(intArray29, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem36.TwoPointer(intArray43, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem47.TwoPointer(intArray54, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem46.TwoPointer(intArray54, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem36.Hashmap(intArray54, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem0.Hashmap(intArray54, (int) (byte) 10);
        java.lang.Class<?> wildcardClass63 = intArray54.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0445");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray35, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        int[] intArray49 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem40.BruteForce(intArray49, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem20.BruteForce(intArray49, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray61 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem54.TwoPointer(intArray61, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem20.TwoPointer(intArray61, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem66.TwoPointer(intArray73, (int) (short) 1);
        int[] intArray79 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem66.TwoPointer(intArray79, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem20.Hashmap(intArray79, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.Hashmap(intArray79, (int) '4');
        java.lang.Class<?> wildcardClass86 = intArray79.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray61), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray79), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0446");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        int[] intArray10 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem1.BruteForce(intArray10, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray16 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList18 = threeSumProblem13.BruteForce(intArray16, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem1.Hashmap(intArray16, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem22.BruteForce(intArray25, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem21.Hashmap(intArray25, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem21.BruteForce(intArray34, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem42.TwoPointer(intArray49, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem41.TwoPointer(intArray49, (int) (byte) 0);
        int[] intArray58 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem41.Hashmap(intArray58, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem21.BruteForce(intArray58, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem63.Hashmap(intArray67, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem72 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem72.Hashmap(intArray76, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem63.BruteForce(intArray76, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem21.TwoPointer(intArray76, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem1.TwoPointer(intArray76, (int) (short) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.BruteForce(intArray76, (int) 'a');
        java.lang.Class<?> wildcardClass89 = intArray76.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray10), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray16), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList18);
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0447");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.Hashmap(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem28.Hashmap(intArray32, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem37.TwoPointer(intArray49, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem28.Hashmap(intArray49, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.TwoPointer(intArray49, (int) '4');
        java.lang.Class<?> wildcardClass58 = intArray49.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0448");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.Hashmap(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem42.TwoPointer(intArray51, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.BruteForce(intArray51, (int) (byte) 100);
        int[] intArray63 = new int[] { '#', 10, (byte) 0, 10, ' ' };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem0.Hashmap(intArray63, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem67.BruteForce(intArray70, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem66.BruteForce(intArray70, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem0.TwoPointer(intArray70, 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem78.BruteForce(intArray81, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem77.Hashmap(intArray81, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem0.TwoPointer(intArray81, 0);
        java.lang.Class<?> wildcardClass88 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[0, 10, 10, 32, 35]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test0449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0449");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        int[] intArray23 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem14.BruteForce(intArray23, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.BruteForce(intArray23, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem28.BruteForce(intArray31, (int) '#');
        int[] intArray37 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem28.BruteForce(intArray37, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem46.TwoPointer(intArray53, (int) (short) 1);
        int[] intArray59 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem46.TwoPointer(intArray59, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem63.TwoPointer(intArray70, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem62.TwoPointer(intArray70, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem46.BruteForce(intArray70, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem40.Hashmap(intArray70, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem28.BruteForce(intArray70, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem0.TwoPointer(intArray70, 100);
        int[] intArray83 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.TwoPointer(intArray83, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
    }

    @Test
    public void test0450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0450");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem14.Hashmap(intArray18, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem23.Hashmap(intArray27, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem23.TwoPointer(intArray35, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem40.Hashmap(intArray44, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem40.TwoPointer(intArray52, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem23.Hashmap(intArray52, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem14.BruteForce(intArray52, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem0.Hashmap(intArray52, 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem63.TwoPointer(intArray70, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem74.TwoPointer(intArray81, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem73.TwoPointer(intArray81, (int) (byte) 0);
        int[] intArray90 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem73.Hashmap(intArray90, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem63.BruteForce(intArray90, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.BruteForce(intArray90, (int) (short) 1);
        java.lang.Class<?> wildcardClass97 = intListList96.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intArray90);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray90), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0451");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.Hashmap(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem28.Hashmap(intArray32, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem37.TwoPointer(intArray49, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem28.Hashmap(intArray49, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem28.TwoPointer(intArray59, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem0.BruteForce(intArray59, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem66 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem67.TwoPointer(intArray74, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem66.TwoPointer(intArray74, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem0.Hashmap(intArray74, 100);
        int[] intArray81 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem0.BruteForce(intArray81, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
    }

    @Test
    public void test0452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0452");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        java.lang.Class<?> wildcardClass6 = intListList5.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test0453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0453");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem13.Hashmap(intArray17, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem22.BruteForce(intArray25, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem13.TwoPointer(intArray25, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem30.TwoPointer(intArray42, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem13.Hashmap(intArray42, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem0.Hashmap(intArray42, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem51.TwoPointer(intArray58, (int) (short) 1);
        int[] intArray64 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem51.TwoPointer(intArray64, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray75 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem68.TwoPointer(intArray75, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem67.TwoPointer(intArray75, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem51.BruteForce(intArray75, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem0.TwoPointer(intArray75, (int) (short) 1);
        java.lang.Class<?> wildcardClass84 = intListList83.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray75), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test0454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0454");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.TwoPointer(intArray29, (int) ' ');
        int[] intArray34 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem0.Hashmap(intArray34, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
    }

    @Test
    public void test0455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0455");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.Hashmap(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem28.Hashmap(intArray32, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem28.TwoPointer(intArray40, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem0.TwoPointer(intArray40, (int) (byte) -1);
        java.lang.Class<?> wildcardClass47 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0456");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem14.Hashmap(intArray18, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem24.TwoPointer(intArray31, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem23.TwoPointer(intArray31, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem14.BruteForce(intArray31, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem0.TwoPointer(intArray31, (int) (short) 1);
        int[] intArray40 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem0.TwoPointer(intArray40, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
    }

    @Test
    public void test0457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0457");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem16.BruteForce(intArray19, (int) '#');
        int[] intArray25 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem16.BruteForce(intArray25, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem28.BruteForce(intArray31, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem16.Hashmap(intArray31, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray45 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem36.BruteForce(intArray45, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem16.BruteForce(intArray45, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem50.TwoPointer(intArray57, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem16.TwoPointer(intArray57, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem0.BruteForce(intArray57, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem64.Hashmap(intArray68, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem73.Hashmap(intArray77, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem64.BruteForce(intArray77, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.TwoPointer(intArray77, (int) (byte) 10);
        java.lang.Class<?> wildcardClass86 = intListList85.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0458");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray19 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem10.BruteForce(intArray19, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem22.BruteForce(intArray25, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.Hashmap(intArray25, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem40.TwoPointer(intArray47, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem39.TwoPointer(intArray47, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem30.BruteForce(intArray47, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem10.TwoPointer(intArray47, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.TwoPointer(intArray47, (int) (byte) 10);
        java.lang.Class<?> wildcardClass58 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0459");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem18.TwoPointer(intArray25, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem17.TwoPointer(intArray25, (int) (byte) 0);
        int[] intArray34 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray34, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray34, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem39.Hashmap(intArray43, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem48.Hashmap(intArray52, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem39.BruteForce(intArray52, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem60.TwoPointer(intArray67, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem59.TwoPointer(intArray67, (int) (byte) 0);
        int[] intArray76 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem59.Hashmap(intArray76, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem39.BruteForce(intArray76, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem81 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem81.BruteForce(intArray84, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem39.Hashmap(intArray84, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem89 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray92 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem89.BruteForce(intArray92, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem39.TwoPointer(intArray92, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.TwoPointer(intArray92, (int) (byte) 100);
        java.lang.Class<?> wildcardClass99 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0460");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem17.TwoPointer(intArray24, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem16.TwoPointer(intArray24, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.BruteForce(intArray24, (int) (short) 100);
        java.lang.Class<?> wildcardClass31 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0461");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem17.Hashmap(intArray46, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem0.BruteForce(intArray46, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem61.BruteForce(intArray64, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem55.TwoPointer(intArray64, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem0.Hashmap(intArray64, (int) (short) 10);
        java.lang.Class<?> wildcardClass71 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test0462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0462");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray17 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray17, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem21.BruteForce(intArray24, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem20.Hashmap(intArray24, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.TwoPointer(intArray24, (int) (byte) -1);
        java.lang.Class<?> wildcardClass31 = intListList30.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test0463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0463");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem0.Hashmap(intArray29, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        int[] intArray45 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem36.BruteForce(intArray45, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem36.Hashmap(intArray51, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        int[] intArray65 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem56.BruteForce(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem36.TwoPointer(intArray65, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem0.Hashmap(intArray65, (int) (byte) -1);
        java.lang.Class<?> wildcardClass72 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0464");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.Hashmap(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem28.BruteForce(intArray31, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem0.TwoPointer(intArray31, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem36.TwoPointer(intArray45, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem50.Hashmap(intArray54, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem50.TwoPointer(intArray62, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem36.BruteForce(intArray62, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem0.Hashmap(intArray62, (int) (short) 0);
        int[] intArray71 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.Hashmap(intArray71, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
    }

    @Test
    public void test0465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0465");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, 10);
        java.lang.Class<?> wildcardClass13 = intListList12.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0466");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem14.Hashmap(intArray18, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem23.Hashmap(intArray27, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem23.TwoPointer(intArray35, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem40.Hashmap(intArray44, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem40.TwoPointer(intArray52, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem23.Hashmap(intArray52, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem14.BruteForce(intArray52, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem0.Hashmap(intArray52, 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem63.TwoPointer(intArray70, (int) (short) 1);
        int[] intArray76 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem63.TwoPointer(intArray76, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem0.BruteForce(intArray76, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem81 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray84 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem81.BruteForce(intArray84, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.Hashmap(intArray84, 10);
        int[] intArray89 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem0.TwoPointer(intArray89, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
    }

    @Test
    public void test0467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0467");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem18.TwoPointer(intArray25, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem17.TwoPointer(intArray25, (int) (byte) 0);
        int[] intArray34 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray34, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem38.TwoPointer(intArray45, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem37.TwoPointer(intArray45, (int) (byte) 0);
        int[] intArray54 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem37.Hashmap(intArray54, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem17.Hashmap(intArray54, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem17.Hashmap(intArray62, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem0.TwoPointer(intArray62, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem70.TwoPointer(intArray77, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem69.TwoPointer(intArray77, (int) (byte) 0);
        int[] intArray86 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem69.Hashmap(intArray86, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem0.BruteForce(intArray86, 0);
        java.lang.Class<?> wildcardClass91 = intListList90.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0468");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem17.TwoPointer(intArray24, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem16.TwoPointer(intArray24, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.BruteForce(intArray24, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem31.Hashmap(intArray35, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem31.TwoPointer(intArray43, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem48.BruteForce(intArray52, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem31.TwoPointer(intArray52, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem0.Hashmap(intArray52, (int) ' ');
        java.lang.Class<?> wildcardClass61 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test0469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0469");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray19 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem16.BruteForce(intArray19, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem10.TwoPointer(intArray19, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem0.BruteForce(intArray19, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem27.TwoPointer(intArray34, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem26.TwoPointer(intArray34, (int) (byte) 0);
        int[] intArray40 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem26.TwoPointer(intArray40, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        int[] intArray52 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem43.BruteForce(intArray52, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem43.Hashmap(intArray58, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray72 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem63.BruteForce(intArray72, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem43.TwoPointer(intArray72, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem78 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray81 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem78.BruteForce(intArray81, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem77.Hashmap(intArray81, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem86 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray89 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem86.BruteForce(intArray89, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList93 = threeSumProblem77.TwoPointer(intArray89, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList95 = threeSumProblem43.TwoPointer(intArray89, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList97 = threeSumProblem26.Hashmap(intArray89, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList99 = threeSumProblem0.Hashmap(intArray89, 0);
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray81), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intArray89);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray89), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(intListList93);
        org.junit.Assert.assertNotNull(intListList95);
        org.junit.Assert.assertNotNull(intListList97);
        org.junit.Assert.assertNotNull(intListList99);
    }

    @Test
    public void test0470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0470");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.Hashmap(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem28.BruteForce(intArray31, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem0.TwoPointer(intArray31, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem36.TwoPointer(intArray45, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem50.Hashmap(intArray54, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem50.TwoPointer(intArray62, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem36.BruteForce(intArray62, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem0.Hashmap(intArray62, (int) (short) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem77.BruteForce(intArray80, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem71.TwoPointer(intArray80, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem0.BruteForce(intArray80, (int) (short) 1);
        java.lang.Class<?> wildcardClass87 = intArray80.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0471");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        int[] intArray17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray17, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
    }

    @Test
    public void test0472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0472");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem2 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem3 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray6 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem3.BruteForce(intArray6, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem2.Hashmap(intArray6, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem11.Hashmap(intArray15, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem11.TwoPointer(intArray23, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem28.Hashmap(intArray32, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem28.TwoPointer(intArray40, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem11.Hashmap(intArray40, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem47 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray51 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem48.BruteForce(intArray51, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem47.Hashmap(intArray51, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem47.TwoPointer(intArray59, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem64.Hashmap(intArray68, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem64.TwoPointer(intArray76, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem47.Hashmap(intArray76, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem11.Hashmap(intArray76, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem2.TwoPointer(intArray76, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem1.TwoPointer(intArray76, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem89 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray92 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem89.BruteForce(intArray92, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem1.BruteForce(intArray92, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.TwoPointer(intArray92, (int) (byte) 1);
        java.lang.Class<?> wildcardClass99 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray6), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray51), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0473");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray37, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem42.TwoPointer(intArray49, (int) (short) 1);
        int[] intArray55 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem42.TwoPointer(intArray55, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem0.Hashmap(intArray55, 0);
        int[] intArray60 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem0.TwoPointer(intArray60, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
    }

    @Test
    public void test0474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0474");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem11 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem11.TwoPointer(intArray18, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem10.TwoPointer(intArray18, (int) (byte) 0);
        int[] intArray27 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.Hashmap(intArray27, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem31.TwoPointer(intArray38, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem30.TwoPointer(intArray38, (int) (byte) 0);
        int[] intArray47 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem30.Hashmap(intArray47, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem10.Hashmap(intArray47, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem10.Hashmap(intArray55, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem61.BruteForce(intArray64, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem60.Hashmap(intArray64, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem10.Hashmap(intArray64, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem0.BruteForce(intArray64, 0);
        java.lang.Class<?> wildcardClass73 = intArray64.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0475");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        int[] intArray14 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray14, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem23.BruteForce(intArray26, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem17.TwoPointer(intArray26, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem31.Hashmap(intArray35, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem31.TwoPointer(intArray43, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem17.BruteForce(intArray43, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem0.Hashmap(intArray43, 10);
        java.lang.Class<?> wildcardClass52 = intArray43.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray14), "[0]");
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0476");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem0.Hashmap(intArray29, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem36.Hashmap(intArray40, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem36.TwoPointer(intArray48, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem53.Hashmap(intArray57, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem53.TwoPointer(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem36.Hashmap(intArray65, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.Hashmap(intArray65, 0);
        java.lang.Class<?> wildcardClass74 = intArray65.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0477");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray34 = new int[] { 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem20.TwoPointer(intArray34, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem38.TwoPointer(intArray45, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem37.TwoPointer(intArray45, (int) (byte) 0);
        int[] intArray54 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem37.Hashmap(intArray54, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem20.TwoPointer(intArray54, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem0.Hashmap(intArray54, (int) (byte) 10);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem61.TwoPointer(intArray68, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem0.Hashmap(intArray68, (int) 'a');
        java.lang.Class<?> wildcardClass73 = intArray68.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0478");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray37, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem42.TwoPointer(intArray49, (int) (short) 1);
        int[] intArray55 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem42.TwoPointer(intArray55, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem0.TwoPointer(intArray55, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem61 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray64 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem61.BruteForce(intArray64, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem60.Hashmap(intArray64, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem70 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray73 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem70.BruteForce(intArray73, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList77 = threeSumProblem69.Hashmap(intArray73, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem60.BruteForce(intArray73, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem0.TwoPointer(intArray73, (int) 'a');
        java.lang.Class<?> wildcardClass82 = intArray73.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray64), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray73), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intListList77);
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test0479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0479");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.Hashmap(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem28.Hashmap(intArray32, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem38 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem38.BruteForce(intArray41, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem37.Hashmap(intArray41, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem46.BruteForce(intArray49, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem37.TwoPointer(intArray49, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem28.Hashmap(intArray49, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.TwoPointer(intArray49, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem58 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem58.TwoPointer(intArray65, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem74 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray77 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList79 = threeSumProblem74.BruteForce(intArray77, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList81 = threeSumProblem68.TwoPointer(intArray77, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList83 = threeSumProblem58.BruteForce(intArray77, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem0.TwoPointer(intArray77, (int) '#');
        java.lang.Class<?> wildcardClass86 = intListList85.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray77), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList79);
        org.junit.Assert.assertNotNull(intListList81);
        org.junit.Assert.assertNotNull(intListList83);
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0480");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray37, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem0.Hashmap(intArray45, (int) '4');
        java.lang.Class<?> wildcardClass50 = intArray45.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test0481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0481");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem18.TwoPointer(intArray25, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem17.TwoPointer(intArray25, (int) (byte) 0);
        int[] intArray34 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray34, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem0.Hashmap(intArray34, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem40.TwoPointer(intArray47, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem39.TwoPointer(intArray47, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem0.BruteForce(intArray47, 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem54.Hashmap(intArray58, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray67 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem64.BruteForce(intArray67, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem63.Hashmap(intArray67, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem54.BruteForce(intArray67, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem0.BruteForce(intArray67, (int) (byte) -1);
        java.lang.Class<?> wildcardClass76 = intListList75.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray67), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test0482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0482");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray19 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem10.BruteForce(intArray19, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem22.BruteForce(intArray25, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.Hashmap(intArray25, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem40.TwoPointer(intArray47, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem39.TwoPointer(intArray47, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem30.BruteForce(intArray47, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem10.TwoPointer(intArray47, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.TwoPointer(intArray47, (int) (byte) 10);
        int[] intArray58 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem0.BruteForce(intArray58, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
    }

    @Test
    public void test0483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0483");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem34.TwoPointer(intArray41, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem33.TwoPointer(intArray41, (int) (byte) 0);
        int[] intArray50 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem33.Hashmap(intArray50, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem20.Hashmap(intArray50, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem56 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray59 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem56.BruteForce(intArray59, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem55.Hashmap(intArray59, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem64 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem64.Hashmap(intArray68, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem64.TwoPointer(intArray76, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem55.Hashmap(intArray76, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem20.BruteForce(intArray76, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem0.TwoPointer(intArray76, (int) (byte) 100);
        java.lang.Class<?> wildcardClass87 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray50), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0484");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        int[] intArray13 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem0.TwoPointer(intArray13, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem16 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray24 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem17.TwoPointer(intArray24, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem16.TwoPointer(intArray24, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem0.BruteForce(intArray24, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        int[] intArray40 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem31.BruteForce(intArray40, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem31.Hashmap(intArray46, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem51.Hashmap(intArray55, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem51.TwoPointer(intArray63, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem31.Hashmap(intArray63, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem0.TwoPointer(intArray63, (-1));
        java.lang.Class<?> wildcardClass72 = intArray63.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray24), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test0485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0485");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem14.Hashmap(intArray18, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem24 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray27 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem24.BruteForce(intArray27, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem23.Hashmap(intArray27, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem23.TwoPointer(intArray35, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem40.Hashmap(intArray44, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem40.TwoPointer(intArray52, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem23.Hashmap(intArray52, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem14.BruteForce(intArray52, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem0.Hashmap(intArray52, 100);
        java.lang.Class<?> wildcardClass63 = intArray52.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray27), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test0486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0486");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.BruteForce(intArray13, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem21 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray28 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem21.TwoPointer(intArray28, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem20.TwoPointer(intArray28, (int) (byte) 0);
        int[] intArray37 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray37, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.BruteForce(intArray37, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray49 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem42.TwoPointer(intArray49, (int) (short) 1);
        int[] intArray55 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem42.TwoPointer(intArray55, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem0.Hashmap(intArray55, 0);
        java.lang.Class<?> wildcardClass60 = intListList59.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray28), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray49), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test0487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0487");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem10.TwoPointer(intArray17, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem32 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem32.BruteForce(intArray35, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem20.Hashmap(intArray35, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem41 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray44 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem41.BruteForce(intArray44, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem40.Hashmap(intArray44, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem50.TwoPointer(intArray57, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem49.TwoPointer(intArray57, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem40.BruteForce(intArray57, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem20.TwoPointer(intArray57, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem10.TwoPointer(intArray57, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem0.Hashmap(intArray57, 1);
        java.lang.Class<?> wildcardClass70 = intArray57.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0488");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray8 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList10 = threeSumProblem1.TwoPointer(intArray8, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList12 = threeSumProblem0.TwoPointer(intArray8, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem13 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem13.Hashmap(intArray17, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem22.BruteForce(intArray25, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem13.TwoPointer(intArray25, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem39.BruteForce(intArray42, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem30.TwoPointer(intArray42, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem13.Hashmap(intArray42, (int) 'a');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem0.Hashmap(intArray42, (int) (byte) -1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem52 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray55 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem52.BruteForce(intArray55, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem51.Hashmap(intArray55, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem60 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray63 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList65 = threeSumProblem60.BruteForce(intArray63, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem51.TwoPointer(intArray63, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem69 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray72 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem69.BruteForce(intArray72, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem68.BruteForce(intArray72, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem51.TwoPointer(intArray72, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem79 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem80 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray83 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList85 = threeSumProblem80.BruteForce(intArray83, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList87 = threeSumProblem79.Hashmap(intArray83, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList89 = threeSumProblem51.BruteForce(intArray83, (int) (byte) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList91 = threeSumProblem0.BruteForce(intArray83, 1);
        java.lang.Class<?> wildcardClass92 = intArray83.getClass();
        org.junit.Assert.assertNotNull(intArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray8), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList10);
        org.junit.Assert.assertNotNull(intListList12);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray55), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray63), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList65);
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray83), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList85);
        org.junit.Assert.assertNotNull(intListList87);
        org.junit.Assert.assertNotNull(intListList89);
        org.junit.Assert.assertNotNull(intListList91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test0489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0489");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray20 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem17.BruteForce(intArray20, (int) '#');
        int[] intArray26 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem17.BruteForce(intArray26, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem17.Hashmap(intArray32, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        int[] intArray46 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem37.BruteForce(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem17.BruteForce(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.Hashmap(intArray46, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem55.TwoPointer(intArray62, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem54.TwoPointer(intArray62, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem68 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray71 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem68.BruteForce(intArray71, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList75 = threeSumProblem67.Hashmap(intArray71, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem76 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray84 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem77.TwoPointer(intArray84, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem76.TwoPointer(intArray84, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem67.BruteForce(intArray84, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList92 = threeSumProblem54.BruteForce(intArray84, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem53.Hashmap(intArray84, (int) (byte) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem0.Hashmap(intArray84, 1);
        java.lang.Class<?> wildcardClass97 = intListList96.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray20), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray71), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(intListList75);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(intListList92);
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(wildcardClass97);
    }

    @Test
    public void test0490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0490");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray18 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList20 = threeSumProblem15.BruteForce(intArray18, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList22 = threeSumProblem14.Hashmap(intArray18, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem23 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray26 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList28 = threeSumProblem23.BruteForce(intArray26, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList30 = threeSumProblem14.TwoPointer(intArray26, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList32 = threeSumProblem0.BruteForce(intArray26, (int) ' ');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem33 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem34.BruteForce(intArray37, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem33.BruteForce(intArray37, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem0.Hashmap(intArray37, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem44 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem44.Hashmap(intArray48, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem54 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray57 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList59 = threeSumProblem54.BruteForce(intArray57, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem53.Hashmap(intArray57, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem62 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray65 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList67 = threeSumProblem62.BruteForce(intArray65, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList69 = threeSumProblem53.TwoPointer(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList71 = threeSumProblem44.Hashmap(intArray65, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList73 = threeSumProblem0.BruteForce(intArray65, (-1));
        java.lang.Class<?> wildcardClass74 = intListList73.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray18), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList20);
        org.junit.Assert.assertNotNull(intListList22);
        org.junit.Assert.assertNotNull(intArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray26), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList28);
        org.junit.Assert.assertNotNull(intListList30);
        org.junit.Assert.assertNotNull(intListList32);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray57), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList59);
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray65), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList67);
        org.junit.Assert.assertNotNull(intListList69);
        org.junit.Assert.assertNotNull(intListList71);
        org.junit.Assert.assertNotNull(intListList73);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test0491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0491");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        int[] intArray15 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem6.BruteForce(intArray15, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem6.Hashmap(intArray21, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray35 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem26.BruteForce(intArray35, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem6.TwoPointer(intArray35, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.TwoPointer(intArray35, (int) (short) 0);
        java.lang.Class<?> wildcardClass42 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0492");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem18.TwoPointer(intArray25, (int) (short) 1);
        int[] intArray31 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem18.TwoPointer(intArray31, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray42 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem35.TwoPointer(intArray42, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem34.TwoPointer(intArray42, 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem18.BruteForce(intArray42, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem12.Hashmap(intArray42, (-1));
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem0.BruteForce(intArray42, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem53.BruteForce(intArray56, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem53.TwoPointer(intArray62, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem67 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray70 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem67.BruteForce(intArray70, (int) '#');
        int[] intArray76 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem67.BruteForce(intArray76, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem53.BruteForce(intArray76, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem0.BruteForce(intArray76, (int) (byte) 1);
        java.lang.Class<?> wildcardClass83 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray42), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray70), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test0493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0493");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray41 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList43 = threeSumProblem34.TwoPointer(intArray41, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem0.TwoPointer(intArray41, 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem46 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray53 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem46.TwoPointer(intArray53, (int) (short) 1);
        int[] intArray59 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList61 = threeSumProblem46.TwoPointer(intArray59, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList63 = threeSumProblem0.Hashmap(intArray59, (int) (short) 1);
        java.lang.Class<?> wildcardClass64 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray41), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList43);
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray53), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray59), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList61);
        org.junit.Assert.assertNotNull(intListList63);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test0494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0494");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem9.Hashmap(intArray13, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem9.TwoPointer(intArray21, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.Hashmap(intArray21, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray31 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem28.BruteForce(intArray31, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList35 = threeSumProblem0.TwoPointer(intArray31, (int) (short) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem36 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray39 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem36.BruteForce(intArray39, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem42 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray45 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem42.BruteForce(intArray45, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem36.TwoPointer(intArray45, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem50 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem51 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray54 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem51.BruteForce(intArray54, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem50.Hashmap(intArray54, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem59 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray62 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem59.BruteForce(intArray62, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem50.TwoPointer(intArray62, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem36.BruteForce(intArray62, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem0.Hashmap(intArray62, (int) (short) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem71 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray74 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem71.BruteForce(intArray74, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem77 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray80 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList82 = threeSumProblem77.BruteForce(intArray80, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem71.TwoPointer(intArray80, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem0.BruteForce(intArray80, (int) (short) 1);
        java.lang.Class<?> wildcardClass87 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray31), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intListList35);
        org.junit.Assert.assertNotNull(intArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray39), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(intArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray45), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray80), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList82);
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test0495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0495");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem15 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray22 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList24 = threeSumProblem15.TwoPointer(intArray22, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList26 = threeSumProblem14.TwoPointer(intArray22, (int) (byte) 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem27 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray35 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem28.TwoPointer(intArray35, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem27.TwoPointer(intArray35, (int) (byte) 0);
        int[] intArray44 = new int[] { 'a', (short) 0, (byte) -1, 'a' };
        java.util.List<java.util.List<java.lang.Integer>> intListList46 = threeSumProblem27.Hashmap(intArray44, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem14.Hashmap(intArray44, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem55 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray58 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList60 = threeSumProblem55.BruteForce(intArray58, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem49.TwoPointer(intArray58, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem63 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray66 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem63.BruteForce(intArray66, (int) '#');
        int[] intArray72 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList74 = threeSumProblem63.BruteForce(intArray72, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem49.BruteForce(intArray72, (int) '4');
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem14.TwoPointer(intArray72, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem79 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray86 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem79.TwoPointer(intArray86, (int) (short) 1);
        int[] intArray92 = new int[] { (byte) 10, ' ', (byte) 1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList94 = threeSumProblem79.TwoPointer(intArray92, 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList96 = threeSumProblem14.TwoPointer(intArray92, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList98 = threeSumProblem0.BruteForce(intArray92, (-1));
        java.lang.Class<?> wildcardClass99 = intListList98.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray22), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList24);
        org.junit.Assert.assertNotNull(intListList26);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray44), "[-1, 0, 97, 97]");
        org.junit.Assert.assertNotNull(intListList46);
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray58), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList60);
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray66), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(intArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray72), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList74);
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intArray86);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray86), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intArray92);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray92), "[1, 10, 32]");
        org.junit.Assert.assertNotNull(intListList94);
        org.junit.Assert.assertNotNull(intListList96);
        org.junit.Assert.assertNotNull(intListList98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0496");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        int[] intArray15 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem6.BruteForce(intArray15, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem6.Hashmap(intArray21, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        int[] intArray35 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList37 = threeSumProblem26.BruteForce(intArray35, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem6.TwoPointer(intArray35, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList41 = threeSumProblem0.TwoPointer(intArray35, (int) (short) 0);
        java.lang.Class<?> wildcardClass42 = intListList41.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray35), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList37);
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intListList41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test0497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0497");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray7 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList9 = threeSumProblem0.TwoPointer(intArray7, (int) (short) 1);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem10 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray13 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList15 = threeSumProblem10.BruteForce(intArray13, (int) '#');
        int[] intArray19 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList21 = threeSumProblem10.BruteForce(intArray19, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem22 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray25 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem22.BruteForce(intArray25, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList29 = threeSumProblem10.Hashmap(intArray25, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem30 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem31 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray34 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem31.BruteForce(intArray34, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList38 = threeSumProblem30.Hashmap(intArray34, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem39 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray47 = new int[] { 'a', 0, (byte) 10, (byte) 1, (short) 10, (byte) -1 };
        java.util.List<java.util.List<java.lang.Integer>> intListList49 = threeSumProblem40.TwoPointer(intArray47, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList51 = threeSumProblem39.TwoPointer(intArray47, (int) (byte) 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList53 = threeSumProblem30.BruteForce(intArray47, (int) (short) 1);
        java.util.List<java.util.List<java.lang.Integer>> intListList55 = threeSumProblem10.TwoPointer(intArray47, (int) (byte) 10);
        java.util.List<java.util.List<java.lang.Integer>> intListList57 = threeSumProblem0.TwoPointer(intArray47, (int) (byte) 10);
        java.lang.Class<?> wildcardClass58 = intListList57.getClass();
        org.junit.Assert.assertNotNull(intArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray7), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList9);
        org.junit.Assert.assertNotNull(intArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray13), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList15);
        org.junit.Assert.assertNotNull(intArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray19), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList21);
        org.junit.Assert.assertNotNull(intArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray25), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intListList29);
        org.junit.Assert.assertNotNull(intArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray34), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intListList38);
        org.junit.Assert.assertNotNull(intArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray47), "[-1, 0, 1, 10, 10, 97]");
        org.junit.Assert.assertNotNull(intListList49);
        org.junit.Assert.assertNotNull(intListList51);
        org.junit.Assert.assertNotNull(intListList53);
        org.junit.Assert.assertNotNull(intListList55);
        org.junit.Assert.assertNotNull(intListList57);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test0498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0498");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem6 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray9 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem6.BruteForce(intArray9, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList13 = threeSumProblem0.TwoPointer(intArray9, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem14 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray17 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem14.BruteForce(intArray17, (int) '#');
        int[] intArray23 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem14.BruteForce(intArray23, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList27 = threeSumProblem0.BruteForce(intArray23, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem28 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem29 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray32 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList34 = threeSumProblem29.BruteForce(intArray32, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList36 = threeSumProblem28.Hashmap(intArray32, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem37 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray40 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem37.BruteForce(intArray40, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList44 = threeSumProblem28.TwoPointer(intArray40, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem45 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray48 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem45.BruteForce(intArray48, (int) '#');
        int[] intArray54 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem45.BruteForce(intArray54, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem45.Hashmap(intArray60, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        int[] intArray74 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList76 = threeSumProblem65.BruteForce(intArray74, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem45.BruteForce(intArray74, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList80 = threeSumProblem28.Hashmap(intArray74, (int) ' ');
        int[] intArray84 = new int[] { (byte) 0, (byte) 10, 10 };
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem28.BruteForce(intArray84, (int) (short) 100);
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem0.Hashmap(intArray84, 1);
        java.lang.Class<?> wildcardClass89 = threeSumProblem0.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intListList13);
        org.junit.Assert.assertNotNull(intArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray17), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intListList27);
        org.junit.Assert.assertNotNull(intArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray32), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList34);
        org.junit.Assert.assertNotNull(intListList36);
        org.junit.Assert.assertNotNull(intArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray40), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intListList44);
        org.junit.Assert.assertNotNull(intArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray48), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray54), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray74), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList76);
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intListList80);
        org.junit.Assert.assertNotNull(intArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray84), "[0, 10, 10]");
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test0499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0499");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem1 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray4 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList6 = threeSumProblem1.BruteForce(intArray4, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList8 = threeSumProblem0.Hashmap(intArray4, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem9 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray12 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList14 = threeSumProblem9.BruteForce(intArray12, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList16 = threeSumProblem0.TwoPointer(intArray12, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem17 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem18 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray21 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList23 = threeSumProblem18.BruteForce(intArray21, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem17.Hashmap(intArray21, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem26 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray29 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem26.BruteForce(intArray29, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem17.TwoPointer(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem35 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray38 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList40 = threeSumProblem35.BruteForce(intArray38, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList42 = threeSumProblem34.Hashmap(intArray38, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem43 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray46 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList48 = threeSumProblem43.BruteForce(intArray46, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList50 = threeSumProblem34.TwoPointer(intArray46, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList52 = threeSumProblem17.Hashmap(intArray46, (int) 'a');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem53 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray56 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList58 = threeSumProblem53.BruteForce(intArray56, (int) '#');
        int[] intArray62 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem53.BruteForce(intArray62, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem65 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray68 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList70 = threeSumProblem65.BruteForce(intArray68, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList72 = threeSumProblem53.Hashmap(intArray68, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem73 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray76 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList78 = threeSumProblem73.BruteForce(intArray76, (int) '#');
        int[] intArray82 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList84 = threeSumProblem73.BruteForce(intArray82, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList86 = threeSumProblem53.TwoPointer(intArray82, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList88 = threeSumProblem17.Hashmap(intArray82, (int) (byte) -1);
        java.util.List<java.util.List<java.lang.Integer>> intListList90 = threeSumProblem0.TwoPointer(intArray82, (-1));
        java.lang.Class<?> wildcardClass91 = intListList90.getClass();
        org.junit.Assert.assertNotNull(intArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray4), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList6);
        org.junit.Assert.assertNotNull(intListList8);
        org.junit.Assert.assertNotNull(intArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray12), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList14);
        org.junit.Assert.assertNotNull(intListList16);
        org.junit.Assert.assertNotNull(intArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray21), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList23);
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray38), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList40);
        org.junit.Assert.assertNotNull(intListList42);
        org.junit.Assert.assertNotNull(intArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray46), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList48);
        org.junit.Assert.assertNotNull(intListList50);
        org.junit.Assert.assertNotNull(intListList52);
        org.junit.Assert.assertNotNull(intArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray56), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList58);
        org.junit.Assert.assertNotNull(intArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray62), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray68), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList70);
        org.junit.Assert.assertNotNull(intListList72);
        org.junit.Assert.assertNotNull(intArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray76), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList78);
        org.junit.Assert.assertNotNull(intArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray82), "[0, 10, 100]");
        org.junit.Assert.assertNotNull(intListList84);
        org.junit.Assert.assertNotNull(intListList86);
        org.junit.Assert.assertNotNull(intListList88);
        org.junit.Assert.assertNotNull(intListList90);
        org.junit.Assert.assertNotNull(wildcardClass91);
    }

    @Test
    public void test0500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test0500");
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem0 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray3 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList5 = threeSumProblem0.BruteForce(intArray3, (int) '#');
        int[] intArray9 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList11 = threeSumProblem0.BruteForce(intArray9, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem12 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray15 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList17 = threeSumProblem12.BruteForce(intArray15, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList19 = threeSumProblem0.Hashmap(intArray15, (int) (byte) 100);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem20 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray23 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList25 = threeSumProblem20.BruteForce(intArray23, (int) '#');
        int[] intArray29 = new int[] { (byte) 100, (byte) 10, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList31 = threeSumProblem20.BruteForce(intArray29, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList33 = threeSumProblem0.BruteForce(intArray29, 0);
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem34 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray37 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList39 = threeSumProblem34.BruteForce(intArray37, (int) '#');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem40 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray43 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList45 = threeSumProblem40.BruteForce(intArray43, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList47 = threeSumProblem34.TwoPointer(intArray43, (int) '4');
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem48 = new com.thealgorithms.misc.ThreeSumProblem();
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem49 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray52 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList54 = threeSumProblem49.BruteForce(intArray52, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList56 = threeSumProblem48.Hashmap(intArray52, (-1));
        com.thealgorithms.misc.ThreeSumProblem threeSumProblem57 = new com.thealgorithms.misc.ThreeSumProblem();
        int[] intArray60 = new int[] { (short) -1, (short) 0 };
        java.util.List<java.util.List<java.lang.Integer>> intListList62 = threeSumProblem57.BruteForce(intArray60, (int) '#');
        java.util.List<java.util.List<java.lang.Integer>> intListList64 = threeSumProblem48.TwoPointer(intArray60, 0);
        java.util.List<java.util.List<java.lang.Integer>> intListList66 = threeSumProblem34.BruteForce(intArray60, (int) ' ');
        java.util.List<java.util.List<java.lang.Integer>> intListList68 = threeSumProblem0.BruteForce(intArray60, (int) (byte) 1);
        java.lang.Class<?> wildcardClass69 = intArray60.getClass();
        org.junit.Assert.assertNotNull(intArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray3), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList5);
        org.junit.Assert.assertNotNull(intArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray9), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList11);
        org.junit.Assert.assertNotNull(intArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray15), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList17);
        org.junit.Assert.assertNotNull(intListList19);
        org.junit.Assert.assertNotNull(intArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray23), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList25);
        org.junit.Assert.assertNotNull(intArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray29), "[100, 10, 0]");
        org.junit.Assert.assertNotNull(intListList31);
        org.junit.Assert.assertNotNull(intListList33);
        org.junit.Assert.assertNotNull(intArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray37), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList39);
        org.junit.Assert.assertNotNull(intArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray43), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList45);
        org.junit.Assert.assertNotNull(intListList47);
        org.junit.Assert.assertNotNull(intArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray52), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList54);
        org.junit.Assert.assertNotNull(intListList56);
        org.junit.Assert.assertNotNull(intArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(intArray60), "[-1, 0]");
        org.junit.Assert.assertNotNull(intListList62);
        org.junit.Assert.assertNotNull(intListList64);
        org.junit.Assert.assertNotNull(intListList66);
        org.junit.Assert.assertNotNull(intListList68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }
}

